<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>形態素解析 on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/%E5%BD%A2%E6%85%8B%E7%B4%A0%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 形態素解析 on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 20 Jul 2011 12:29:00 +0900</lastBuildDate><atom:link href="https://blog.johtani.info/tags/%E5%BD%A2%E6%85%8B%E7%B4%A0%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kuromojiを調べてみた(Jugemより移植)</title>
      <link>https://blog.johtani.info/blog/2011/07/20/kuromoji%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Wed, 20 Jul 2011 12:29:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2011/07/20/kuromoji%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>以前から春山さんのブログ（リンク）や勉強会で耳にはしていたのですがソースは読んでいませんでした。 先日、Luceneにcontributeされ</description>
      <content:encoded><p>以前から<a href="http://blog.livedoor.jp/haruyama_seigo/archives/51806436.html">春山さんのブログ（リンク）</a>や勉強会で耳にはしていたのですがソースは読んでいませんでした。
先日、<a href="https://issues.apache.org/jira/browse/LUCENE-3305">Luceneにcontributeされた（リンク）</a>ので軽くソースを読んでみました。</p>
<p><a href="http://atilika.org/">公式サイトはこちら</a></p>
<p>まずはMeCabのページにある<a href="http://mecab.sourceforge.net/#diff">比較表（リンク）</a>を基準に特徴を調べてみました。せっかくなので、lucene-gosenも隣に。</p>
<table class="list_view">
<thead>
<tr>
<th>&nbsp;</th>
<th>Kuromoji</th>
<th>lucene-gosen</th>
</tr>
</thead>
<tbody>
<tr class="spec">
<td>解析モデル</td>
<td>なし（学習機能なし）</td>
<td>なし（学習機能なし）</td>
</tr>
<tr class="specalt">
<td class="alt">コスト推定</td>
<td class="alt">なし（学習機能なし）</td>
<td class="alt">なし（学習機能なし）</td>
</tr>
<tr class="spec">
<td>学習モデル</td>
<td>なし（学習機能なし）</td>
<td>なし（学習機能なし）</td>
</tr>
<tr class="specalt">
<td class="alt">辞書引きアルゴリズム</td>
<td class="alt">Double Array Trie</td>
<td class="alt">Double Array Trie</td>
</tr>
<tr class="spec">
<td>解探索アルゴリズム</td>
<td>Viterbi</td>
<td>Viterbi</td>
</tr>
<tr class="specalt">
<td class="alt">連接表の実装</td>
<td class="alt">2次元 Table</td>
<td class="alt">3次元 Table</td>
</tr>
<tr class="spec">
<td>品詞の階層</td>
<td>無制限多階層品詞？ipadic、unidic形式に対応</td>
<td>無制限多階層品詞</td>
</tr>
<tr class="specalt">
<td class="alt">未知語処理</td>
<td class="alt">字種 (動作定義を変更可能)（おそらく。）</td>
<td class="alt">字種（変更不可能）</td>
</tr>
<tr class="spec">
<td>制約つき解析</td>
<td>たぶん、不可？</td>
<td>たぶん、不可？</td>
</tr>
<tr class="specalt">
<td class="alt">N-best解</td>
<td class="alt">不可能</td>
<td class="alt">不可能</td>
</tr>
</tbody>
</table>
<p>こうやって比較してみるとlucene-gosen（Sen）とあまりかわりはありませんが、lucene-gosenが少し古いのがわかりますね。。。</p>
<p>Kuromojiで利用出来る辞書は現時点ではMeCab IPADIC、UNIDICの2種類のようです。</p>
<p>ソースを読んでの感想ですが、やはりMeCabが偉大だということがよくわかりました。
Senよりも新しいMeCabの処理に似ている点が多いです。解探索アルゴリズムや連接コスト表が特に。
MeCab向けの辞書を利用しているためというのもあるかと思います。</p>
<p>Kuromojiが特徴的なのは「searchモード」と呼ばれるモードが用意されていることです。
公式サイトにある例ですと、「関西国際空港」が「関西」「国際」「空港」というTokenで出力されます。
ソースを見たところViterbiアルゴリズムで辞書を探索しているときに特定の条件でコストをカサ増しすることで、結果を変えるという処理を行っているようです。</p>
<ul>
<li>全て漢字の単語：3文字以上の場合に「(単語の長さ-3)*10000」をコストに加算</li>
<li>その他の単語：7文字以上の場合に「(単語の長さ-7)*10000」をコストに加算</li>
</ul>
<p>このようにコストを変化させることで「空港」でも「関西国際空港」という文字を含む文章が検索できる仕組みになっています。
また、「拡張searchモード」と呼ばれるモードも存在し、こちらは、未知語をuni-gramで区切って出力を行うようです。</p>
<p>ソース上で確認しただけで、未確認ですが、GraphvizFormatterというクラスがあるので、Graphvizで読み込める形式で形態素解析の結果が出力されるかもしれません。（すみません、確認してなくて。）</p>
<p>未知語の処理やsearchモードなど面白い機能があるので、試してみるのもいいかもしれません。lucene-gosenを考えていく上でも参考になりそうです。</p>
<p>最後に余談ですが、<a href="http://atilika.org/confluence/display/KUROMOJI/FAQ">FAQのページ（リンク）</a>が面白いです。。。</p>
</content:encoded>
    </item>
    
  </channel>
</rss>
