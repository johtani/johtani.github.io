<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>形態素解析 on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/%E5%BD%A2%E6%85%8B%E7%B4%A0%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 形態素解析 on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 20 Jul 2011 12:29:00 +0900</lastBuildDate><atom:link href="https://blog.johtani.info/tags/%E5%BD%A2%E6%85%8B%E7%B4%A0%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kuromojiを調べてみた(Jugemより移植)</title>
      <link>https://blog.johtani.info/blog/2011/07/20/kuromoji%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Wed, 20 Jul 2011 12:29:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2011/07/20/kuromoji%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>以前から春山さんのブログ（リンク）や勉強会で耳にはしていたのですがソースは読んでいませんでした。 先日、Luceneにcontributeされ</description>
      <content:encoded>&lt;p&gt;以前から&lt;a href=&#34;http://blog.livedoor.jp/haruyama_seigo/archives/51806436.html&#34;&gt;春山さんのブログ（リンク）&lt;/a&gt;や勉強会で耳にはしていたのですがソースは読んでいませんでした。
先日、&lt;a href=&#34;https://issues.apache.org/jira/browse/LUCENE-3305&#34;&gt;Luceneにcontributeされた（リンク）&lt;/a&gt;ので軽くソースを読んでみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://atilika.org/&#34;&gt;公式サイトはこちら&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;まずはMeCabのページにある&lt;a href=&#34;http://mecab.sourceforge.net/#diff&#34;&gt;比較表（リンク）&lt;/a&gt;を基準に特徴を調べてみました。せっかくなので、lucene-gosenも隣に。&lt;/p&gt;
&lt;table class=&#34;list_view&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;nbsp;&lt;/th&gt;
&lt;th&gt;Kuromoji&lt;/th&gt;
&lt;th&gt;lucene-gosen&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;spec&#34;&gt;
&lt;td&gt;解析モデル&lt;/td&gt;
&lt;td&gt;なし（学習機能なし）&lt;/td&gt;
&lt;td&gt;なし（学習機能なし）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;specalt&#34;&gt;
&lt;td class=&#34;alt&#34;&gt;コスト推定&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;なし（学習機能なし）&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;なし（学習機能なし）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;spec&#34;&gt;
&lt;td&gt;学習モデル&lt;/td&gt;
&lt;td&gt;なし（学習機能なし）&lt;/td&gt;
&lt;td&gt;なし（学習機能なし）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;specalt&#34;&gt;
&lt;td class=&#34;alt&#34;&gt;辞書引きアルゴリズム&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;Double Array Trie&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;Double Array Trie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;spec&#34;&gt;
&lt;td&gt;解探索アルゴリズム&lt;/td&gt;
&lt;td&gt;Viterbi&lt;/td&gt;
&lt;td&gt;Viterbi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;specalt&#34;&gt;
&lt;td class=&#34;alt&#34;&gt;連接表の実装&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;2次元 Table&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;3次元 Table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;spec&#34;&gt;
&lt;td&gt;品詞の階層&lt;/td&gt;
&lt;td&gt;無制限多階層品詞？ipadic、unidic形式に対応&lt;/td&gt;
&lt;td&gt;無制限多階層品詞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;specalt&#34;&gt;
&lt;td class=&#34;alt&#34;&gt;未知語処理&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;字種 (動作定義を変更可能)（おそらく。）&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;字種（変更不可能）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;spec&#34;&gt;
&lt;td&gt;制約つき解析&lt;/td&gt;
&lt;td&gt;たぶん、不可？&lt;/td&gt;
&lt;td&gt;たぶん、不可？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;specalt&#34;&gt;
&lt;td class=&#34;alt&#34;&gt;N-best解&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;不可能&lt;/td&gt;
&lt;td class=&#34;alt&#34;&gt;不可能&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;こうやって比較してみるとlucene-gosen（Sen）とあまりかわりはありませんが、lucene-gosenが少し古いのがわかりますね。。。&lt;/p&gt;
&lt;p&gt;Kuromojiで利用出来る辞書は現時点ではMeCab IPADIC、UNIDICの2種類のようです。&lt;/p&gt;
&lt;p&gt;ソースを読んでの感想ですが、やはりMeCabが偉大だということがよくわかりました。
Senよりも新しいMeCabの処理に似ている点が多いです。解探索アルゴリズムや連接コスト表が特に。
MeCab向けの辞書を利用しているためというのもあるかと思います。&lt;/p&gt;
&lt;p&gt;Kuromojiが特徴的なのは「searchモード」と呼ばれるモードが用意されていることです。
公式サイトにある例ですと、「関西国際空港」が「関西」「国際」「空港」というTokenで出力されます。
ソースを見たところViterbiアルゴリズムで辞書を探索しているときに特定の条件でコストをカサ増しすることで、結果を変えるという処理を行っているようです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全て漢字の単語：3文字以上の場合に「(単語の長さ-3)*10000」をコストに加算&lt;/li&gt;
&lt;li&gt;その他の単語：7文字以上の場合に「(単語の長さ-7)*10000」をコストに加算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このようにコストを変化させることで「空港」でも「関西国際空港」という文字を含む文章が検索できる仕組みになっています。
また、「拡張searchモード」と呼ばれるモードも存在し、こちらは、未知語をuni-gramで区切って出力を行うようです。&lt;/p&gt;
&lt;p&gt;ソース上で確認しただけで、未確認ですが、GraphvizFormatterというクラスがあるので、Graphvizで読み込める形式で形態素解析の結果が出力されるかもしれません。（すみません、確認してなくて。）&lt;/p&gt;
&lt;p&gt;未知語の処理やsearchモードなど面白い機能があるので、試してみるのもいいかもしれません。lucene-gosenを考えていく上でも参考になりそうです。&lt;/p&gt;
&lt;p&gt;最後に余談ですが、&lt;a href=&#34;http://atilika.org/confluence/display/KUROMOJI/FAQ&#34;&gt;FAQのページ（リンク）&lt;/a&gt;が面白いです。。。&lt;/p&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
