<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>elsaticsearch on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/elsaticsearch/</link>
    <description>Recent content in elsaticsearch on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 25 Sep 2023 03:32:24 +0000</lastBuildDate><atom:link href="https://blog.johtani.info/tags/elsaticsearch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>機械学習による検索ランキング改善ガイドを読みました</title>
      <link>https://blog.johtani.info/blog/2023/09/25/read-search-raking-guide/</link>
      <pubDate>Mon, 25 Sep 2023 03:32:24 +0000</pubDate>
      
      <guid>https://blog.johtani.info/blog/2023/09/25/read-search-raking-guide/</guid>
      <description>著者の鈴木さんより献本いただいたのを読み終わったのでレビューと、あとおまけです。 紹介とレビュー どんな本なのか？は打田さんが書かれたブログ、「</description>
      <content:encoded>&lt;p&gt;著者の鈴木さんより献本いただいたのを読み終わったのでレビューと、あとおまけです。&lt;/p&gt;
&lt;h2 id=&#34;紹介とレビュー&#34;&gt;紹介とレビュー&lt;/h2&gt;
&lt;p&gt;どんな本なのか？は打田さんが書かれたブログ、「&lt;a href=&#34;https://medium.com/@mocobeta/%E3%83%96%E3%83%83%E3%82%AF%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC-%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%81%AB%E3%82%88%E3%82%8B%E6%A4%9C%E7%B4%A2%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E6%94%B9%E5%96%84%E3%82%AC%E3%82%A4%E3%83%89-295fa4ec780f&#34;&gt;ブックレビュー：『機械学習による検索ランキング改善ガイド』 - Tomoko Uchida - Medium&lt;/a&gt;」に詳しく書かれているので、そちらも参考にしてもらうほうがわかりやすいと思います（丸投げ）。&lt;/p&gt;
&lt;p&gt;読みながらいくつかツイートしていたので、そちらも参考のために貼っておきいます。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;オライリーの検索ランキング本、負荷テストのことも書いてある、すごい&lt;a href=&#34;https://t.co/YPnB6kxFY2&#34;&gt;https://t.co/YPnB6kxFY2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jun Ohtani (@johtani) &lt;a href=&#34;https://twitter.com/johtani/status/1695981601858232661?ref_src=twsrc%5Etfw&#34;&gt;August 28, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;私のレビュー&#34;&gt;私のレビュー&lt;/h3&gt;
&lt;p&gt;わかりやすく検索の基本を紹介しつつ、本書のメインであるランキング改善について全体の流れが書かれています。
ランキング改善のやり方といっても、手法の話だけではなく、プロジェクトとしてどの様に進めていくべきなのか？また、関係するものはどんなものがあり（システムだけではなくチームについても書かれていたり）、どういう判断をもちながら運用していくのか？、負荷テストにまで言及されています。&lt;/p&gt;
&lt;p&gt;読んでいて特に私が気に入ったのは以下のような話でした&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ランキング改善を進める前にきちんと解ける問題なのか？それ以前にやることはないのかを考えましょう
&lt;ul&gt;
&lt;li&gt;マッチング改善についても少しだけ触れられているが、メインはランキングについてだと明記されている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;実際に体験されたのであろう落とし穴の話&lt;/li&gt;
&lt;li&gt;負荷テストについて1章設けてある！
&lt;ul&gt;
&lt;li&gt;ハンズオンのパートでもレイテンシの話がされている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;付録としてベクトル検索についても触れてある&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;日本語でまとまって読める本があるのは本当に幸せですよね。&lt;/p&gt;
&lt;h2 id=&#34;おまけ&#34;&gt;おまけ&lt;/h2&gt;
&lt;p&gt;書籍ではハンズオンで、Elasticsearchと&lt;a href=&#34;https://github.com/o19s/elasticsearch-learning-to-rank&#34;&gt;ランキング学習のプラグインであるelasticsearch-learning-to-rank&lt;/a&gt;を利用しています（GitHubにサンプルが公開されています）。
書籍ではElasticsearchが7.13.4、プラグインが1.5.7-es7.13.4というバージョンになっていました。&lt;/p&gt;
&lt;p&gt;ブログを書いている時点でのElasticsearchは8.x系になっています。せっかくなので、書籍を読みながら現時点で最新のものに置き換えてみるというのをやってみました。&lt;/p&gt;
&lt;p&gt;Elasticsearchは8.10.2が最新なのですが、ランキング学習のプラグインはサードパティ製で、1.5.8-es8.8.2が最新版となっています。
ハンズオンのサンプルコードをフォークして、以下の構成にして動くようにしてみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch : 8.8.2&lt;/li&gt;
&lt;li&gt;learning-to-rankプラグイン : 1.5.8-es8.8.2&lt;/li&gt;
&lt;li&gt;Kibana : 8.8.2&lt;/li&gt;
&lt;li&gt;Python : 3.10&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;elasticsearchプラグインkibanaのアップグレード&#34;&gt;Elasticsearch、プラグイン、Kibanaのアップグレード&lt;/h3&gt;
&lt;p&gt;Elastic社が提供しているDockerイメージが利用されているので、バージョン番号を書き換えました。
あとは、learning-to-rankプラグインのバージョンを書き換えるついでに、elasticsearch-pluginコマンドで直接ダウンロードさせる形に書き換えました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/search-engine/Dockerfile&#34;&gt;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/search-engine/Dockerfile&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;python310にアップグレード&#34;&gt;Python3.10にアップグレード&lt;/h3&gt;
&lt;p&gt;本当は必要なかったのですが、Pythonのイメージもついでに3.10にしました。
ただ、このおかげでインストールされるXGBoostのバージョンも1系から2系に上がってしまい、XGBoostを利用してモデル生成をする処理でエラーが出るようになってしまいました。。。&lt;/p&gt;
&lt;p&gt;2系へのアップグレードは手間がかかりそうだということで、pipコマンドでのインストールでのバージョンを&lt;code&gt;&amp;lt;2&lt;/code&gt;として、1系をインストールすることで回避しました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/workspace/Dockerfile&#34;&gt;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/workspace/Dockerfile&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;elasticsearch-pyのアップグレード&#34;&gt;elasticsearch-pyのアップグレード&lt;/h3&gt;
&lt;p&gt;Elasticsearchを8系にしたので、クライアントライブラリ側も8系に書き換えました（元は7.17以下に固定されていた）。
pipで7系に固定されていたものを外して最新のもの（8系）をインストールするようにしました。
これだけでも特に問題なく動いたのですが、「DeprecationWarning」が出ている部分が1か所だけあります（サンプルではDeprecationWarningが出力されない形になっていましたが、出力するように変更しました）。&lt;/p&gt;
&lt;p&gt;Elastic公式のドキュメントに&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/migration.html&#34;&gt;Migrate to 8.0&lt;/a&gt;というページが公開されています。Pythonクライアントのアップグレードを行う際はこちらを参考にすると指針が記載されています。&lt;/p&gt;
&lt;p&gt;今回のサンプルコードでは&lt;code&gt;search&lt;/code&gt;の時の引数として&lt;code&gt;body&lt;/code&gt;を渡していたのですが、8系のクライアントライブラリからこちらが廃止になり、&lt;code&gt;query&lt;/code&gt;や&lt;code&gt;rescore&lt;/code&gt;など個別の引数を渡す形に変更されています（&lt;a href=&#34;https://elasticsearch-py.readthedocs.io/en/v8.10.0/api.html#elasticsearch.Elasticsearch.search&#34;&gt;search APIのリファレンス&lt;/a&gt;）。
ですので、&lt;code&gt;body&lt;/code&gt;を&lt;code&gt;**body&lt;/code&gt;でアンパックして渡すようにしただけです。サンプルコードがわかりやすく書かれているので変更も少しで済みました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/workspace/collect_responses.py#L59&#34;&gt;https://github.com/johtani/building-search-app-w-ml/blob/es8/part2/app/workspace/collect_responses.py#L59&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一応、これでエラーが出ないで動きました。
すべて適用した、フォークして修正したブランチは&lt;a href=&#34;https://github.com/johtani/building-search-app-w-ml/tree/es8&#34;&gt;https://github.com/johtani/building-search-app-w-ml/tree/es8&lt;/a&gt;で公開しています。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;すごくわかりやすいうえに、手を動かしながらどんなデータを使ってどんなことをやるのかが体験できる良い本でした。
理論的な話だけでなく、システムとしてどういうものが必要で、どういうことをやらないといけないのか？というのがわかるのがイメージできるのは重要だと思います。&lt;/p&gt;
&lt;p&gt;最後は広告ですが、ランキング改善以外の検索システムについて学べる本を&lt;a href=&#34;https://www.lambdanote.com/collections/frontpage/products/ir-system&#34;&gt;検索システム ― 実務者のための開発改善ガイドブック – 技術書出版と販売のラムダノート&lt;/a&gt;出していますので、こちらも参考書として読んでいただけるとうれしいです。&lt;/p&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
