<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>Watcher on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/watcher/</link>
    <description>Recent content in Watcher on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 30 Oct 2015 16:21:31 +0900</lastBuildDate><atom:link href="https://blog.johtani.info/tags/watcher/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shield、Watcher、Marvel 2.0.0 GAリリース（日本語訳）</title>
      <link>https://blog.johtani.info/blog/2015/10/30/shield-watcher-and-marvel-2-0-ga-released-ja/</link>
      <pubDate>Fri, 30 Oct 2015 16:21:31 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2015/10/30/shield-watcher-and-marvel-2-0-ga-released-ja/</guid>
      <description>※この記事は次のブログを翻訳したものになります。 原文：Shield, Watcher, and Marvel 2.0.0 GA Released 本日（10/28）Shield、WatcherおよびMarv</description>
      <content:encoded>&lt;p&gt;&lt;strong&gt;※この記事は次のブログを翻訳したものになります。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;Shield, Watcher, and Marvel 2.0.0 GA Released&lt;/a&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;本日（10/28）Shield、WatcherおよびMarvel 2.0をリリースしました。
これが、&lt;a href=&#34;https://www.elastic.co/blog/elasticsearch-2-0-0-released&#34;&gt;Elasticsearch 2.0&lt;/a&gt;に対応したこれらのプラグインの最初のリリースです。&lt;/p&gt;
&lt;p&gt;Elasticsearch 2.0対応のほかに、ShieldとWatcher 2.0は、
セキュリティとアラートを拡張するいくつかの新しい素敵な機能も備えています。&lt;/p&gt;
&lt;h2 id=&#34;shield&#34;&gt;Shield&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;拡張可能なレルム - Sheild 1.xはユーザ認証のコア的なものを定義するのにフォーカスし
3つの認証メカニズム（&lt;em&gt;esusers&lt;/em&gt;、LDAP/AD、PKI）を提供しました。
これらを提供することで、多くのユーザおよびユースケースをカバー出来ましたが、
追加の認証メカニズムを統合する必要があることもわかっていました。
ということで、Shieldのレルムベースの認証システムをユーザが利用、拡張できるようにオープンにし、
ユーザ認証を扱うためのレルム実装をプラグインとして拡張できるようにしました。
特定もしくはプロプライエタリな認証メカニズムが必要なユーザもShieldの強力な
セキュリティ機能（ロールベースの認証、セキュアな通信など）をフルに活用できるようになりました。
カスタムレルムの詳細については、&lt;a href=&#34;https://www.elastic.co/guide/en/shield/current/custom-realms.html&#34;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;フィールドとドキュメントのACL - Shield 2.0はフィールドとドキュメントレベルのアクセス制御機能を提供します。
これは、ロールごとにアクセス可能なフィールドやドキュメントを定義できます。
この新しい機能は、設定の変更するよりも便利です。
このアクセス制御はElasticsearchのLuceneインデックスという最も低レベルで実装されています。
その結果として、このメンテナンスがより簡単であるだけでなく、より良くなっています。
詳細については&lt;a href=&#34;https://www.elastic.co/guide/en/shield/current/setting-up-field-and-document-level-security.html&#34;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ユーザなりすまし - Shield 2.0で、ユーザなりすましの機能が実装されました。
これは、ユーザ（適切なパーミッションを持った）が、他のユーザになることができ、
それらのユーザのためにリクエストを実行できます。
これは、Elasticsearch上に構築されたアプリケーションがすでにユーザ認証を行いますが、
認可はElasticsearchサイドで行う必要があるような場合に有用です。
このシナリオで、アプリケーションの&amp;quot;main&amp;quot;ユーザを設定でき、正しくなりすましを割り当て、
ElasticsearchにアプリケーションユーザとしてリクエストをElasticsearchに実行させることができます。
詳細については、&lt;a href=&#34;https://www.elastic.co/guide/en/shield/current/submitting-requests-for-other-users.html&#34;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;watcher&#34;&gt;Watcher&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SlackとHipChatインテグレーション - SlackとHipChatはチーム/グループコラボレーションツールです。
これらは、急速に主流になり、組織の主な内部コミュニケーションハブとなっています。
Watcher 2.0はチャンネル/ルームやユーザにこれらのコミュニケーションチャネル経由で、Watchの通知を行うことができるアクションを
実装しました。
&lt;a href=&#34;https://www.elastic.co/guide/en/watcher/current/configuring-slack.html&#34;&gt;slack&lt;/a&gt;や&lt;a href=&#34;https://www.elastic.co/guide/en/watcher/current/configuring-hipchat.html&#34;&gt;hipchat&lt;/a&gt;アクションについてはドキュメントをご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Array Compare Condition - 新しいconditionはタイムシリーズのデータのスパイクを検知するのを簡単にします。
&lt;a href=&#34;https://www.elastic.co/guide/en/watcher/current/condition.html#condition-compare&#34;&gt;compare&lt;/a&gt; conditionは1.xで導入されましたが、このコンディションはElasticsearchのダイナミックスクリプト機能を有効にする必要がアンク使えます。
詳細については&lt;a href=&#34;https://www.elastic.co/guide/en/watcher/current/condition.html#condition-array-compare&#34;&gt;array_compare&lt;/a&gt; conditionをご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Watchの有効・無効化 - ユーザからの多かったリクエストとして、Watchの無効化がありました。
1.xには、登録済みのWatchを無効にする機能がありませんでした。
これは、Watchを消すか、Watchのトリガーを変更することで回避していました。
これは、全体としてはWatchを管理するのを難しくする回避方法でしかありません。
2.0では、APIを呼び出すだけで、Watchの変更をすることなく、簡単にWatchの有効化・無効化が可能になりました。
これは1.0からあるべき基本的な機能でしたが、ついにこの問題を解決しました。
詳細は&lt;a href=&#34;https://www.elastic.co/guide/en/watcher/current/watch-active-state.html#watch-active-state&#34;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;marvel&#34;&gt;Marvel&lt;/h2&gt;
&lt;p&gt;Marvel 2.0を紹介するのに興奮しています。
Kibana 4をベースとした、再設計されたUIを持っています。
Marvel 1.xで学んだ多くのことを導入し、より使いやすく監視しやすいUIになっています。
ShieldとWatcherと同様に、最初のMarvelのリリースは将来的な成長の基盤となり
Elasticsearch2.0を効率的に管理するための主要なメトリックにフォーカスしています。&lt;/p&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再設計により、インタフェースを6ページに減らしています。&lt;/p&gt;
&lt;h3 id=&#34;cluster-list&#34;&gt;Cluster list&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ユーザやカスタマーの多くは複数のクラスタを利用しています。
新しいMarvelはそれらを集中的にモニタリングする一つのクラスタからそれらを簡単に監視できます。
各クラスタのデータ送信先をこのモニタリングクラスタにするだけです。&lt;/p&gt;
&lt;h3 id=&#34;cluster-overview&#34;&gt;Cluster Overview&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;クラスタオーバービューはある一つのクラスタの主要な性能メトリックを見ることができ、
素早くスパイクを発見できます。
このページはまた、アクティブなシャードのリカバリやリロケーションも見ることができます。&lt;/p&gt;
&lt;h3 id=&#34;indices-list&#34;&gt;Indices List&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インデックスのリストにはクラスタにあるすべてのインデックスとその属性が表示されます。
テーブルはライブでアップデートされ、フィルタリングやソートも可能です。
一番大きなインデックスは？といったことも調べられます。&lt;/p&gt;
&lt;h3 id=&#34;index-detail&#34;&gt;Index Detail&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;インデックス詳細ページはインデックスの主な性能メトリックを見ることができ、シャードの配置についても表示します。&lt;/p&gt;
&lt;h3 id=&#34;nodes-list&#34;&gt;Nodes List&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ノードリストはクラスタにあるノードとその主な性能メトリックを見ることができます。
テーブルはライブでアップデートされ、フィルタリングも可能です。
高いCPU利用率やディスクの残り容量なども簡単にわかるようになっています。&lt;/p&gt;
&lt;h3 id=&#34;node-detail&#34;&gt;Node Detail&lt;/h3&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ノード詳細ページは個別のノードに関する主な性能メトリックを見ることができ、ノードにあるシャードのリストも見ることができます。&lt;/p&gt;
&lt;p&gt;新しいMarvelはKibana 4の上に構築されたので、管理方法が変わっています。
Marvelのインストールは2つのステップがあります。
marvel-agentとmarvel user interfaceです。&lt;/p&gt;
&lt;h2 id=&#34;marvel-agent&#34;&gt;Marvel Agent&lt;/h2&gt;
&lt;p&gt;marvel-agentはElasticsearchクラスタにプラグインとしてインストールします。
主なパフォーマンス情報を取得し、ローカルもしくは分離されたモニタリングクラスタにデータを保存・送信します。&lt;/p&gt;
&lt;h2 id=&#34;marvel-user-interface&#34;&gt;Marvel User Interface&lt;/h2&gt;
&lt;p&gt;Marvel UIはKibanaのプラグインとしてインストールします。
これは、Kibana 4.2の新しいプラグインインフラを利用し、
Marvel Appとして、Kibanaのインタフェースとは個別に提供されます。
Kibanaのアプリの切り替えは次の画像の通りです。&lt;/p&gt;
&lt;p&gt;画像あり。
&lt;a href=&#34;https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released&#34;&gt;※画像に関しては原文をご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.0リリースは私たちのプロダクトの大きな一歩です。またユーザの意見を常にお待ちしています。
ぜひ、Webフォーラム（https://discuss.elastic.co）やメール（info@elastic.co）でご意見を。&lt;/p&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
