<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>timelion on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/timelion/</link>
    <description>Recent content in timelion on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 01 Dec 2015 11:28:11 +0900</lastBuildDate><atom:link href="https://blog.johtani.info/tags/timelion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Timelionの紹介 - Elasticsearch Advent Calendar 2015 1日目</title>
      <link>https://blog.johtani.info/blog/2015/12/01/introduction-timelion/</link>
      <pubDate>Tue, 01 Dec 2015 11:28:11 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2015/12/01/introduction-timelion/</guid>
      <description>こんにちは、@johtaniです。 早いもので、師走です。今年もあと少しとなりました（今月が一番忙しかったりしますが。。。）。 ということで、A</description>
      <content:encoded>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/johtani&#34;&gt;@johtani&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;早いもので、師走です。今年もあと少しとなりました（今月が一番忙しかったりしますが。。。）。
ということで、Advent Calendarの季節が始まりました。&lt;/p&gt;
&lt;p&gt;この記事は&lt;a href=&#34;http://qiita.com/advent-calendar/2015/elasticsearch&#34;&gt;Elasticsearch Advent Calendar 2015&lt;/a&gt;の1日目のエントリです。&lt;/p&gt;
&lt;p&gt;今日は、最近公開された&lt;a href=&#34;https://github.com/elastic/timelion&#34;&gt;Timelion&lt;/a&gt;の紹介をしたいと思います。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;timelion&#34;&gt;Timelion?&lt;/h2&gt;
&lt;p&gt;11/12に公開されたばかりのアプリになります。（&lt;a href=&#34;https://www.elastic.co/blog/timelion-timeline&#34;&gt;公式のブログはこちら&lt;/a&gt;。ブログでは動画による説明もあり）&lt;/p&gt;
&lt;p&gt;Kibanaにプラグインとしてインストールすることで使用することができるようになるアプリです。
Timelionと書いて「Timeline」と読むようです。
Kibanaとは異なるグラフ描画のプラグインになっています。&lt;/p&gt;
&lt;h3 id=&#34;kibana-42からプラットフォーム化&#34;&gt;Kibana 4.2からプラットフォーム化&lt;/h3&gt;
&lt;p&gt;Kibana 4.2から、Kibanaにプラグイン機構が導入されました。
Kibanaとしての機能以外にも、プラグインとして、アプリを追加できるようになっています。
Timelionもその一つです。&lt;/p&gt;
&lt;h3 id=&#34;インストール&#34;&gt;インストール&lt;/h3&gt;
&lt;p&gt;Timelionを試してみるには、ElasticsearchとKibanaが必要になります。（こちらは、すでにインストールされているとして。。。）&lt;/p&gt;
&lt;p&gt;Kibanaのコマンドを利用して、プラグインをインストールします。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/kibana plugin -i kibana/timelion
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;インストールしたら、Kibanaにアクセスして、Timelionを呼び出します。&lt;/p&gt;
&lt;h3 id=&#34;timelionへアクセス&#34;&gt;Timelionへアクセス&lt;/h3&gt;
&lt;p&gt;ブラウザで&lt;code&gt;localhost:5601&lt;/code&gt;にアクセスすると、Kibanaが出てきます。
Kibanaのプラグイン選択のアイコンをクリックし、Timelionのアイコンをクリックします。&lt;/p&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://blog.johtani.info/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34; &gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20151201/switch_to_timelion.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20151201/switch_to_timelion.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;すると、初期画面はこんな感じです。
直近15分のElasticsearchに入っているデータがが全部出てきます。
チュートリアルも出てきてます（初回起動時に出たはず）&lt;/p&gt;


&lt;div class=&#34;box&#34; &gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20151201/tutrial_timelion.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20151201/tutrial_timelion.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Kibanaでの検索窓の部分に関数を指定していくことで、グラフが描画できるツールになっています。&lt;/p&gt;
&lt;h3 id=&#34;サンプル気温データを可視化&#34;&gt;サンプル：気温データを可視化&lt;/h3&gt;
&lt;p&gt;百聞は一見に如かずということで、
&lt;a href=&#34;http://www.data.jma.go.jp/gmd/risk/obsdl/index.php&#34;&gt;気象庁のデータ&lt;/a&gt;を使って、
ちょっとしたグラフを書いてみました。
1年間の気温の推移と日照時間になります。&lt;/p&gt;


&lt;div class=&#34;box&#34; &gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20151201/tenperature_naha_and_sapporo.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20151201/tenperature_naha_and_sapporo.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;上のグラフが那覇、下グラフが札幌の気温のグラフになります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;赤いライン：最高気温&lt;/li&gt;
&lt;li&gt;青いライン：最低気温&lt;/li&gt;
&lt;li&gt;黄色い棒グラフ：日照時間&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低気温と日照時間はグラフは次のような式で描画しています。&lt;/p&gt;
&lt;h5 id=&#34;青いラインの最低気温&#34;&gt;青いラインの最低気温&lt;/h5&gt;
&lt;p&gt;気温のグラフになります。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.es(index=&#39;tenki2&#39;, q=&#39;city:naha&#39;, metric=&#39;avg:temperature_min&#39;).label(&#39;min&#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.es()&lt;/code&gt;がelasticsearchに対するデータ取得の関数です。
引数は次のような意味になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;index：対象とするインデックス名&lt;/li&gt;
&lt;li&gt;q：検索クエリ。ここでは、cityというフィールドにnahaで検索。&lt;/li&gt;
&lt;li&gt;metric：描画対象となっているデータの入ったフィールド。temperature_minというフィールドの1日毎の平均値を取得&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低気温と最高気温は別々のフィールドに格納してあります。最高気温の場合は（temperature_max）を指定します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.label(min)&lt;/code&gt;で、グラフの凡例の指定です。
残念ながら、日本語の指定は現時点（2015年12月01日時点）ではうまくいかなかったです。（https://github.com/elastic/timelion/issues/17）&lt;/p&gt;
&lt;p&gt;デフォルトでは、線グラフが選択されているので、グラフの種類は特に指定はしていません。
明確に指定する場合は&lt;code&gt;lines()&lt;/code&gt;を指定します。&lt;/p&gt;
&lt;h5 id=&#34;黄色い棒グラフの日照時間&#34;&gt;黄色い棒グラフの日照時間&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.es(index=&#39;tenki2&#39;, q=&#39;city:naha&#39;, metric=&#39;avg:sunlight&#39;).label(sunlight).bars()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.es()&lt;/code&gt;に関しては最低気温のグラフとほぼ一緒です。異なるのは、metricの取得対象のフィールド名です。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.label()&lt;/code&gt;で凡例を指定しています。先程と同様です。&lt;/p&gt;
&lt;p&gt;最後に、棒グラフにしたいため、&lt;code&gt;.bars()&lt;/code&gt;を指定しています。&lt;/p&gt;
&lt;p&gt;その他に用意されている関数について知りたい場合は、Timelionのヘルプを表示すると説明が出てきます。
&lt;code&gt;cusum()&lt;/code&gt;のような値を累積して表示するような関数も用意されています。&lt;/p&gt;


&lt;div class=&#34;box&#34; &gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20151201/about_help.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20151201/about_help.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;
&lt;p&gt;Kibanaとは少し違うアプローチで時系列データを描画するためのツールとなっています。
線グラフと棒グラフを一つのグラフに描画したりもできますし、
累積のグラフなんかも描画できるようになっています。&lt;/p&gt;
&lt;p&gt;実験的なプロジェクトである、Timelionの紹介でした。
ここでのノウハウがkibanaにフィードバックされると色々と面白いことになるんじゃないかなと。&lt;/p&gt;
&lt;h3 id=&#34;ということで&#34;&gt;ということで、&lt;/h3&gt;
&lt;p&gt;明日は、&lt;a href=&#34;http://qiita.com/zoetro&#34;&gt;zoetro&lt;/a&gt;さんの「Kibanaのプラグインの話」になります。
お楽しみに！&lt;/p&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
