<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>用語 on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/%E7%94%A8%E8%AA%9E/</link>
    <description>Recent content in 用語 on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 04 Jul 2025 03:16:01 +0000</lastBuildDate><atom:link href="https://blog.johtani.info/tags/%E7%94%A8%E8%AA%9E/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Weaviate入門（オブジェクト、コレクション）</title>
      <link>https://blog.johtani.info/blog/2025/07/04/intro-weaviate-collection/</link>
      <pubDate>Fri, 04 Jul 2025 03:16:01 +0000</pubDate>
      
      <guid>https://blog.johtani.info/blog/2025/07/04/intro-weaviate-collection/</guid>
      <description>&lt;p&gt;ソフトウェアやサーバーによって用語って変わりますよね？
ベクトルデータベースのWeaviateも、私がこれまで触ってきたものとは違う用語が使われているので、いくつかの用語を紹介しようと思います。&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;ソフトウェアやサーバーによって用語って変わりますよね？
ベクトルデータベースのWeaviateも、私がこれまで触ってきたものとは違う用語が使われているので、いくつかの用語を紹介しようと思います。&lt;/p&gt;
&lt;h2 id=&#34;データオブジェクト&#34;&gt;データオブジェクト&lt;/h2&gt;
&lt;p&gt;1件のデータのことをデータオブジェクトと呼びます。
データオブジェクトはプロパティ（名前とデータ型）を持っており、コレクション（クラスと呼ばれることもある）と呼ばれるデータの集合（RDBでいうテーブルのようなもの）に属します。
データオブジェクトはJSONドキュメントとして表現されます。
データオブジェクトを登録する場合は、コレクションに対して登録します。&lt;/p&gt;
&lt;p&gt;ベクトルデータベースなので、データオブジェクトに直接自分で作成したベクトルを含めて登録することもできますが、Weaviateでは、&lt;a href=&#34;https://weaviate.io/developers/weaviate/modules#vectorizer-reranker-and-generative-ai-integrations&#34;&gt;ベクトライザー&lt;/a&gt;と呼ばれるベクトルエンベディングをWeaviateのモジュールが生成してくれる機能があります（OpenAIのAPIを利用したエンベディングなど、さまざまなエンベディングのAPIを呼ぶ設定ができるようになっている）。
コレクションの作成時にこのベクトライザーを定義しておくと、コレクションにデータを登録するとベクトルを生成して検索できるようにしてくれます。&lt;/p&gt;
&lt;h2 id=&#34;コレクション&#34;&gt;コレクション&lt;/h2&gt;
&lt;p&gt;RDBでいうテーブルのようなものです。
コレクションに対してデータオブジェクトを登録、更新などを行えます。
コレクションにはスキーマが定義されており、コレクションに属するデータオブジェクトがどのようなプロパティを持っているのかがわかります。&lt;/p&gt;
&lt;p&gt;コレクション作成時にスキーマを定義することもできますが、チュートリアルなどでは、自動生成されるスキーマを利用している場合があります。
また、上記でも説明したようにベクトライザーと呼ばれるベクトル生成のためのモジュールの設定などもこちらで定義できます。&lt;/p&gt;
&lt;p&gt;コレクションごとにベクトル空間があり、その中でベクトル検索ができるようになっています。
また、バージョン1.24からは、&lt;a href=&#34;https://weaviate.io/developers/weaviate/concepts/data#multiple-vector-embeddings-named-vectors&#34;&gt;名前付きベクトル&lt;/a&gt;と呼ばれる機能が追加され、1つのコレクションに対して複数のベクトル空間を作ることもできるようになっています。&lt;/p&gt;
&lt;p&gt;ベクトル以外にも、&lt;a href=&#34;https://weaviate.io/developers/weaviate/concepts/indexing#inverted-indexes&#34;&gt;転置インデックス&lt;/a&gt;の設定もできるようになっており、いわゆるハイブリッド検索（転置インデックスを利用した検索＋ベクトル検索）も可能になっています。&lt;/p&gt;
&lt;h2 id=&#34;weaviateの公式ドキュメント&#34;&gt;Weaviateの公式ドキュメント&lt;/h2&gt;
&lt;p&gt;今回紹介したデータの概念などに関するWeaviateのドキュメントは&lt;a href=&#34;https://docs.weaviate.io/weaviate/concepts/modules&#34;&gt;Modules | Weaviate Documentation&lt;/a&gt;にあります。&lt;/p&gt;
&lt;p&gt;図などもありますので、参考にしていただければと。&lt;/p&gt;
&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;
&lt;p&gt;日本のコミュニティとしてConnpassにグループを作りました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://weaviate.connpass.com/&#34;&gt;Weaviate JP Community - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうやってイベントをやるかはまだ考え中ですが、興味がある方は登録しておいていただければと。&lt;/p&gt;
&lt;p&gt;どんな情報、どんなイベントがあれば興味をもっていただけるか？Weaviateを使ってみようと思うけど何から始めよう？など疑問に思うことがあればXやブログのコメントなどをいただければと思います。&lt;/p&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
