<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>Cloudera Search on @johtaniの日記 3rd</title>
    <link>https://blog.johtani.info/tags/cloudera-search/</link>
    <description>Recent content in Cloudera Search on @johtaniの日記 3rd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 02 Aug 2013 18:02:00 +0900</lastBuildDate><atom:link href="https://blog.johtani.info/tags/cloudera-search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MorphlinesのloadSolrをちょっとだけ調べてみた</title>
      <link>https://blog.johtani.info/blog/2013/08/02/morphlines-loadsolr/</link>
      <pubDate>Fri, 02 Aug 2013 18:02:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/08/02/morphlines-loadsolr/</guid>
      <description>&lt;p&gt;宿題その2？かな。Solr勉強会でCloudera Searchのスキーマ周りってどうなってるの？という質問が出てて、
なんか調べることになってたので、関係しそうなMorphlinesの&lt;a href=&#34;https://github.com/cloudera/cdk/blob/master/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/LoadSolrBuilder.java&#34;&gt;LoadSolr&lt;/a&gt;コマンドを調べてみました。
こいつが、Solrへの書き込みを実行するコマンドみたいだったので。&lt;br&gt;
（※Cloudera Searchのスキーマの設定方法とかは調べてないです。）&lt;br&gt;
（※めんどくさかったので、パッケージ名すっ飛ばしてクラス名書いてます。githubへのリンクを代わりに貼ってます。）&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;宿題その2？かな。Solr勉強会でCloudera Searchのスキーマ周りってどうなってるの？という質問が出てて、
なんか調べることになってたので、関係しそうなMorphlinesの&lt;a href=&#34;https://github.com/cloudera/cdk/blob/master/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/LoadSolrBuilder.java&#34;&gt;LoadSolr&lt;/a&gt;コマンドを調べてみました。
こいつが、Solrへの書き込みを実行するコマンドみたいだったので。&lt;br&gt;
（※Cloudera Searchのスキーマの設定方法とかは調べてないです。）&lt;br&gt;
（※めんどくさかったので、パッケージ名すっ飛ばしてクラス名書いてます。githubへのリンクを代わりに貼ってます。）&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;recordsolrのドキュメント&#34;&gt;Record＝Solrのドキュメント&lt;/h2&gt;
&lt;p&gt;convert()メソッドにて、MorphlinesのRecord（コマンドの処理するデータの１単位）に格納されているKey-ValueデータをSolrInputDocumentクラスのフィールドとして格納しています。
Recordにもフィールドという概念があり、Recordのフィールド＝Solrのフィールドという事みたいです。&lt;/p&gt;
&lt;p&gt;ということで、Solrのフィールドは事前に定義しておき、Morphlinesの処理内部でSolrのフィールド名に値を詰めていく感じでしょうか。
別途、&lt;a href=&#34;https://github.com/cloudera/cdk/blob/master/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/SanitizeUnknownSolrFieldsBuilder.java&#34;&gt;sanitizeUnknownSolrFilds&lt;/a&gt;というコマンドが用意されていて、Solrのスキーマにないものはこのコマンドを使って、無視するフィールド名に変えたり、雑多なデータを入れるためのフィールド名にするといった処理ができるようです。このコマンド内部で、Solrのスキーマ設定を元に、Solrのフィールドに合致する物があるかをチェックして処理しています。&lt;/p&gt;
&lt;h2 id=&#34;solrへの登録処理は&#34;&gt;Solrへの登録処理は？&lt;/h2&gt;
&lt;p&gt;Solrへの登録処理自体はLoadSolrクラス内部でDocumentLoaderというクラスのload()メソッドを呼び出しているだけでした。ということで、&lt;a href=&#34;https://github.com/cloudera/cdk/blob/master/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/DocumentLoader.java&#34;&gt;DocumentBuilder&lt;/a&gt;クラスを少し調査。&lt;/p&gt;
&lt;h3 id=&#34;documentloader&#34;&gt;DocumentLoader&lt;/h3&gt;
&lt;p&gt;IFでした。。。実クラスは次の条件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SolrMorphlineContextにDocumentLoaderがあればそちらを採用（他の種類はなにがあるんだろ？）&lt;/li&gt;
&lt;li&gt;なければ、&lt;a href=&#34;https://github.com/cloudera/cdk/blob/b6f98cff4a027af04f97fdec9abf729785d74cf5/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/SolrServerDocumentLoader.java&#34;&gt;SolrServerDocumentLoader&lt;/a&gt;をnewしたものを利用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.の場合がおそらくMapReduceではないパターンのloadSolrだと思われます。SolrServerDocumentBuilderはSolrJのAPIを利用して、Solrへデータ登録していく普通のアプリです。（対象とするSolrは外部に起動しているもののはず＝FlumeのSolrSinkではこちらを採用かな？）&lt;br&gt;
Solrへの接続情報とか設定ファイルとかSolrCloud用のZooKeeperとかは&lt;a href=&#34;https://github.com/cloudera/cdk/blob/master/cdk-morphlines/cdk-morphlines-solr-core/src/main/java/com/cloudera/cdk/morphline/solr/SolrLocator.java&#34;&gt;SolrLocatorクラス&lt;/a&gt;に設定される内容が利用されます。&lt;/p&gt;
&lt;p&gt;1.のパターンは、どうやら、&lt;a href=&#34;https://github.com/cloudera/search/blob/master/search-mr/src/main/java/org/apache/solr/hadoop/morphline/MorphlineMapper.java&#34;&gt;Cloudera SearchのMapReduceIndexerToolのクラス&lt;/a&gt;にあるMyDocumentLoaderかなぁと。
こちらは、MapReduceを利用する場合に、利用されてるっぽいです（ちゃんと見てないけど）
内部処理は、HadoopのContext.writeメソッドにでSolrInputDocument（＝MorphlinesのRecord）を書きだして、ReducerでSolrOutputFormatでインデックス作成の流れかなと。たぶん、&lt;a href=&#34;https://github.com/cloudera/search/blob/master/search-mr/src/main/java/org/apache/solr/hadoop/morphline/MorphlineMapRunner.java&#34;&gt;MorphlineMapRunner&lt;/a&gt;あたりを読みこめば解読できるかと。
ちなみに、こちらは、2.とは異なり、SolrLocatorの設定は無視されそう。&lt;/p&gt;
&lt;h2 id=&#34;感想妄想&#34;&gt;感想＋妄想？&lt;/h2&gt;
&lt;p&gt;ということで、Morphlinesのデータ流れを考える上で、現時点ではSolrのスキーマを頭の片隅に置きつつ、
Recordの中にあるデータをゴニョゴニョしてデータを形成していくって感じになりそうです。
うまく処理できなかったものとかのカウントとかもとれたりするのかなぁ？とか、また色々と気になるところが出てきますが、一旦ここまでで。。。（だれか、続きを調べて書いてみてくれてもいいんですよ！コマンドもいっぱいあるし！）&lt;/p&gt;
&lt;p&gt;とまぁ、こんなかんじでMorphlinesをちょっとだけ読みました。
よくよく考えたら、こんなの作ったことあるなぁと（こんなに汎用的じゃないけど）。
みんな同じ事考えるんですねぇ。
コマンドパターン？みたいな感じで、I/F決めてSolrとか別のシステムとかにデータ入れる処理を順番に記述できる的なバッチ処理良くかいてます（書いてましたのほうが正解かなぁ）。&lt;/p&gt;
</content:encoded>
    </item>
    
    <item>
      <title>Morphlines入門？</title>
      <link>https://blog.johtani.info/blog/2013/07/31/introduction-morphlines/</link>
      <pubDate>Wed, 31 Jul 2013 19:12:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/07/31/introduction-morphlines/</guid>
      <description>&lt;p&gt;Morphlinesについてちょっとだけ、さらに調べました。&lt;/p&gt;
&lt;h2 id=&#34;誤解&#34;&gt;誤解&lt;/h2&gt;
&lt;p&gt;Solr勉強会でなんとなく私の認識を話しましたが、ちょっと誤解してたみたいです。スミマセン。&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Morphlinesについてちょっとだけ、さらに調べました。&lt;/p&gt;
&lt;h2 id=&#34;誤解&#34;&gt;誤解&lt;/h2&gt;
&lt;p&gt;Solr勉強会でなんとなく私の認識を話しましたが、ちょっと誤解してたみたいです。スミマセン。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h3 id=&#34;誤解morphlineというプラットフォームミドルウェアがありそうなイメージ&#34;&gt;誤解：Morphlineというプラットフォーム/ミドルウェアがありそうなイメージ&lt;/h3&gt;
&lt;p&gt;まぁ、書いてあるのでちゃんと読めって話ですが、Morphlineはあくまでライブラリだということでした。
私はなんとなくManifoldCFのようなミドルウェアorプラットフォームが存在して、
そこにFlumeのSinkとかMapReduceによるIndexerが動作するのかと思ってました。&lt;/p&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://blog.johtani.info/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34; style=&#34;max-width:300&#34;&gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20130731/wrong_image.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20130731/wrong_image.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;まぁ、これが間違いでした。正解のイメージはこっちですね。&lt;/p&gt;


&lt;div class=&#34;box&#34; style=&#34;max-width:300&#34;&gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.johtani.info/images/entries/20130731/correct_image.jpg&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://blog.johtani.info/images/entries/20130731/correct_image.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;各プラットフォーム（FlumeとかHadoopとか）に組み込んむライブラリで、
それぞれ組み込んだ先でMorphlineの設定を記述することで、パイプライン処理ができるっぽいです。&lt;/p&gt;
&lt;p&gt;Flumeについては、MorphlineSolrSinkというクラスでMorphlineの設定ファイルを読み込み、いろいろ処理出来ます。&lt;/p&gt;
&lt;p&gt;Map/ReduceだとCloudera Searchに含まれてる&lt;a href=&#34;https://github.com/cloudera/search&#34;&gt;MapReduceIndexerTool&lt;/a&gt;がMorphlineの設定を読み込んでコマンド実行してくれるみたいです。
MapReduceIndexerToolはまだちゃんと読んでないのですが、MapperとしてMorphlineのコマンドが実行されるのかなぁ？という感じです。
（結構入り組んでるので、ちゃんと読まないとわからない。。。）&lt;/p&gt;
&lt;p&gt;ということで、Morphlineというプラットフォームがあって、一元的にFlumeやMap/Reduceに対するコマンドをパイプライン化するという話でありませんでした。&lt;/p&gt;
&lt;p&gt;※ちなみに、上の画像ですが、愛用しているNUBoardを使って書いてます。
考えをまとめるのにすごく役立つ一品です。持ち運び可能なノート型ホワイトボードです。&lt;/p&gt;
&lt;iframe src=&#34;http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS1=1&amp;nou=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=johtani-22&amp;o=9&amp;p=8&amp;l=as1&amp;m=amazon&amp;f=ifr&amp;ref=qf_sp_asin_til&amp;asins=B00A08IVT4&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;疑問点&#34;&gt;疑問点&lt;/h3&gt;
&lt;p&gt;ただ、読んでてまだ不明な点があります。まぁ、ぼちぼち調べるかなぁと。。。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solrのschemaはどーなってんの？&lt;/li&gt;
&lt;li&gt;MorphlineにSolrへロードするコマンド（loadSolr）があるけど、FlumeのMorphlineSolrSinkってのもSolrに書き込みそうだけど？&lt;/li&gt;
&lt;li&gt;Map/ReduceでSolrに書き込むもMorphlineのコマンドとの違いは？（前にソースを見たときはSOLR-1301がベースになっていて、SolrOutputFormatってクラスがEmbeddedSolrServer起動してインデクシングしてた）&lt;/li&gt;
&lt;li&gt;GoLiveってなんだろ？（MapReduceIndexerToolに入ってて、M/Rでインデックス作ったあとにSolrのクラスタに配布＋マージするやつっぽい）&lt;/li&gt;
&lt;li&gt;どんなコマンドがあるの？（&lt;a href=&#34;http://cloudera.github.io/cdk/docs/0.4.1/cdk-morphlines/morphlinesReferenceGuide.html&#34;&gt;Cloudera Morphlines Ref Guide&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下は、参考資料と参考資料にあるSlideshareの資料を一部訳したものになります。&lt;/p&gt;
&lt;h3 id=&#34;参考資料&#34;&gt;参考資料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/cloudera/using-morphlines-for-onthefly-etl&#34;&gt;Using Morphlines for On-the-Fly ETL(slideshare)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudera/cdk/tree/master/cdk-morphlines&#34;&gt;cloudera/cdk/cdk-morphlines(github)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;メモ&#34;&gt;メモ&lt;/h2&gt;
&lt;h3 id=&#34;現在のコマンドライブラリスライド-18-19ページ&#34;&gt;現在のコマンドライブラリ（スライド 18-19ページ）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Solrへのインテグレートとロード&lt;/li&gt;
&lt;li&gt;フレキシブルなログファイル解析&lt;/li&gt;
&lt;li&gt;1行、複数行、CSVファイル&lt;/li&gt;
&lt;li&gt;正規表現ベースのパターンマッチと展開&lt;/li&gt;
&lt;li&gt;Avro、JSON、XML、HTMLのインテグレーション&lt;/li&gt;
&lt;li&gt;Hadoop シーケンスファイルのインテグレーション&lt;/li&gt;
&lt;li&gt;SolrCellとApache Tikaパーサすべてのインテグレーション&lt;/li&gt;
&lt;li&gt;Tikaを利用したバイナリデータからMIMEタイプの自動判別&lt;/li&gt;
&lt;li&gt;動的Javaコードのスクリプティングサポート&lt;/li&gt;
&lt;li&gt;フィールドの割り当て処理、比較処理&lt;/li&gt;
&lt;li&gt;リストやセット書式のフィールド処理&lt;/li&gt;
&lt;li&gt;if-then-else条件分岐&lt;/li&gt;
&lt;li&gt;簡易ルールエンジン（tryRules）&lt;/li&gt;
&lt;li&gt;文字列とタイムスタンプの変換&lt;/li&gt;
&lt;li&gt;slf4jロギング&lt;/li&gt;
&lt;li&gt;Yammerメトリックとカウンター&lt;/li&gt;
&lt;li&gt;ネストされたファイルフォーマットコンテナの解凍&lt;/li&gt;
&lt;li&gt;などなど&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;プラグインコマンドスライド20ページ&#34;&gt;プラグインコマンド（スライド　20ページ）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;簡単に新しいI/Oや変換コマンドが追加可能&lt;/li&gt;
&lt;li&gt;サードパーティや既存機能のインテグレード&lt;/li&gt;
&lt;li&gt;CommandインタフェースかAbstractCommandのサブクラスを実装&lt;/li&gt;
&lt;li&gt;Javaクラスパスに新規作成したものを追加&lt;/li&gt;
&lt;li&gt;登録処理などは必要ない&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;新しいプラグインコマンドとして考えられるもの22ページ&#34;&gt;新しいプラグインコマンドとして考えられるもの（22ページ）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RDBやKVSやローカルファイルなどの外部データソースをレコードにjoin&lt;/li&gt;
&lt;li&gt;DNS名前解決とか短縮URLの展開とか&lt;/li&gt;
&lt;li&gt;ソーシャル・ネットワークからリンクされたメタデータのフェッチ（？？）&lt;/li&gt;
&lt;li&gt;レコードの感情分析とアノテーション？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;31ページの図がわかりやすいかも&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content:encoded>
    </item>
    
    <item>
      <title>第11回Solr勉強会を主催しました。#SolrJP</title>
      <link>https://blog.johtani.info/blog/2013/07/29/study-of-solr/</link>
      <pubDate>Mon, 29 Jul 2013 23:15:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/07/29/study-of-solr/</guid>
      <description>&lt;p&gt;不定期開催ですが&lt;a href=&#34;http://atnd.org/events/41368/&#34;&gt;第11回Solr勉強会&lt;/a&gt;を主催しました。&lt;/p&gt;
&lt;p&gt;今回も大入り90人くらい？の参加者の皆さんがいらっしゃいました。ありがたいことです！（20時時点で最終的に補欠17人でした。）&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;不定期開催ですが&lt;a href=&#34;http://atnd.org/events/41368/&#34;&gt;第11回Solr勉強会&lt;/a&gt;を主催しました。&lt;/p&gt;
&lt;p&gt;今回も大入り90人くらい？の参加者の皆さんがいらっしゃいました。ありがたいことです！（20時時点で最終的に補欠17人でした。）&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;とりあえず、第一報です。このあと懇親会なので。&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;ということで、帰りの電車でいくつか感想を（忘れちゃうから）。&lt;/p&gt;
&lt;!--  more --&gt;
&lt;p&gt;小林さんの苦労話は細かいですが、結構はまりがちな点を共有していただいたので良かったかなぁと。
Solrのexampleの設定とか、ManifoldCFとかちょっとずつ罠があったりするので、あるあるネタはありがたいと思いますｗ&lt;/p&gt;
&lt;p&gt;Cloudera Searchについては、安定の嶋内さんの喋りに圧巻でした。検索だけの視点とは異なる観点についての
話は私には足りないしてんだったりするので参考になります。
なんか、気づいたらMorphlineやスキーマ周りを調べてブログ書くことになっちゃったけど。。。
一つ質問しそこねたのがあって、Cloudera社は基本的に公開したOSSについてのトレーニングも立ち上げているイメージです。Cloudera Searchについてもトレーニングが立ち上がるのかなぁと密かに期待をしてみたり（予算の関係上参加できるかは不明ですが。。。）&lt;/p&gt;
&lt;p&gt;牧野さんの話は画像系について、私は詳しくないので、また関口さんのalikeと比較とかしてもらえると面白いかなぁと。とりあえず、青いロボットがちゃんと検索できるようになるといいですねｗｗ&lt;/p&gt;
&lt;p&gt;秀野さんの空間検索は緯度経度以外のPOLYGONなどを利用した検索で、実は私も知らない機能でしたｗ&lt;br&gt;
なとなくは知ってたんですが、そこまでちゃんと検索できるとは！地図以外にも活用できるような気がします（想像つかないんだけど。。。）&lt;/p&gt;
&lt;p&gt;最後は私の発表で、簡単な資料ですみませんでした。しかも発表よりも宣伝が。。。（ブログの宣伝だったりとか。。。）
最後に宣伝した「&lt;a href=&#34;http://www.ipsj.or.jp/dp/cfp/copy_of_copy_of_dp0502s.html&#34;&gt;「ビッグデータ活用を支えるOSS」特集への論文投稿のご案内&lt;/a&gt;」もご検討ください！&lt;/p&gt;
&lt;p&gt;懇親会も楽しかったです。また思いついたら開催しますー&lt;br&gt;
最後に、今回の発表者の皆様、会場提供していただいたVOYAGE GROUPの皆様ありがとうございました！&lt;/p&gt;
&lt;p&gt;以下はいつものメモです。&lt;/p&gt;
&lt;h2 id=&#34;manifoldcfのとsolrの組み合わせ仮株式会社-ロンウイット大須賀さん&#34;&gt;ManifoldCFのとSolrの組み合わせ（仮）株式会社 ロンウイット　大須賀さん&lt;/h2&gt;
&lt;p&gt;残念ながら、発熱のため発表は次回に持ち越しに。&lt;/p&gt;
&lt;p&gt;##社内ファイル及びWEBコンテンツの検索システム構築時に苦労したこと ソフトバンクBB㈱　小林さん&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ManifoldCF＋Solrを使って社内ファイルの検索システム構築&lt;/li&gt;
&lt;li&gt;約1000万ドキュメント&lt;/li&gt;
&lt;li&gt;さまざまなDCにドキュメントがある&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;クロールジョブのハング&#34;&gt;クロールジョブのハング。。。&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ログをDEBUGにしたら。。。ログファイル150GB。。。&lt;/li&gt;
&lt;li&gt;一定時間ごとにAgentをリスタートするバッチを。。。（力技）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mcfエラーによるジョブの停止&#34;&gt;MCFエラーによるジョブの停止&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;CONNECTORS-590&lt;/li&gt;
&lt;li&gt;エラーが発生して止まったジョブを起動するバッチをcronで。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;自作リアルタイムインデクシングの問題&#34;&gt;自作リアルタイムインデクシングの問題&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;MCF使わないでSlaveにインデックス&lt;/li&gt;
&lt;li&gt;openSearcher=falseだとautoCommitが実行されてもSearcherを再起動しないので検索にでてこない&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;リプリケーションのnw負荷&#34;&gt;リプリケーションのNW負荷&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;別DCからのレプリケーションが複数が一度に実施される→ネットワーク負荷が。。。&lt;/li&gt;
&lt;li&gt;cronで別々にレプリすることでNW負荷を分散できてるかな。。。
　　&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cloudera-search-入門仮-cloudera-株式会社嶋内さん&#34;&gt;Cloudera Search 入門(仮) Cloudera 株式会社　嶋内さん&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マサカリ画像がｗ&lt;/li&gt;
&lt;li&gt;SolrのコミッターMark Millerさんもジョインしてる&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clouderaとhadoop入門とか&#34;&gt;ClouderaとHadoop入門とか。&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;いろいろあるよ、エコシステム&lt;/li&gt;
&lt;li&gt;4つの分類。
&lt;ul&gt;
&lt;li&gt;データの取り込み&lt;/li&gt;
&lt;li&gt;データの保存&lt;/li&gt;
&lt;li&gt;データの活用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;search&#34;&gt;Search&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;検索エンジンなら数十億人が使い方を知ってる（Clouderaのチャールズ・ゼドルースキ）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloudera-search&#34;&gt;Cloudera Search&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hadoopのためのインタラクティブな検索&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDHとSolrの統合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OSS！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利点とか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;データ解析にも使えるよね、検索&lt;/li&gt;
&lt;li&gt;非構造化データの検索にもいいよね&lt;/li&gt;
&lt;li&gt;単一プラットフォームによるコスパ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloudera-searchの事例&#34;&gt;Cloudera Searchの事例&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;バイオテクノロジー企業で画像検索とか&lt;/li&gt;
&lt;li&gt;医療系企業でいろんなログイベントの管理とか&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloudera-searchのアーキテクチャ&#34;&gt;Cloudera Searchのアーキテクチャ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Flumeでストリーミングで登録&lt;/li&gt;
&lt;li&gt;HBaseデータの登録&lt;/li&gt;
&lt;li&gt;M/Rでバッチ登録&lt;/li&gt;
&lt;li&gt;HueのWebインタフェース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Morphlines、HBaseはLinyプロジェクトのもの&lt;/p&gt;
&lt;p&gt;Solr使うならCDH！！&lt;/p&gt;
&lt;h4 id=&#34;qa&#34;&gt;QA&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Q：デモで使われたTwitterの検索のデータ料とかは？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A：デモ環境ですので小さい。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Q：スキーマってどうするの？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A：スキーマは。。。私が書こうかなぁ、ブログ。。。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;コンピュータビジョン株式会社-curious-vehicle牧野さん&#34;&gt;コンピュータビジョン　株式会社 Curious Vehicle　牧野さん&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;色々やってます&lt;/li&gt;
&lt;li&gt;コンピュータビジョンの説明（某ネコ型ロボットのいろんな画像がｗ）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;画像検索の流れ&#34;&gt;画像検索の流れ&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;特徴情報の抽出&lt;/li&gt;
&lt;li&gt;特徴情報のクラスタリングによるword化&lt;/li&gt;
&lt;li&gt;Solrによる画像情報の検索&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;1-特徴情報の抽出&#34;&gt;1. 特徴情報の抽出&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;SIFT特徴点解析&lt;/li&gt;
&lt;li&gt;グレースケールしてからSIFT&lt;/li&gt;
&lt;li&gt;注意！SIFTは商用ライセンスが必要です&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;2-特徴情報のクラスタリングによるword化&#34;&gt;2. 特徴情報のクラスタリングによるword化&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;K-meansでクラスタリング&lt;/li&gt;
&lt;li&gt;クラスタ情報をヒストグラム化してSolrへ&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;3-solrによる画像情報の検索&#34;&gt;3. Solrによる画像情報の検索&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;物体認識ベンチマークセット（ケンタッキー大）を使って。&lt;/li&gt;
&lt;li&gt;やっぱり良し悪しある。データセットに特化したチューニングしてます。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;つぎのステップ&#34;&gt;つぎのステップ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;文字認識とか顔認識&lt;/li&gt;
&lt;li&gt;つぎはドラえもんじゃねぇ、検索とかも。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;ガウシアンによる画像ぼかしの例&#34;&gt;ガウシアンによる画像ぼかしの例&lt;/h5&gt;
&lt;h4 id=&#34;qa-1&#34;&gt;QA&lt;/h4&gt;
&lt;p&gt;マイク回しててメモ取れず。。。&lt;/p&gt;
&lt;h2 id=&#34;国土交通省のデータをsolrで検索株式会社ネクスト秀野さん&#34;&gt;国土交通省のデータをSolrで検索　株式会社ネクスト　秀野さん&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/ryo0301/guo-jiao-sheng-falsedetawosolrdejian-suo&#34;&gt;スライドはこちら&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;評価の関係で。。。&lt;/li&gt;
&lt;li&gt;Spatial検索の話&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;デモの想定機能&#34;&gt;デモの想定機能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;地図上の小学校を起点に物件検索&lt;/li&gt;
&lt;li&gt;地図上をクリックしたところを中心に検索&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;デモ環境&#34;&gt;デモ環境&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Solr4.3.0、PostGIS 2.0.3、東京都のデータ&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;事前知識&#34;&gt;事前知識&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ジオメトリーデータ（点、線、面がある）&lt;/li&gt;
&lt;li&gt;WKB/WKT、Intersects（しらなかった。こんなのもあるのか）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;環境&#34;&gt;環境&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;EC2上にPostGIS＋Solrで構築&lt;/li&gt;
&lt;li&gt;WKT形式でDIHでインポートできるらしい。&lt;/li&gt;
&lt;li&gt;Solr＋S3をJSでGoogleMapへ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;solr-44新機能をちょっと紹介johtani&#34;&gt;Solr 4.4新機能をちょっと紹介　@johtani&lt;/h2&gt;
&lt;p&gt;紹介というよりも宣伝。。。&lt;/p&gt;
</content:encoded>
    </item>
    
    <item>
      <title>Cloudera Searchメモ（妄想版）</title>
      <link>https://blog.johtani.info/blog/2013/06/06/cloudera-search-memo2/</link>
      <pubDate>Thu, 06 Jun 2013 12:26:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/06/06/cloudera-search-memo2/</guid>
      <description>&lt;p&gt;ざっとインストールガイドとかCloudera Searchのソース眺めて、テキトーにメモを書いてみました。
（ユーザガイドはまだ読んでないです。）&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;ざっとインストールガイドとかCloudera Searchのソース眺めて、テキトーにメモを書いてみました。
（ユーザガイドはまだ読んでないです。）&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;ざっくりメモ&#34;&gt;ざっくりメモ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ストリーム処理でインデックス作るときはFlume経由でSolrに
&lt;ul&gt;
&lt;li&gt;SinkとEventの両方が用意されてる？（Flumeを良く知らないので、違いがわからない）&lt;/li&gt;
&lt;li&gt;FluemeからはリモートのSolrに対してインデックス登録するクラスがある。SolrServerDocumentLoaderがソレだと思う。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バッチ処理でインデックス作るときはMapReduceIndexerToolsってのを使ってSolrに
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://issues.apache.org/jira/browse/SOLR-1301&#34;&gt;SOLR-1301&lt;/a&gt;がベースになっている。色々と改良されてるようだけど、コアとなってる処理はSOLR-1301。&lt;/li&gt;
&lt;li&gt;GoLiveってクラスの処理の中で、現在動作してるSolrに配布したバッチで作成されたIndexをマージする処理が書いてある。&lt;/li&gt;
&lt;li&gt;HDFSへ出力されたインデックスはリモートのSolrからアクセスするとオーバヘッドとかどーなるのかなぁ？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;検索処理自体はHueでもできるけど、基本的にSolrCloud任せ&lt;/li&gt;
&lt;li&gt;インデキシングの処理のフローについてはCloudera Mrophlinesで定義&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ということで、
2つの流れがありそう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HDFS→Flume→Solr&lt;/li&gt;
&lt;li&gt;HDFS→MapReduce→Solr&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で、まだ、わかってないですが、構成要素として&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop（HDFS）：データソース&lt;/li&gt;
&lt;li&gt;Hadoop（MapReduce）：データ変換処理、バッチインデキシング&lt;/li&gt;
&lt;li&gt;Zookeeper：SolrCloudのクラスタ管理&lt;/li&gt;
&lt;li&gt;Solr：インデキシング、検索エンジン&lt;/li&gt;
&lt;li&gt;Flume：データをストリーミングでSolrへ&lt;/li&gt;
&lt;li&gt;Coudera Morphlines：HDFSからSolrまでのETLデータ処理を定義実行する環境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;って感じでしょうか。
SolrCloudのクラスタとHadoopのクラスタが同一マシン上なのか、別なのかとか。組み合わせがどんなものができるのかがまだわかってないです。
ユーザガイド読んでみたらなにか出てくるかなぁ。&lt;/p&gt;
&lt;p&gt;ちなみに、Cloudera SearchのgithubリポジトリにあるソースはCloudera Morphlinesのコードがメインで、SolrのHDFS対応版のソースがあるわけでは無かったです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SolrのHdfsDirectoryってのがClouderaのリポジトリにあるSolrには追加されていて、これが、HDFSのインデックスを読み込んだりする処理が出来る仕組みっぽい。&lt;/li&gt;
&lt;li&gt;一応、SolrCloud以外（分散検索）も考慮された形になってるっぽい。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ってとこでしょうか。&lt;/p&gt;
&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;
&lt;p&gt;読んでて思ったんですが、Cloudera Searchの肝はじつは、検索じゃなくて、Morphlinesにあるんじゃないかなぁと。今はSolrが出力先ですが、
その他のデータ変換処理とかが増えてくると、処理の流れがMorphlinesで定義できてデータ変換処理が簡便になりそうな気が。&lt;/p&gt;
&lt;h2 id=&#34;その他に気になる観点&#34;&gt;その他に気になる観点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CDH経由でSolrCloudのクラスタの管理するのかな？&lt;/li&gt;
&lt;li&gt;SolrCloud用のクラスタとCDHのクラスタって同一マシンに載るの？別マシンにもできるの？
&lt;ul&gt;
&lt;li&gt;併存したらIOがキツそうだけど&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hueで検索アプリとか組めるの？（そもそもHueがわかってないんだけど。。。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ま、とりあえず、こんなとこで。
つぎは余力があれば、ユーザガイドかなぁ。
英語力。。。&lt;/p&gt;
</content:encoded>
    </item>
    
    <item>
      <title>Cloudera Searchのモジュールたち</title>
      <link>https://blog.johtani.info/blog/2013/06/05/cloudera-search-modules/</link>
      <pubDate>Wed, 05 Jun 2013 15:12:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/06/05/cloudera-search-modules/</guid>
      <description>&lt;p&gt;Cloudera Searchは次のようなモジュールから構成されています。
これはCloudera Searchのモジュールで、さらにこれらがSolrとかを使ってるみたいですね。pom.xmlを見たら何を使ってるかがわかるかな。&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Cloudera Searchは次のようなモジュールから構成されています。
これはCloudera Searchのモジュールで、さらにこれらがSolrとかを使ってるみたいですね。pom.xmlを見たら何を使ってるかがわかるかな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cdk-morphlines&lt;/li&gt;
&lt;li&gt;search-contrib&lt;/li&gt;
&lt;li&gt;search-core&lt;/li&gt;
&lt;li&gt;search-flume&lt;/li&gt;
&lt;li&gt;search-mr&lt;/li&gt;
&lt;li&gt;search-solrcell&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;てきとーに、README.mdみながらメモを残してみました。ソースとかはまだ読んでないです。
ざっと眺めたけど、インデキシング処理の話がメインで、検索側がどうやって動くかってのがわからなかったなぁ。
&lt;a href=&#34;http://www.cloudera.com/content/cloudera-content/cloudera-docs/Search/latest/PDF/Cloudera-Search-User-Guide.pdf&#34;&gt;ユーザガイド（注：PDF）&lt;/a&gt;ってのがあるから、これを読んでみるか。。。&lt;/p&gt;
&lt;p&gt;各モジュールについては、以下。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;cdk-morphlinescloudera-morphlines&#34;&gt;cdk-morphlines（Cloudera Morphlines）&lt;/h2&gt;
&lt;p&gt;Cloudera Morphlinesという名前みたい。
検インデキシングアプリの構築、変更をラクにするためのフレームワーク。
ETLの処理チェインを簡単にCloudera Searchにデータを入れる設定（Extract/Transform/Load処理）がかけると。
バッチ処理、Near Real Timeのために使えるみたい。検索結果をさらに入れるとかもできるんかなぁ。？&lt;/p&gt;
&lt;p&gt;Unixパイプラインのの進化版みたいなもので、一般的なレコードに対するStream処理から、Flueme、MapReduce、Pig、Hie、SqoopのようなHadoopコンポーネントも使えるみたい。&lt;/p&gt;
&lt;p&gt;Hadoop ETLアプリケーションのプロトタイピングにも使えて、リアルタイムで複雑なStreamやイベント処理やログファイル解析とかに使えるの？&lt;/p&gt;
&lt;p&gt;設定ファイルのフォーマットは&lt;a href=&#34;https://github.com/typesafehub/config/blob/master/HOCON.md&#34;&gt;HOCONフォーマット&lt;/a&gt;。AkkaやPlayで使われてる。&lt;/p&gt;
&lt;h3 id=&#34;cdk-morphlines-core&#34;&gt;cdk-morphlines-core&lt;/h3&gt;
&lt;p&gt;Cloudera Morphlinesのコンパイラ、実行環境、コマンドのライブラリを含んでる。
ログファイル解析やsingle-lineレコード、multi-lineレコード、CSVファイル、正規表現パターンマッチ、フィールドごとの比較とか条件分岐とか、文字列変換とか色々なコマンドを含んでる。&lt;/p&gt;
&lt;h3 id=&#34;cdk-morphlines-avro&#34;&gt;cdk-morphlines-avro&lt;/h3&gt;
&lt;p&gt;Avroファイルやオブジェクトの抽出、変換、読み込み処理コマンド&lt;/p&gt;
&lt;h3 id=&#34;cdk-morphlines-tika&#34;&gt;cdk-morphlines-tika&lt;/h3&gt;
&lt;p&gt;バイナリデータからMIMEタイプを検出して、解凍するコマンド。Tikaに依存&lt;/p&gt;
&lt;h4 id=&#34;雑感&#34;&gt;雑感&lt;/h4&gt;
&lt;p&gt;Cloudera Searchへのデータの流し込みを設定ファイルに記述して実行するとデータの変換処理とかが記述できるって感じかな？
Morphlinesのコマンドとして独自処理や使えそうな処理を作ることで、いろんな処理ができるって感じかなぁ。&lt;/p&gt;
&lt;h2 id=&#34;search-core&#34;&gt;search-core&lt;/h2&gt;
&lt;p&gt;Solrに対するMorphlineコマンドの上位モジュール&lt;/p&gt;
&lt;h3 id=&#34;search-solrcell&#34;&gt;search-solrcell&lt;/h3&gt;
&lt;p&gt;Tikaパーサを使ったSolrCellを使うためのMorphlineコマンド。
HTML、XML、PDF、Wordなど、Tikaがサポートしてるものがサポート対象。&lt;/p&gt;
&lt;h3 id=&#34;search-flume&#34;&gt;search-flume&lt;/h3&gt;
&lt;p&gt;Flueme Morphline Solr Sink。
Apache Flumeのイベントから検索ドキュメントを抽出、変換し、SolrにNearRealTimeで読み込むためのコマンド&lt;/p&gt;
&lt;h3 id=&#34;search-mr&#34;&gt;search-mr&lt;/h3&gt;
&lt;p&gt;HDFSに保存されたファイルに含まれる大量データをMapReduceで処理してHDFS上の検索インデックスに焼きこむモジュール。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MapReduceIndexerTool&lt;/code&gt;は入力ファイルの集合からSolrのインデックスシャードの集合を作るためのmorphlineのタスクで、MapReduceのバッチジョブドライバー。
HDFSにインデックスを書き込む。
動作してるSolrサーバに対して出力されたデータをマージするのもサポートしてる。&lt;/p&gt;
&lt;p&gt;とりあえず、Near Real Time検索するにはFlueme使って、バッチ処理でインデックス焼くのはMapReduceIndexerToolみたいだなぁ。&lt;/p&gt;
</content:encoded>
    </item>
    
    <item>
      <title>Cloudera Searchってのが出たらしい（とりあえず、雑感？）</title>
      <link>https://blog.johtani.info/blog/2013/06/05/what-is-cloudera-search/</link>
      <pubDate>Wed, 05 Jun 2013 15:05:00 +0900</pubDate>
      
      <guid>https://blog.johtani.info/blog/2013/06/05/what-is-cloudera-search/</guid>
      <description>&lt;p&gt;AWS Summitに来ていたのですが、TLでは、Cloudera Searchが賑わってました。
ということで、軽くどんなものか読んだり調べたりしたメモを残しとこうかと。
英語力はあやしいので、おかしいとこがあったらツッコミを。&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;AWS Summitに来ていたのですが、TLでは、Cloudera Searchが賑わってました。
ということで、軽くどんなものか読んだり調べたりしたメモを残しとこうかと。
英語力はあやしいので、おかしいとこがあったらツッコミを。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;cloudera-searchとは&#34;&gt;Cloudera Searchとは？&lt;/h2&gt;
&lt;p&gt;CDH4.3に対応したCDHユーザ向けの検索システム（beta版）なのかな？
CDHに統合された検索フレームワークなのかな？&lt;/p&gt;
&lt;p&gt;基本はLucene/Solr 4.3でHadoopのペタバイトデータを検索することができるようになるみたいです。&lt;/p&gt;
&lt;h2 id=&#34;どんな仕組み&#34;&gt;どんな仕組み？&lt;/h2&gt;
&lt;p&gt;次のものを利用しているようです。（GithubのREADMEから。）&lt;/p&gt;
&lt;h4 id=&#34;使ってるもの&#34;&gt;使ってるもの&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Apache Solr(4.3.0＋α？)
&lt;ul&gt;
&lt;li&gt;Apache Lucene（Solrつかってるからね）&lt;/li&gt;
&lt;li&gt;Apache SolrCloud（うーん、Solrに含まれるのに別に出してるのなんで？）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Apache Flume&lt;/li&gt;
&lt;li&gt;Apache Hadoop MapReduce &amp;amp; HDFS&lt;/li&gt;
&lt;li&gt;Apache Tika
&lt;ul&gt;
&lt;li&gt;SolrCellとしてSolrにも組み込まれてる、いろんな文書（WordとかHTMLなどなど）からメタデータと本文データとかを取り出せるライブラリラッパー。実際にはさらにpdfboxとかを使って各文書からのデータを取り出してる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;何ができるの&#34;&gt;何ができるの？&lt;/h4&gt;
&lt;p&gt;HBaseやHDFSの用にZookeeperを使ってインデックスのシャーディングや高可用性ができる。（SolrCloudがZookeeperを使ってるからね。）
MapReduceのジョブの出力から自動的にSolrのインデックスにデータをマージできるらしい。
Cloudera Managerを使って、デプロイ、設定モニタリングなどが可能。&lt;/p&gt;
&lt;p&gt;Flumeのフィードをつかって、ストリーミングしてインデックスを作れる。FluemeがデータをSolrに流しこむのかな？
将来的にはHiveやHBaseのテーブルをインデックスすることも可能になるらしい。Impalaクエリの結果もフィードできるのか？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://incubator.apache.org/blur/how_it_works.html&#34;&gt;Apache Blur&lt;/a&gt;ってキーワードも出てきた。HDFSのデータからLuceneのインデックス作るのかな？
NGDataのチームがSolr/HBaseの統合とかしてるみたい。&lt;/p&gt;
&lt;h3 id=&#34;参考url&#34;&gt;参考URL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.cloudera.com/blog/2013/06/cloudera-search-the-newest-hadoop-framework-for-cdh-users-and-developers/&#34;&gt;Cloudera社のブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloudera.com/content/cloudera-content/cloudera-docs/Search/latest/PDF/Cloudera-Search-Frequently-Asked-Questions.pdf&#34;&gt;Cloudera SearchのFAQ（注：PDF）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudera/search&#34;&gt;Githubのリポジトリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
    </item>
    
  </channel>
</rss>
