<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-07-06T10:54:34+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JustTechTalk#02 形態素解析のあれやこれや@ジャストシステムに参加しました。]]></title>
    <link href="http://blog.johtani.info/blog/2015/07/06/attend-justsystem-techtalk-no2/"/>
    <updated>2015-07-06T10:49:01+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/07/06/attend-justsystem-techtalk-no2</id>
    <content type="html"><![CDATA[<p><a href="https://justsystems.doorkeeper.jp/events/27174">JustTechTalk#02 形態素解析のあれやこれや@ジャストシステム</a></p>

<p>に参加してきました。
ジャストシステムさんの形態素解析器JMATの話とKagome、Janome、Kuromoji.js、ssslaの開発者の
パネルディスカッションでした。</p>

<p>ということで、いつものメモです。</p>

<!-- more -->


<h2>ジャストシステムの形態素解析その２（機械学習編）</h2>

<ul>
<li><p>JMATの話</p>

<ul>
<li>前回は辞書の話</li>
<li>今回は学習の話</li>
</ul>
</li>
<li><p>教師あり/教師なし</p>

<ul>
<li>JMATは教師あり</li>
<li>教師なしは研究段階</li>
</ul>
</li>
<li><p>ラティス構造を辞書ベースで構築して、コストの総和が最小の経路を求める</p>

<ul>
<li>連接、単語生成とか。</li>
</ul>
</li>
<li>学習は3フェーズ

<ul>
<li>ベース、能動、部分アノテーション</li>
<li>ベース

<ul>
<li>300万文のコーパスから1万文のみを利用（なぜ？今から説明）

<ul>
<li>64GBマシン買ってみたけど、複数実験するには追いつかない</li>
<li>オンライン学習がメジャーでない時代に作り始めたので、つかってない</li>
<li>CRF学習器を改善

<ul>
<li>結果として50万文くらいで精度が良くなる</li>
</ul>
</li>
</ul>
</li>
<li>辞書チームからNGがでて、方向転換</li>
</ul>
</li>
<li>方向転換した結果が3つのフェーズらしい</li>
<li>ピタジョブに採用？</li>
</ul>
</li>
</ul>


<h3>疑問</h3>

<ul>
<li>JMATって、Webの検索の前処理とか分類とかに主に利用するのかな？</li>
<li>ATOKでもこのノウハウって利用してるんかな？</li>
<li>辞書もあるらしいけど、辞書更新されると学習器のデータとかどーなるんだろ？</li>
</ul>


<h2>形態素解析器の実装言語Talkについて</h2>

<ul>
<li>kuromoji.jsの@takuya-aさん

<ul>
<li>Typed Arrayサポートが高速にできてる理由でもあるらしい</li>
</ul>
</li>
<li>Kagomeの@ikawahaさん

<ul>
<li>Goはいろいろないらしい</li>
</ul>
</li>
<li>Janomeの@moco_betaさん</li>
<li><p>sssla（茶筌のRuby clone）</p></li>
<li><p>なんで作ったの？</p>

<ul>
<li>形態素解析のライブラリはNLPのHelloWorldだから</li>
</ul>
</li>
<li>なんで、その言語？</li>
<li>その言語で困った点は？

<ul>
<li>Goだと、辞書を内包するのが大変</li>
<li>JSは苦労したところしかない（1hくらいしゃべれるぞ！）。基本的なデータ構造とかもない</li>
<li>Pythonはパフォーマンスを考えないと</li>
<li>Ruby（1.6だったので）もパフォーマンスが</li>
</ul>
</li>
<li><p>その言語を開発するときに必須のものは？</p>

<ul>
<li>Goはとくにない。エディタはどれでもOK</li>
<li>browserfy?が便利</li>
</ul>
</li>
<li><p>ほかの人たちの言語をdisってください</p>

<ul>
<li>JSは論外。Pythonのコードフォーマッターが揺れるのが。。。Rubyはバージョンが。。。</li>
<li>Goはブラウザで動かない。Pythonもブラウザで動かない。Rubyも(ry</li>
<li>ほかのは触ったことないので。。。</li>
<li>Pythonは2.xか3.xか決めてくれ！</li>
</ul>
</li>
<li>なんで、Kuromojiベースなの？

<ul>
<li>Java読みやすいから。</li>
</ul>
</li>
<li>MeCabとKuromojiの違いは？

<ul>
<li>未知語の処理が結構違う</li>
</ul>
</li>
</ul>


<h2>感想</h2>

<p>きれいなロビーで良かったのですが、マイクがあると嬉しかったかもしれません。
前回の辞書の話も聞いてみたかったかも。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hatena Engineer Seminar #5 @ Tokyoに参加しました。 #hatenatech]]></title>
    <link href="http://blog.johtani.info/blog/2015/06/17/attend-hatena-engineer-seminar-5/"/>
    <updated>2015-06-17T00:21:33+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/06/17/attend-hatena-engineer-seminar-5</id>
    <content type="html"><![CDATA[<p>ひさびさに、勉強会メモ。
<a href="http://hatena.connpass.com/event/15973/">Hatena Engineer Seminar #5 @ Tokyo</a>に当選したので行ってきました。</p>

<p>いつもは近寄らないオシャレな街をドキドキしながら行ってきました。</p>

<!-- more -->


<p>ということで、簡単なメモです。</p>

<h2>はてなブックマーク全文検索の精度改善 id:takuya-a</h2>

<h3>問題：検索精度がよくない</h3>

<ul>
<li>京都で検索 →　「ポーランドの京都」「京都大学のまるまる教授」のようなもんがヒット</li>
<li>京都っぽいエントリが出て欲しい。

<ul>
<li>京都っぽい？？？</li>
</ul>
</li>
<li>問題点をブレイクダウン

<h4>課題</h4></li>
<li>クエリ考えるの大変だよね</li>
<li>順序が新着順なのが辛い</li>
<li>適合率と再現率の両立</li>
</ul>


<p>そして（ドラムロール）、できました！（さすが）</p>

<p>アイデア：はてブのタグを利用する。
関連キーワードを抽出して、クエリ拡張する。</p>

<h3>関連キーワードとは？</h3>

<ol>
<li>タグ検索する</li>
<li>検索にヒットしたTerm Vectorsを取得</li>
<li>特徴語をTop25件取得</li>
<li>もっともスコアが高いタームを特徴語とする

<ul>
<li>英語のストップワードとかが問題点となってたり。</li>
<li>→Dynamic stop word listというのを利用して排除（IDF、RIDF、Gain）</li>
</ul>
</li>
</ol>


<h3>今後の課題</h3>

<ul>
<li>再現率の向上</li>
<li>解析用のフィールド・辞書を追加（精度向上や解析ミスなど）</li>
</ul>


<h3>トークに出てきた機能など</h3>

<p>トークに出てきたElasticsearchの機能については、こんなツイートをしてたので、参考にしてもらえれば。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">これのkuromoji_stemmerを使ってるっぽい？ <a href="https://twitter.com/hashtag/hatenatech?src=hash">#hatenatech</a> / elastic/elasticsearch-analysis-kuromoji - <a href="https://t.co/3F2sBYXLPH">https://t.co/3F2sBYXLPH</a></p>&mdash; Jun Ohtani (@johtani) <a href="https://twitter.com/johtani/status/610759870564859904">2015, 6月 16</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/hatenatech?src=hash">#hatenatech</a> Term Vectors APIのドキュメントはこちら - <a href="https://t.co/HhBmTDr46i">https://t.co/HhBmTDr46i</a></p>&mdash; Jun Ohtani (@johtani) <a href="https://twitter.com/johtani/status/610760840170450944">2015, 6月 16</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<blockquote class="twitter-tweet" lang="ja"><p lang="it" dir="ltr"><a href="https://twitter.com/hashtag/hatenatech?src=hash">#hatenatech</a> min_score - <a href="https://t.co/Sc0exzJRC1">https://t.co/Sc0exzJRC1</a></p>&mdash; Jun Ohtani (@johtani) <a href="https://twitter.com/johtani/status/610763959944097793">2015, 6月 16</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<h4>個人的な疑問</h4>

<p>Q：クエリにヒットするタグがそもそもなかったら？</p>

<h2>はてなブックマークに基づく関連記事レコメンドエンジンの開発 id:skozawa</h2>

<h3>課題：一部のエントリに対して関連記事が出ない</h3>

<p>タグがない記事について関連エントリが出ない＝既存はタグを利用している
例：レシピで考える</p>

<h4>現行システム</h4>

<ul>
<li>ユーザがつけたタグ情報を利用してMoreLikeThisで計算</li>
</ul>


<h4>新規システム</h4>

<ol>
<li>類似記事検索</li>
<li>特徴語の抽出</li>
<li>特徴語を分類</li>
<li>関連記事検索</li>
<li>関連記事をスコアリング</li>
</ol>


<h4>個人的な疑問</h4>

<p>Q：毎回計算してるのかな？記事登録とかされたタイミングでやってるのかな？
Q：Termの精度などどうなんだろ？</p>

<h2>『BrandSafe はてな』のアドベリフィケーションのしくみ id:tarao</h2>

<p>BrandSafeはてな：とか。
広告の配信先をフィルタリング</p>

<p>複数の素朴なフィルタの組み合わせ→AdaBoost</p>

<h4>個人的な疑問</h4>

<p>Q：海外とかもいけるのかな？</p>

<h2>まとめと感想</h2>

<p>ということで、簡単なメモでした。ピザごちそうさまでした！
聞いてて少し思ったのは、データ量があるサイトだからうまくいく手法だというのもあるんだろうなというところでした。
あとは、クエリを暗に改善するのとは別に、サジェスト的に表示するのにも使えたりするかも？と思ってみたり。
できるかどうかはわからないですが。。。</p>

<p>Elasticsearchをいろいろと活用してもらってるのがわかって、楽しい勉強会でした。
もっともっといろんなところで宣伝してくださいw</p>

<p>今日の勉強会を聞いて、俄然、京都・大阪でElasticsearch勉強会を開催したい気になってきました。
特に大阪に知り合いがいないので、だれか紹介してもらえると嬉しいです。
お待ちしてます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.6.0リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/06/10/elasticsearch-1-6-0-released-ja/"/>
    <updated>2015-06-10T13:31:02+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/06/10/elasticsearch-1-6-0-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-1-6-0-released">Elasticsearch 1.6.0 released</a></p>

<p>本日（6/9）、<strong>Lucene 4.10.4</strong>ベースの<strong>Elasticsearch 1.6.0</strong>をリリースしました。
このリリースはElasticsearchの最新の安定バージョンとなります。
また、素晴らしい新機能がいくつか追加されています。</p>

<!-- more -->


<ul>
<li>synced flushによるリスタートの高速化</li>
<li>シャード配置は保留中のタスクをブロックしない</li>
<li>レスポンスボディのJSONのフィルタリング</li>
<li>共有ファイルシステムリポジトリに対するセキュリティフィックス</li>
<li>古いインデックスのためのUpgrade API</li>
<li>Kibanaユーザのためのハイライトの強化</li>
<li>Windowsユーザのための<code>mlockall</code></li>
<li>より詳細なスクリプト設定</li>
</ul>


<p><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-6-0">すべての変更リストとダウンロード</a>はこちらをごらんください。</p>

<h2>synced flushによるリスタートの高速化</h2>

<p>1.6.0より前のバージョンでは、メンテナンスやローリングアップグレード時の
ノードの再起動で、必要であるかどうかに関わらず、多くの場合、
ノードのすべてのシャードのすべてのデータを再度コピーする必要がありました。
この新しいsynced flush機能により、
sync-flushされたインデックスに対して、既存のデータを再利用し、
より早くクラスタを正常な状態にすることができるようにします。</p>

<p>ここで、この変更以前にどのように動いていたかを説明します。
すでにあるレプリカシャードは、ノードがリスタートした後に、
プライマリから復元するときに、
最初のステップはプライマリにあるセグメントとレプリカにあるセグメントを
比較することです。そして、セグメントに違いがあった場合にコピーされます。
問題は、セグメントプライマリのセグメントのマージと
レプリカのセグメントのマージが別々に起こっており、
各シャードのセグメントが完全に異なるが、
それらが同じデータを持っているという点です。</p>

<p>新しいsynced-flush機能では、<code>sync_id</code>がプライマリと
レプリカシャードに、シャードのコンテンツが同一であるという判別するために、
書き込まれます。これは、リカバリがセグメントの比較のステップを
スキップできることを意味します。
リカバリのスピードを高速にします。</p>

<p>synced flushはアイドル状態のインデックスで自動的に実行されます。
直前の5分間でデータが登録、更新削除されていないインデックスに対してです。
これは、ロギングのユースケースで特に役に立ちます。
機能のインデックスはインデキシングがストップしたあとの5分で自動的に
syncされるでしょう。</p>

<p>ノードのリスタートやクラスタのリスタートが必要で、
自動的に発生するsyncを待てない場合は次のようなことが可能です。</p>

<ul>
<li>インデキシングを停止（実行中のリクエストが停止するのも待つ）</li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-cluster.html">シャードのアロケーションを停止</a></li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">synced-flush</a>リクエストの発行</li>
<li>ノードのリスタート</li>
<li>シャードのアロケーションの再開</li>
<li>クラスタの状態がグリーンになるまで待つ</li>
<li>インデキシングの再開</li>
</ul>


<p><strong>NOTE:</strong> &ldquo;シャードのアロケーションを停止&#8221;のステップが必要です。
これがない場合、Elasticsearchはノードの再起動が始まると、
異なるノードにシャードの再配置を始めます。
これは、新しいノードにシャードデータの全てをコピーする必要があります。</p>

<p>ドキュメントのインデキシング、更新、削除のあとに最初のフラッシュが
発生したときに、
シャードの<code>sync_id</code>が自動的に無効化されます。
詳細については<a href="https://github.com/elastic/elasticsearch/issues/11336">#11336</a>と<a href="https://github.com/elastic/elasticsearch/issues/11179">#11179</a>をごらんください。</p>

<h2>シャード配置は保留中のタスクをブロックしない</h2>

<p>多数のノードやインデックスを持っているユーザは
クラスタ全体のリスタートのあとのシャードのリカバリで、
長い間、リカバリが止まって見えることに気づいたかもしれません。
これらのリカバリが止まって見える間は、クラスタ設定の更新のような軽微なアクションでさえ、
例外が発生したり、その設定が反映されるまでに長時間かかるといったことが起きていました。
この問題の兆候は保留中のタスクのキューが大きくなることです。</p>

<p>これらの遅延の原因はシャードの配置のプロセスにあります。
配置されるべきシャードのコピーを
持っているのがどのノードかを全てのデータノードに聞きます。
多くのシャードや遅いディスクを持ったデータノードは
反応するのに時間がかかります。
特に、シャードのリカバリがすでにI/Oを利用しているような時です。
このバージョン以前のものは、シャード情報のためのリクエストを
同期的に処理していました。
クラスタ状態の更新はアロケーションプロセスを続けるために
必要な情報を待っている間、ブロックされます。</p>

<p> <a href="https://github.com/elastic/elasticsearch/issues/11262">#11262</a>での変更は
この情報のためのリクエストを非同期にします。
クラスタ状態の更新はこのタスクによってブロックされません。
これは、保留中のタスクがより早く処理でき、
クラスタが変更に対してより早く反応できます。
処理中のshard infoリクエストの数は
<code>number_of_in_flight_fetch</code>キーとしてcluster-health APIで取得できます。</p>

<p>さらに、シャードがある理由で復旧に失敗すると、
クラスタは、シャードのリカバリが成功するまで、同じノードに対して
シャードをアロケーションしないようにします。</p>

<h2>レスポンスボディのJSONのフィルタリング</h2>

<p>Elasticsearchは全ての情報を返します。
例えば、検索リクエストは<code>_index</code>、<code>_type</code>、<code>_id</code>、
<code>_score</code>、<code>_source</code>を返します。
しかし、全ての情報が必要でない場合があります。
また、これらのデータを遅いネットワークで転送することは
遅延の原因となります。</p>

<p>ユーザはこの検索メタデータを無効にするための特殊な設定を
行ったり、他のAPIのレスポンスのフォーマットを
コントロールするための設定があります。
<a href="https://github.com/elastic/elasticsearch/issues/10980">#10980</a>の変更で、任意のレスポンスボディのJSONに対して、
必要な要素だけを取得する機能が追加されました。
<code>filter_path</code>パラメータを使用します。</p>

<p>例えば、検索リクエストからは<code>total</code>数と、各要素の<code>hits</code>の配列を欲しい場合、
次のように指定します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GET _search?filter_path=hits.total,hits.hits</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-info.html">nodes-info API</a>から各ノードの<code>http_address</code>だけを取得したい場合は、
ノード名の部分にワイルドカード(<code>*</code>)を使用します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GET _nodes?filter_path=nodes.*.http_address</span></code></pre></td></tr></table></div></figure>


<p>単一の<code>*</code>がJSON階層の1つの階層に対しての
ワイルドカードとして機能します。
2つの<code>**</code>は複数階層に対してとなります。
複数のフィルタはカンマ区切りで指定可能です。
詳細について<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#_response_filtering">Response filtering</a>をごらんください。</p>

<h2>共有ファイルシステムリポジトリに対するセキュリティフィックス</h2>

<p>本リリースはsnapshot-restoreで使われる
<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html#_shared_file_system_repository">共有ファイルシステムリポジトリ</a>に関するセキュリティ強化の変更が含まれます。
現在、Elasticsearchのユーザは、Elasticsearchプロセスによって書き込み可能
任意のディレクトリに<code>.snapshot</code>ファイルを書き込むことができます。
<a href="https://github.com/elastic/elasticsearch/issues/11284">#11284</a>の変更で、リポジトリのために使用できるディレクトリを
強制的に指定できるようになりました。
適切なディレクトリが<code>config/elasticsearch.yml</code>設定ファイルの
<code>path.repo</code>に指定される必要があります。</p>

<p>次のように設定されたElasticsearchインスタンスはこのセキュリティ問題に対して影響を受けにくいです。</p>

<ul>
<li><code>root</code>ではなく<code>elasticsearch</code>ユーザとしてElasticsearchを実行</li>
<li><code>elasticsearch</code>ユーザが<code>data</code>ディレクトリに対してのみ
書き込み権限を持っていて、共有ファイルシステムリポジトリに対しても利用できる</li>
<li>ファイアウォールやプロキシ、Shieldを使って、snapshot APIの実行を任意のユーザから実行されるのを防いでいる</li>
</ul>


<p>この問題を<a href="https://www.elastic.co/community/security">CVE-2015-4165</a>としています。</p>

<h2>古いインデックスのためのUpgrade API</h2>

<p>Elasticsearch 2.0以降では、
Lucene 5ベースとなり、Lucene 3
（Elasticsearchのバージョンでは0.90以前）
によって書き出されたセグメントを含んだインデックスを読み込むことが
できなくなります。
これらの「古いインデックス」はLucene 4にアップグレードする必要があり、
2.0-compatibleとして印をつける必要があります。
そうしなければ、Elasticsearch 2.0に以降できないでしょう。</p>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html">upgrade API</a>は
、最新のLuceneフォーマットにインデックスにある全てのセグメントを
アップグレードするためにすでに利用できます。
また、最新のフォーマットは性能向上やバグフィックスといった利点もあります。
さらに、2.0-compatibleとして古いインデックスをマークする設定も
書き込むことができます。
さらに、<code>upgrade_only_ancient_segments</code>オプションが
Lucene 3のセグメントだけをアップグレードするために利用でき、
移行前の必要な処理を減らすことができます。</p>

<h2>Kibanaユーザのためのハイライトの強化</h2>

<p>KibanaユーザはElasticsearchのハイライトについて2つの点で問題を見つけていました。</p>

<ul>
<li>ワイルドカードでフィールド名を指定した場合に、ハイライトに適さないフィールドも帰ってくる（日付や数値のフィールドなど）</li>
<li>古いインデックスが非常に大きなターム（> 32kB）を含んでいて、ハイライトが失敗する。
最近のバージョンでは、これらの大きなタームはインデックス時に除去される</li>
</ul>


<p><a href="https://github.com/elastic/elasticsearch/issues/11364">#11364</a>の変更で
これらの問題が修正されました。
ワイルドカードを利用したフィールド名では、stringフィールドのみを返し、非常に長いタームによる例外は無視するようになります。</p>

<h2>Windowsユーザのための<code>mlockall</code></h2>

<p>速いGCはノードの安定性と性能について重要です。
小さなバイトのヒープでさえ、ディスクにスワップすることを許可してしまうと、GCに対して大きな影響が出てしまいます。
ですので、これらのコストは排除されるべきです。</p>

<p>Linuxユーザは<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html#setup-configuration-memory"><code>bootstrap.mloclall</code>設定</a>による恩恵を受けています。
これは、RAMにJVMのヒープを起動時にロックします。
<a href="https://github.com/elastic/elasticsearch/issues/10887">#10887</a>では、同様の機能をWindowsユーザにも提供します。</p>

<h2>より詳細なスクリプト設定</h2>

<p>Scriptsはリクエストにインラインで指定できます。
<code>.scripts</code>インデックスにインデックスもでき、<code>config/</code>ディレクトリ配下にファイルとして保存もできます。
これまでは、インラインかインデックスされたスクリプトの両方を同時に有効無効にすることが選択できましたが、
<code>.scripts</code>インデックスをプロキシやShieldで保護することもできました。</p>

<p><a href="https://github.com/elastic/elasticsearch/issues/10116">#10116</a>で追加されたより詳細なスクリプトの設定で、インラインか、インデックスされたものか、ファイル化を個別に言語ごとに設定できるようになりました。
また、例えば、search APIではスクリプトを許可するが、update APIでは許可しないといったような設定も可能です。</p>

<h2>最後に</h2>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-6-0">Elasticsearch 1.6.0</a>を試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)や<a href="https://discuss.elastic.co/c/elasticsearch">Webフォーラム</a>などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第10回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/06/02/10th-elasticsearch-jp/"/>
    <updated>2015-06-02T15:06:36+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/06/02/10th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="https://elasticsearch.doorkeeper.jp/events/25297">第10回Elsticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、開場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、ありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<!-- more -->


<p>今回も新規の方が結構いたような気がしました。
最終的に、124人がアプリでチェックインした形になりました。
直前にキャンセル待ちから繰り上がると来れない人がいますよねぇ。
多少キャパシティオーバーするくらいの人数で募集するのがいいのでしょうか。
あと、カードが2枚不明で。。。心あたりある人いないでしょうか？</p>

<p>さて、いつもの通り簡単なメモです。</p>

<h2>Elastic{ON}報告＋有償プラグインの紹介　Elastic Jun Ohtani @johtani</h2>

<p>スライド：<a href="https://speakerdeck.com/johtani/elastic-on-bao-gao-toshang-yong-puraguinfalseshao-jie">elastic{ON}報告と商用プラグインの紹介</a></p>

<p>少し時間が経ってしまいましたが、弊社初のカンファレンス<a href="http://www.elasticon.com">elastic{ON}</a>の紹介をしました。
約1300名の方に参加していただいたカンファレンスで、非常に盛り上がりました。
Microsoft、GitHubなど、いろいろな会社の方が話をしたり、弊社のエンジニアが濃い話をしたりと。
今回は、日本の方はいなかったですが、次回は日本からも参加してもらえると嬉しいです！</p>

<p>あとは、5月に弊社にも日本の営業の人が入社したので、有償プラグインについて簡単ですが説明をしました。
プラグインなどに興味があるかたがいらっしゃいましたら、Twitterなどで連絡いただければと。
もちろん、弊社サイトからの問い合わせでも大丈夫です。</p>

<p><a href="https://www.elastic.co/elasticon">カンファレンスの資料やビデオが弊社サイトで公開</a>されています。
ぜひ一度見ていただければと。</p>

<h2>AWSで実現するelasticsearchの大規模運用 株式会社インティメート・マージャー　松田和樹さん　<a href="https://twitter.com/mats116">@mats116</a></h2>

<p>スライド：<a href="http://www.slideshare.net/im_docs/elasticsearch-48873206">第10回elasticsearch勉強会 公開用資料</a></p>

<p>パブリックDMPのサービスの裏側でElasticsearchを利用しているというお話でした。
AWS Auto Scalingに詳しくないので、勉強しないといけないんですが、
リバランスがどのくらいの頻度で発生するのかはちょっと気になります。</p>

<p>SSDを利用したり、doc valuesを利用したりと、性能を気にしながら利用されている点、負荷試験を行って検証されていたりと、
参考になる話でした。
今回はインフラ側の話に寄っていたので、今度はアプリ側でどんな使い方をしているかといった話を聞いてみたいですね！</p>

<h2>Spark in small or middle scale data processing with Elasticsearch　株式会社ビズリーチ 島本　多可子さん <a href="https://twitter.com/chibochibo03">@chibochibo03</a></h2>

<p>スライド：<a href="http://www.slideshare.net/chibochibo/spark-with-elasticsearch">Spark in small or middle scale data processing with Elasticsearch</a></p>

<p>ScalaとSparkとElasticsearchで検索サービスを作っている話でした。
サービスのアーキテクチャの選別についての説明を順を追って説明していただきました。
失敗と言われていたアーキテクチャを見た時に、「あー、それは。。。」と思っていたら、
思った通りの改善案のアーキテクチャが出てきたので少しホッとしましたw</p>

<p>JSONのクエリが辛いという話がありましたが、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html">validate API</a>などを利用してもらって、事前にチェックをしてもらうと
少しは改善できるかもなぁと。</p>

<p>Sparkをぼんやりとしかわかってないので、もう一度話を聴きたいなぁと思ったので、
押しかけて話を聴きたいと思います。</p>

<p>話の中で出てきた自作のScalaのElasticsearchクライアントがHTTPのクライアントになった理由が知りたかったです。</p>

<h2>LT</h2>

<h3>Elasticsearchのサジェスト機能を使った話　株式会社アイスタイル　渡邊 紘太朗さん <a href="https://twitter.com/ktaro_w">@ktaro_w</a></h3>

<p>スライド：<a href="http://www.slideshare.net/ktaro_w/elasticsearch-48826694">Elasticsearchのサジェスト機能を使った話</a></p>

<p>ぴったり5分でしたwまだ2年目なのにこんなにうまく話をしていただけるとは。。。</p>

<p>Gatling便利そうですね。サーバが1台しかないので、単一インデックスの方が性能が出るだろうなと。
Elasticsearchは1インデックスに対してデフォルトだと5シャードで、シャード単位でLuceneのインデックスが作成されます。
この話で行くと、18インデックスを作ると、かなりの数のファイルI/Oが発生するので、いろいろなインデックスに検索をすると
キツいだろうなと。</p>

<p>サジェストについての日本語の資料が少ないという事だったので、ブログを書いてもらえると嬉しいですw</p>

<h3>Elasticsearchで作る形態素解析サーバ　株式会社エヌツーエスエム　菅谷信介さん</h3>

<p>スライド：<a href="http://www.slideshare.net/shinsuke/es-analyzeapi201506">Elasticsearchで作る形態素解析サーバ</a></p>

<p>いつも発表ありがとうございます。私以外の最多発表者じゃないかという話でした。
今回はElasticsearchを形態素解析サーバにしてしまおうという話で、ちょっと面白い話でした。
Elasticsearch以外の場所で形態素解析したい場合には手軽に使えるかもしれないですし、Elasticsearchと同じ解析結果を別の場所で欲しい場合にも便利かも。</p>

<p><a href="https://github.com/johtani/elasticsearch-extended-analyze">extended analyze API</a>の紹介までしていただいて。。。</p>

<p>ちなみに、今は、extended analyze プラグインも指定したAttributeの情報だけ返せるようになってたり、
マルチバリューへの対応もしていたりします。
そのうち本家のanalyze APIに機能を取り込む予定です。（早くしないと）</p>

<h3>開発効率UP! Elasticsearch Client Tool 作ってみた　ナレッジワークス株式会社　木戸国彦さん <a href="https://twitter.com/9215">@9215</a></h3>

<p>スライド：<a href="https://speakerdeck.com/kunihikokido/kai-fa-xiao-lu-atupu-elasticsearch-client-tool-zuo-tutemita">開発効率アップ!Elasticsearch Client Tool 作ってみた</a></p>

<p>Hello Elasticsearch!にはお世話になっている人が多いんじゃないかなと。
今回はSublime Textのプラグインのお話でした。（すみません、Sublime Text使ってなくて。。。）
AtomとかIntellijのプラグインもあるとうれしいなー</p>

<h3>変わり種プラグインの作り方　日本IBM　黒澤亮二さん</h3>

<p>スライド：<a href="http://www.slideshare.net/kuron99/elasticsearch-plugin-48848087">変わり種プラグインの作り方</a></p>

<p>Elasticsearchの拡張ポイントの話と、簡単なプラグインの作り方と少しElasticsearch内部の話をしていただきました。
Foundの資料が上がってました。さすが。あそこのブログは面白い話が多いんですよね。
社内で実際に使われてる話とかも聞いてみたい！</p>

<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://suzuki.tdiary.net/20150602.html">第10回 Elasticsearch 勉強会へ参加してきた昨日の話</a></li>
<li><a href="http://qiita.com/t-sato/items/45ec24b8df9155d6488f">第10回elasticsearch勉強会 #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://blog.shibayu36.org/entry/2015/06/02/162724">第10回elasticsearch勉強会に行ってきました</a></li>
<li><a href="http://tech.im-dmp.net/archives/3271">elasticsearch勉強会に登壇してきました</a></li>
</ul>


<h2>まとめ</h2>

<p>懇親会で24Fに移動していただくということで、少し手間をかけてしまいました、すみませんでした。
今回も初参加の方がそこそこいたんじゃないかなと。
あとは、AWSサミットがあるために上京してて参加しましたという方もいらっしゃいました。
大きなカンファレンスの期間の前後に行うとこんなメリットもあるんですね、今後の参考にしたいと思います。
次回は7/27を予定しています。CTOのShayが来日予定です！</p>

<p>あと、東京以外の勉強会も検討しつつあります。興味のある方はコメントやTwitterで反応をいただけると嬉しいです。</p>

<p>スピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。
よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logstashを使ったElasticsearchの再インデックス（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/05/26/reindex-elasticsearch-with-logstash-ja/"/>
    <updated>2015-05-26T16:08:10+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/05/26/reindex-elasticsearch-with-logstash-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://david.pilato.fr/blog/2015/05/20/reindex-elasticsearch-with-logstash/">Reindex Elasticsearch With Logstash</a></p>

<p>Thanks David!</p>

<!-- more -->


<p>マッピングを変更したり、インデックスの設定を変更したり、あるサーバから他のサーバや、
あるクラスタから他のクラスタ（例えば複数のデータセンターのような場合）にデータを再インデックスしたくなることがあるでしょう。</p>

<p>後者のような場合は<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html">SnapshotやRestoreの機能</a>を利用することもできますが、インデックスの設定を変更をしたい場合は
その他の方法が必要になります。</p>

<p><a href="https://www.elastic.co/blog/logstash-1-5-0-ga-released">Logstash 1.5.0</a>で、
<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-elasticsearch.html">elasticsearch input</a>と<a href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html">elasticsearch output</a>を使うことで、とても簡単に再インデックスができます。</p>

<p>ではやってみましょう。</p>

<h2>古いクラスタ</h2>

<p>elasticsearch 1.5.2 はすでにダウンロード済みとして、<code>localhost:9200</code>で<code>old</code>という名前のクラスタを起動します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/elasticsearch --cluster.name<span class="o">=</span>old
</span></code></pre></td></tr></table></div></figure>


<p>クラスタに<code>person</code>という名前のインデックスが存在します。
これは、5シャードで、100万件のドキュメントを持っています。</p>

<p><img src="http://david.pilato.fr/blog/images/reindex-es01/sense01.png"></p>

<h2>新しいクラスタ</h2>

<p>次に新しいクラスタを起動します。
<code>localhost:9201</code>で<code>new</code>という名前のクラスタを起動します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/elasticsearch --cluster.name<span class="o">=</span>new
</span></code></pre></td></tr></table></div></figure>


<p>こちらは、空です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s2">&quot;http://localhost:9201/person&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;error&quot;</span><span class="p">:</span> <span class="s2">&quot;IndexMissingException[[person] missing]&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;status&quot;</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Logstashのインストール</h2>

<p>次に、Logstash 1.5.0をダウンロードして、インストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://download.elastic.co/logstash/logstash/logstash-1.5.0.tar.gz
</span><span class='line'>tar xzf logstash-1.5.0.tar.gz
</span><span class='line'><span class="nb">cd </span>logstash-1.5.0
</span></code></pre></td></tr></table></div></figure>


<p>logstashの設定ファイル<code>logstash.conf</code>を次のように設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>input <span class="o">{</span>
</span><span class='line'>  <span class="c"># We read from the &quot;old&quot; cluster</span>
</span><span class='line'>  elasticsearch <span class="o">{</span>
</span><span class='line'>    <span class="nv">hosts</span> <span class="o">=</span>&gt; <span class="o">[</span> <span class="s2">&quot;localhost&quot;</span> <span class="o">]</span>
</span><span class='line'>    <span class="nv">port</span> <span class="o">=</span>&gt; <span class="s2">&quot;9200&quot;</span>
</span><span class='line'>    <span class="nv">index</span> <span class="o">=</span>&gt; <span class="s2">&quot;person&quot;</span>
</span><span class='line'>    <span class="nv">size</span> <span class="o">=</span>&gt; 500
</span><span class='line'>    <span class="nv">scroll</span> <span class="o">=</span>&gt; <span class="s2">&quot;5m&quot;</span>
</span><span class='line'>    <span class="nv">docinfo</span> <span class="o">=</span>&gt; <span class="nb">true</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>output <span class="o">{</span>
</span><span class='line'>  <span class="c"># We write to the &quot;new&quot; cluster</span>
</span><span class='line'>  elasticsearch <span class="o">{</span>
</span><span class='line'>    <span class="nv">host</span> <span class="o">=</span>&gt; <span class="s2">&quot;localhost&quot;</span>
</span><span class='line'>    <span class="nv">port</span> <span class="o">=</span>&gt; <span class="s2">&quot;9201&quot;</span>
</span><span class='line'>    <span class="nv">protocol</span> <span class="o">=</span>&gt; <span class="s2">&quot;http&quot;</span>
</span><span class='line'>    <span class="nv">index</span> <span class="o">=</span>&gt; <span class="s2">&quot;%{[@metadata][_index]}&quot;</span>
</span><span class='line'>    <span class="nv">index_type</span> <span class="o">=</span>&gt; <span class="s2">&quot;%{[@metadata][_type]}&quot;</span>
</span><span class='line'>    <span class="nv">document_id</span> <span class="o">=</span>&gt; <span class="s2">&quot;%{[@metadata][_id]}&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c"># We print dots to see it in action</span>
</span><span class='line'>  stdout <span class="o">{</span>
</span><span class='line'>    <span class="nv">codec</span> <span class="o">=</span>&gt; <span class="s2">&quot;dots&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>実行と修正</h2>

<p>実行します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/logstash -f logstash.conf
</span></code></pre></td></tr></table></div></figure>


<h3>ドキュメントのチェックと修正</h3>

<p>何が起きたでしょう？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s2">&quot;http://localhost:9200/person/person/AU1wqyQWZJKU8OibfxgH&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;_index&quot;</span><span class="p">:</span> <span class="s2">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_type&quot;</span><span class="p">:</span> <span class="s2">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_id&quot;</span><span class="p">:</span> <span class="s2">&quot;AU1wqyQWZJKU8OibfxgH&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;found&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Tali Elyne&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;dateOfBirth&quot;</span><span class="p">:</span> <span class="s2">&quot;1955-05-03&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;gender&quot;</span><span class="p">:</span> <span class="s2">&quot;female&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;children&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;marketing&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;cars&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;shoes&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;toys&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;fashion&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;music&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;garden&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;electronic&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;hifi&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;food&quot;</span><span class="p">:</span> <span class="mi">846</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;country&quot;</span><span class="p">:</span> <span class="s2">&quot;Germany&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;zipcode&quot;</span><span class="p">:</span> <span class="s2">&quot;0099&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;city&quot;</span><span class="p">:</span> <span class="s2">&quot;Bonn&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;countrycode&quot;</span><span class="p">:</span> <span class="s2">&quot;DE&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;location&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="mf">7.075943707068682</span><span class="p">,</span>
</span><span class='line'>            <span class="mf">50.72883500730124</span>
</span><span class='line'>         <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>もう一方のクラスタと比較してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s2">&quot;http://localhost:9201/person/person/AU1wqyQWZJKU8OibfxgH&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;_index&quot;</span><span class="p">:</span> <span class="s2">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_type&quot;</span><span class="p">:</span> <span class="s2">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_id&quot;</span><span class="p">:</span> <span class="s2">&quot;AU1wqyQWZJKU8OibfxgH&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;found&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Tali Elyne&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;dateOfBirth&quot;</span><span class="p">:</span> <span class="s2">&quot;1955-05-03&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;gender&quot;</span><span class="p">:</span> <span class="s2">&quot;female&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;children&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;marketing&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;cars&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;shoes&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;toys&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;fashion&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;music&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;garden&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;electronic&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;hifi&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;food&quot;</span><span class="p">:</span> <span class="mi">846</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;country&quot;</span><span class="p">:</span> <span class="s2">&quot;Germany&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;zipcode&quot;</span><span class="p">:</span> <span class="s2">&quot;0099&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;city&quot;</span><span class="p">:</span> <span class="s2">&quot;Bonn&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;countrycode&quot;</span><span class="p">:</span> <span class="s2">&quot;DE&quot;</span><span class="p">,</span>
</span><span class='line'>         <span class="nt">&quot;location&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="mf">7.075943707068682</span><span class="p">,</span>
</span><span class='line'>            <span class="mf">50.72883500730124</span>
</span><span class='line'>         <span class="p">]</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nt">&quot;@version&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;@timestamp&quot;</span><span class="p">:</span> <span class="s2">&quot;2015-05-20T09:53:44.089Z&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Logstashは<code>@version</code>と<code>@timestamp</code>フィールドを追加してしました。
これらを除去したいので、<a href="http://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html">Mutate filter plugin</a>の<a href="http://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-remove_field"><code>remove_field</code></a>を使います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">filter</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">mutate</span> <span class="err">{</span>
</span><span class='line'>    <span class="err">remove_field</span> <span class="err">=&gt;</span> <span class="err">[</span> <span class="nt">&quot;@timestamp&quot;</span><span class="p">,</span> <span class="nt">&quot;@version&quot;</span> <span class="err">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>マッピングのチェックと修正</h3>

<p>実際に、logstashは<code>_source</code>フィールドを既存のドキュメントから読み込み、
それらを新しいクラスタに直接投入しています。
しかし、logstashはマッピングについてはケアしていません。</p>

<p>古いマッピングと新しいマッピングを比較するために、マッピングを取得してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s2">&quot;http://localhost:9200/person/person/_mapping&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>               <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                     <span class="nt">&quot;city&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;index&quot;</span><span class="p">:</span> <span class="s2">&quot;not_analyzed&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;country&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;index&quot;</span><span class="p">:</span> <span class="s2">&quot;not_analyzed&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;countrycode&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;index&quot;</span><span class="p">:</span> <span class="s2">&quot;not_analyzed&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;location&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;geo_point&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;zipcode&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;children&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;dateOfBirth&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;date&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nt">&quot;format&quot;</span><span class="p">:</span> <span class="s2">&quot;dateOptionalTime&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;gender&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nt">&quot;index&quot;</span><span class="p">:</span> <span class="s2">&quot;not_analyzed&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;marketing&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                     <span class="nt">&quot;cars&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;electronic&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;fashion&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;food&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;garden&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;hifi&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;music&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;shoes&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;toys&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>               <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s2">&quot;http://localhost:9201/person/person/_mapping&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="nt">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>               <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                     <span class="nt">&quot;city&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;country&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;countrycode&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;location&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;double&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;zipcode&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;children&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;dateOfBirth&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;date&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nt">&quot;format&quot;</span><span class="p">:</span> <span class="s2">&quot;dateOptionalTime&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;gender&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;marketing&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                     <span class="nt">&quot;cars&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;electronic&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;fashion&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;food&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;garden&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;hifi&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;music&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;shoes&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">},</span>
</span><span class='line'>                     <span class="nt">&quot;toys&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>               <span class="p">},</span>
</span><span class='line'>               <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span>
</span><span class='line'>               <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これにより、いくつかの相違を発見できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'> <span class="s2">&quot;location&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;geo_point&quot;</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'> <span class="s2">&quot;location&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;double&quot;</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>データをインデックスする「前」に、実際に利用したいマッピングでインデックスを作成しておくことで、
この問題に対処できます。
この時点で、オリジナルのマッピングを望んだ形に変更することができます。例えば、アナライザを変更したりです。
また、インデックスの設定を新しく定義することもできます。
デフォルトでは、Elasticsearchは5つのシャードと各シャードに対して1つのレプリカを作成します。
しかし、この時点でもう一度変更することが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XDELETE <span class="s2">&quot;http://localhost:9201/person&quot;</span>
</span><span class='line'>curl -XPUT <span class="s2">&quot;http://localhost:9201/person&quot;</span> -d<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">  &quot;settings&quot;: {</span>
</span><span class='line'><span class="s1">    &quot;number_of_shards&quot;: 1,</span>
</span><span class='line'><span class="s1">    &quot;number_of_replicas&quot;: 0</span>
</span><span class='line'><span class="s1">  }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span><span class='line'>curl -XPUT <span class="s2">&quot;http://localhost:9201/person/person/_mapping&quot;</span> -d<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">  &quot;person&quot;: {</span>
</span><span class='line'><span class="s1">    &quot;properties&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;address&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;properties&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;city&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">            &quot;index&quot;: &quot;not_analyzed&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;country&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">            &quot;index&quot;: &quot;not_analyzed&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;countrycode&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">            &quot;index&quot;: &quot;not_analyzed&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;location&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;geo_point&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;zipcode&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;string&quot;</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;children&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;dateOfBirth&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;date&quot;,</span>
</span><span class='line'><span class="s1">        &quot;format&quot;: &quot;dateOptionalTime&quot;</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;gender&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">        &quot;index&quot;: &quot;not_analyzed&quot;</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;marketing&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;properties&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;cars&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;electronic&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;fashion&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;food&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;garden&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;hifi&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;music&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;shoes&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          },</span>
</span><span class='line'><span class="s1">          &quot;toys&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;long&quot;</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;name&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;string&quot;</span>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  }</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、もう一度再インデックスしましょう！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/logstash -f logstash.conf
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://david.pilato.fr/blog/images/reindex-es01/sense02.png"></p>

<h2>インデックスやタイプ名の変更</h2>

<p>もちろん、インデックス名やタイプ名、IDを変更したい場合も変更が可能です！:)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'>  <span class="err">elasticsearch</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">host</span> <span class="err">=&gt;</span> <span class="nt">&quot;localhost&quot;</span>
</span><span class='line'>    <span class="err">port</span> <span class="err">=&gt;</span> <span class="s2">&quot;9201&quot;</span>
</span><span class='line'>    <span class="err">protocol</span> <span class="err">=&gt;</span> <span class="s2">&quot;http&quot;</span>
</span><span class='line'>    <span class="err">index</span> <span class="err">=&gt;</span> <span class="s2">&quot;europe_people&quot;</span>
</span><span class='line'>    <span class="err">index_type</span> <span class="err">=&gt;</span> <span class="s2">&quot;someone&quot;</span>
</span><span class='line'>    <span class="err">document_id</span> <span class="err">=&gt;</span> <span class="s2">&quot;%{[@metadata][_id]}&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[discuss.elastic.co にぜひ参加を]]></title>
    <link href="http://blog.johtani.info/blog/2015/05/21/join-the-conversation-ja/"/>
    <updated>2015-05-21T17:45:03+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/05/21/join-the-conversation-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/join-the-conversation">Join the Conversation: Discuss.Elastic.Co</a></p>

<!-- more -->


<p>3つのOSSプロジェクトの開発をスケールアップし始め、
コミュニティサポートのために必要なやりとりに対してメーリングリストでは難しいということがわかってきました。
私たちは複数のメーリングリストを持っています。Elasticsearch、Logstash、そして英語以外の様々な言語のメーリングリストです。
このような状況では、あたらしい人たちはどこで質問をするのが良いのか混乱します。</p>

<p>また、メーリングリストの流量が増え、「参考になる話題」を見つけるのが難しくなってきました。
様々なユーザに採用してもらい、様々なユースケースが出てくることで、様々な質問が出てきています。
汎用的なメーリングリストではノイズの中から望んだ情報を見つけるのは難しいです。
また、ユーザ全てがメーリングリスト満足しているわけではありません。</p>

<p>Elasticは、ユーザの問題を解くことが大好きです。
コミュニティのメンバー皆さんに気に入っていただけるであろうソリューションを見つけ、フォーラムを
<a href="https://discuss.elastic.co">https://discuss.elastic.co</a> に移すことにしました。
ぜひ参加して、この新しいツールについてのご意見を聞かせてください。</p>

<p>メーリングリストは好きだけど、ウェブフォーラムは苦手？問題ありません。
フォーラムにユーザプロファイル（GitHub、Facebook、Twitter、Google Appsのアカウントと連携するか、emailアドレスを利用すれば簡単に作れます）を作り、
email通知の設定をすればOKです。
これで、<a href="https://discuss.elastic.co/t/email-only-interaction-with-the-forums/106">emailでのやりとり</a>ができるようになります。</p>

<p>利用して、議論を楽しんでください。
もちろん、改善案などにかんする<a href="https://discuss.elastic.co/c/meta">ご意見もお待ちしています</a>！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.5.2 および 1.4.5リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/04/28/elasticsearch-1-5-2-and-1-4-5-released-ja/"/>
    <updated>2015-04-28T15:14:08+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/04/28/elasticsearch-1-5-2-and-1-4-5-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-1-5-2-and-1-4-5-released">Elasticsearch 1.5.2 Released</a></p>

<p>本日（4/27）、<strong>Lucene 4.10.4</strong>ベースの<strong>Elasticsearch 1.5.1</strong>および<strong>Elasticsearch 1.4.5</strong> をセキュリティバグフィックス版をリリースしました。
ダウンロードおよびすべての変更については次のリンクをごらんください。</p>

<ul>
<li>最新安定版：<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-2">Elasticsearch 1.5.2</a></li>
<li>1.4系バグフィックス：<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-4-5">Elasticsearch 1.4.5</a></li>
</ul>


<p><em>本リリースはディレクトリトラバーサルの脆弱性のフィックスです。すべてのユーザにアップグレードを勧めます。</em></p>

<!-- more -->


<p>過去のリリースに関するブログは以下のリンクを参照してください。</p>

<ul>
<li><em>1.5</em>:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-5-1-released/">1.4.1</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-5-0-released/">1.5.0</a></li>
<li><em>1.4</em>:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-4-released/">1.4.4</a>,<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-released/">1.4.3</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-2-released/">1.4.2</a>,<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.4.1</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.4.0</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/">1.4.0.Beta1</a></li>
</ul>


<p>すべての<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-2">1.5.2</a>および<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-4-5">1.4.5</a>の変更についてはリンクをごらんください。以下では、セキュリティの問題について紹介します。</p>

<h2>ディレクトリトラバーサル脆弱性の発見</h2>

<p>1.5.2および1.4.5以前の全バージョンのElasticsearchで、ディレクトリトラバーサル攻撃に対する脆弱性がみつかりました。
攻撃者はElasticsearchを実行しているサーバからファイルを取得することができます。
この脆弱性はインストールしたばかりのElasticsearchには存在しません。
この脆弱性は&#8221;site plugin&#8221;がインストールされると露呈します。
ElasticのMarvelプラグインおよびコミュニティサポートの多くのプラグイン（例：Kopf、BigDesk、Head）がsite pluginです。
Elastic Shield、Licensing、Cloud-AWS、Cloud-GCE、Cloud-Azure、analysis pluginおよびriverプラグインはsite pluginでは<em>ありません</em>。</p>

<p>この問題を<a href="https://www.elastic.co/community/security">CVE-2015-3337</a>としました。</p>

<p>バージョン1.5.2と1.4.5はこの脆弱性に対して対策済みで、私たちはすべてのユーザにアップグレードを勧めています。</p>

<p>アップグレードを望まないユーザはいくつかの方法でこの脆弱性に対して対応可能ですが、これらの方法はsite pluginを動作させなくします。</p>

<ul>
<li>site pluginをインストールしているノードの<code>elasticsearch.yml</code>の<code>http.disable_sites</code>を<code>true</code>に設定し、Elasticsearchのノードを再起動</li>
<li>ファイアウォールもしくはプロキシを利用して、<code>/_plugin</code>へのHTTPリクエストをブロック</li>
<li>すべてのsite pluginをすべてのElasticsearchノードからアンインストール</li>
</ul>


<p>この問題を報告していただいた、DocuSignのJohn Heasmanに感謝いたします。</p>

<h2>他の変更について</h2>

<ul>
<li><a href="https://github.com/elastic/elasticsearch/pull/10526">インデックスされたスクリプトおよびテンプレート</a>を上書きもしくは削除時に、キャッシュからも完全に削除する。</li>
<li>geo-shapeの多数のフィックス（<code>distance_error_pct</code>を利用した場合の、重要な<a href="https://github.com/elastic/elasticsearch/pull/10679">precisionに関するフィックス</a>を含む）</li>
<li>インデックステンプレートのデフォルトマッピングがバルクインデキシング中にも考慮するように修正</li>
<li>Shadowレプリカが<a href="https://github.com/elastic/elasticsearch/pull/10688">ファイルシステムの遅延</a>に対する対障害性を向上し、プライマリシャードの<a href="https://github.com/elastic/elasticsearch/pull/10585">よりスムーズなリロケーション</a>をサポート</li>
<li><a href="http://github.com/elastic/elasticsearch/issues/10602">geo-contexts</a>をcompletion suggesterで使用した場合のマッピングのリフレッシュループを改善</li>
</ul>


<p>いくつかの重要な変更がv1.4.5にバックポートされています。</p>

<ul>
<li><a href="http://github.com/elastic/elasticsearch/issues/10463">大きなシャードのリカバリを早くする</a>ためのシャードリカバリ中のマージを可能に</li>
<li><a href="http://github.com/elastic/elasticsearch/issues/9797">truncated translogs</a>の操作をグレースフルに</li>
<li>マージが遅くなる場合に、<a href="http://github.com/elastic/elasticsearch/issues/9986">delete-by-queryを減速</a></li>
</ul>


<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-2">Elasticsearch 1.5.2</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第9回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/04/17/9th-elasticsearch-jp/"/>
    <updated>2015-04-17T14:41:54+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/04/17/9th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="https://elasticsearch.doorkeeper.jp/events/23012">第9回Elsticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、開場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、ありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<!-- more -->


<p>今回はトレーニングで来日していたIgorとNathanによる特別公演でした。
昨年同様、<a href="http://samuraism.com">サムライズム</a>の<a href="https://twitter.com/yusuke">@yusuke</a>さんに
テキスト翻訳していただき、大変助かりました。ほんとうにすごかった。。。</p>

<h3>チェックイン数など</h3>

<ul>
<li>今回はチェックインした人：119名</li>
<li>キャンセルしなかった人：45名</li>
</ul>


<p>でした。今回はキャンセル待ちのまま当日を迎えた人もいなかったので良かったかなと。
今回から懇親会ページを別にしてみました。本編の勉強会に参加登録していた方には何度かメールを出していたので、
見つけていなかった人は以内とは思うのですが、勉強会のページと間違える人がいたらしいという話を聞きました。
Doorkeeperで1イベントで複数のチケットにそれぞれの参加者数を設定できるようになると嬉しいかもなぁ。</p>

<p>さて、いつもの通り簡単なメモです。
本当に簡単にですが。</p>

<h2>Resiliency in Elasticsearch and Lucene / Igor Motov</h2>

<p>スライド：<a href="https://speakerdeck.com/elastic/resiliency-in-elasticsearch-and-lucene">https://speakerdeck.com/elastic/resiliency-in-elasticsearch-and-lucene</a></p>

<p>※上記スライドは少し古いバージョンです。公開されたら差し替える予定です。</p>

<p>サンフランシスコで行われた<a href="https://www.elastic.co/elasticon">Elastic{ON}</a>（弊社初のカンファレンス）で行われたセッションの
改良版といったところでしょうか。
話の中で登場した機能などのリンクをざっとアップしておきます。</p>

<ul>
<li><a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/fielddata.html">Fielddata</a></li>
<li><a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/doc-values.html">Doc Values</a></li>
<li><a href="http://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html">Resiliency Status</a></li>
</ul>


<h2>Kibana4: What&rsquo;s New ? / Nathan Zamecnik</h2>

<p>スライド：未定</p>

<p>Kibana4の紹介をデモを交えてという感じでした。
こちらは、スライドよりもデモを見てもらうのが一番いいのですが。。。</p>

<p>いくつかQAがあったので補足を。ちなみに、Issueのラベルに実装される予定のバージョンが付与されてたりします。</p>

<ul>
<li>Q：グラフをPDFでエクスポートとかできますか？

<ul>
<li>A：4.3.0で実装される予定です。関連Issueはこちら。<a href="https://github.com/elastic/kibana/issues/509">https://github.com/elastic/kibana/issues/509</a></li>
</ul>
</li>
<li>Q：巨大な数値の場合にKB、MBなどといった表示は可能ですか？

<ul>
<li>A：4.1.0で実装される予定です。関連Issueはこちら。<a href="https://github.com/elastic/kibana/issues/1543">https://github.com/elastic/kibana/issues/1543</a></li>
</ul>
</li>
<li>Q：地図のズームを固定することはできますか？

<ul>
<li>A：4.1.0で実装される予定です。関連Issueはこちら。<a href="https://github.com/elastic/kibana/issues/1442">https://github.com/elastic/kibana/issues/1442</a></li>
</ul>
</li>
</ul>


<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://suzuki.tdiary.net/20150415.html#p01">[Elasticsearch] 第9回 Elasticsearch 勉強会へ参加してきた</a></li>
</ul>


<h2>まとめ</h2>

<p>今回は特別バージョンでした。かなり詳しい話だったので面白かったと思います。
Kibanaはデモを見ていただけましたし。また、海外から人を呼べるといいなぁ。</p>

<p>次回は6月ごろをめどに計画しようかと。
スピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。 よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.5.1リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/04/13/elasticsearch-1-5-1-released-ja/"/>
    <updated>2015-04-13T11:34:31+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/04/13/elasticsearch-1-5-1-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-1-5-1-released">Elasticsearch 1.5.1 Released</a></p>

<p>本日（4/9）、<strong>Lucene 4.10.4</strong>ベースの<strong>Elasticsearch 1.5.1</strong> をリリースしました。
このリリースはElasticsearchの最新の安定バージョンとなります。</p>

<p>すべての変更については<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-1">download Elasticsearch 1.5.1 here</a>をごらんください。</p>

<!-- more -->


<p>本リリースはシャードを新しいノードに配置するスピードを改善するためのバグフィックスを含んでいます。
シャードのリカバリーの最初のフェーズで、コピー元のノードからコピー先のノードへすべてのセグメントをコピーします。
このフェーズ中には登録、更新削除のリクエストはトランザクションログに記録され、リカバリが終了したあとに
コピー先のノードでトランザクションログが再生されます。
シャードが大きい場合、トランザクションログに多数のイベントがたまってしまいます。</p>

<p>以前では、新しいセグメントのマージはリカバリ中のコピー先のノードでは、実行できませんでした。
大きなトランザクションログは結果として、小さな新しいセグメントを多く生成し、リカバリのスピードに非常に影響を与えます。
Issue <a href="https://github.com/elastic/elasticsearch/pull/10463">#10463</a>は
リカバリ中のコピー先のシャードのマージを可能にする変更です。</p>

<p>その他の注目すべきバグフィックスは次のものになります。</p>

<ul>
<li>多くの削除によりバージョンマップがいっぱいになった場合にrefreshを実行するように変更(<a href="https://github.com/elastic/elasticsearch/pull/10312">#10312</a>)</li>
<li>多数のスナップショットを含んだリポジトリの管理の改善(<a href="https://github.com/elastic/elasticsearch/pull/10366">#10366</a>)</li>
<li>実験的な機能である<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-inner-hits.html">inner hits</a>のバグフィックス(<a href="https://github.com/elastic/elasticsearch/pull/10388">#10388</a>, <a href="https://github.com/elastic/elasticsearch/pull/10353">#10353</a>, <a href="https://github.com/elastic/elasticsearch/pull/10309">#10309</a>, <a href="https://github.com/elastic/elasticsearch/pull/10235">#10235</a>)</li>
</ul>


<p>最後に、<a href="https://www.elastic.co/blog/deprecating_rivers">Riverが非推奨となりました</a>、まだ見ていない場合は記事をご覧ください。</p>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-1">Elasticsearch 1.5.1</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch勉強会 in 名古屋を開催しました。#elasticsearch #elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/04/04/elasticsearch-study-session-at-nagoya/"/>
    <updated>2015-04-04T09:47:19+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/04/04/elasticsearch-study-session-at-nagoya</id>
    <content type="html"><![CDATA[<p><a href="https://elasticsearch.doorkeeper.jp/events/21984">Elasticsearch勉強会 in 名古屋</a>を開催しました。
初の東京以外での勉強会です。
企画、セッションなどお手伝いいただいた<a href="https://twitter.com/smogami">@smogami</a>さん、<a href="https://twitter.com/mzp">@mzp</a>さんありがとうございました！</p>

<p><img src="http://blog.johtani.info/images/entries/20150406/nagoya.jpg" width="500"></p>

<!-- more -->


<h2>Elasticsearch/ELK stack紹介 @johtani</h2>

<p>スライド：<a href="https://speakerdeck.com/johtani/introduction-elasticsearch-and-elk-elasticsearchmian-qiang-hui-in-nagoya">Introduction Elasticsearch</a></p>

<p>初回（次回があるかはわかりませんが。。。）ということもあり、Elasticsearchの説明を行いました。
あと、LogstashとKibanaも。
Kibanaについては、手元の環境でいつものアクセスログのデモやなどを行いました。
また、LTの後に時間があったので、前回の勉強会で利用したチェックリストの説明なども。</p>

<h2>スタンドファームにおけるElasticsearch導入事例 <a href="https://twitter.com/mzp">@mzp</a> さん</h2>

<p>スライド：後日アップ？</p>

<ul>
<li>使ってるのはKibana3</li>
<li>アクセスログが保存されてたけど、活用できてなかった。</li>
<li>Fluentd、Elasticsearch、Kibanaをいれて、可視化してみた。</li>
<li>普通にログ検索が簡単にできて嬉しい</li>
<li>システムのレスポンスの性能値などを可視化できるようにして性能改善中</li>
</ul>


<h2>Kibanaでログ分析を1年続けてみたら業務システムの保守と運用が捗った(仮) <a href="https://twitter.com/smogami">@smogami</a> さん</h2>

<p>スライド：「<a href="https://speakerdeck.com/exoego/how-and-why-i-have-been-leveraging-kibana-for-devops">Kibanaでログ分析を1年続けてみたら業務システムの保守と運用が捗った</a>」</p>

<ul>
<li>名古屋でJavaの勉強会を主催してみたり（最近できてないけど）</li>
<li>導入するのになかなか大変だった（ファイアウォールだったりが）。。。</li>
</ul>


<p>Kibanaを使ってどんなことをしてるのか？</p>

<ul>
<li>既存システムなどの機能の実行回数やレスポンス時間の推移</li>
<li>曜日ごとにもチェック</li>
<li>どの機能がよく使われるのか？</li>
<li>対象となっているシステムはJavaのシステム。</li>
</ul>


<p>QA</p>

<ul>
<li>Q：ログの出力は新規に追加したのか？

<ul>
<li>A : ログの出力自体はLog4Jの設定を変更しただけ。もともと、各メソッドの開始と終了にそれぞれ時間が出力される仕組みがある。<br/>
ログの読み込み自体は自作ツールを利用。</li>
</ul>
</li>
</ul>


<h2>飛び込みLT <a href="https://twitter.com/dabits">@dabits</a> さん</h2>

<p>スライド：未定</p>

<p>Kibanaの使い道</p>

<ul>
<li>KPIツール</li>
<li>エゴサーチツール - Twitterや2chなどのデータを解析ソーシャル分析みたいな感じ？</li>
<li>ダッシュボードを用意してあげる場合もあるが、触っていろんな機能を試す人も。</li>
</ul>


<h2>感想・反省点など</h2>

<p>30名弱の方に参加していただきました。ありがとうございました。
東京の勉強会でもそうですが、半分くらいが検索、半分くらいがログ解析関連に興味がある感じでした。
飛び込みLTもしていただけましたし。会場内限定の話もいくつか。</p>

<h4>場所</h4>

<p>場所が少しわかりにくかったかなと。。。建物の入り口に看板がないので、1名に看板役として立っていただきました。
ただ、設備は充実していましたし、室内も綺麗でよかったです。</p>

<p><img src="http://blog.johtani.info/images/entries/20150406/seminar_room.jpg" width="300"></p>

<h4>懇親会</h4>

<p>11名（+私）でした。美味しい手羽先などをいただきながら、Elasticsearch以外のことでも盛り上がりましたw。
また、名古屋の観光名所なども教えてもらったりと有意義な時間でしたw。</p>

<p>ということで、少しでもElasticsearch、Kibana、Logstashなどのユーザが増えてくれればうれしいかなと。
私抜きでも勉強会はできると思うので、今後も開いてもらえるとうれしいかぎりです。
初めての東京以外での勉強会でどんな感じの方が利用しているのか、興味があるのかといったことも知ることができました。</p>

<h2>関連ブログなど</h2>

<ul>
<li><a href="http://blog.exoego.net/2015/04/kibana4-use-case.html">Kibana4活用事例を話しました</a></li>
</ul>


<h2>その他（余談）</h2>

<p>コンパルという喫茶店のアイスコーヒー。ちょっと新鮮な体験でした。
<img src="http://blog.johtani.info/images/entries/20150406/ice_coffee.jpg" width="300"></p>

<p>あとは、日曜日に観光場所として教えてもらった、<a href="http://www.tcmit.org/">トヨタ産業技術記念館</a>にも行ってみました。
一人だったけど、非常に楽しめました。実演とかあって、わかりやすいし。
トヨタが自動織機の会社が始まりだってのは知らなかった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.5.0リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/04/01/elasticsearch-1-5-0-released-ja/"/>
    <updated>2015-04-01T12:38:16+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/04/01/elasticsearch-1-5-0-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-1-5-0-released">Elasticsearch 1.5.0 Released</a></p>

<p>本日（3/23）、<strong>Lucene 4.10.4</strong>ベースの<strong>Elasticsearch 1.5.0</strong> をリリースしました。
このリリースはElasticsearchの最新の安定バージョンとなります。
多くの<em>resiliency(復元性、弾力性) enhancement</em>とバグフィックスを含んでおり、
すべてのユーザにアップグレードを推奨しています。</p>

<p>すべての変更については<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-0">download Elasticsearch 1.5.0 here</a>をごらんください。</p>

<p>460PRという大量の変更を含む本リリースは、Elasticsearchをよりresilient(弾力のあるもの)にするために
費やされています。</p>

<!-- more -->


<h3>Inner hits</h3>

<p>本リリースで追加された、Elasticsearchに最もリクエストされたものの一つがinner hitsです。
これは、<code>has_child</code>もしくは<code>nested</code>クエリにマッチした子のドキュメントを、各親ドキュメントと一緒に返すことができます。</p>

<p>例えば、<code>blog</code>という親ドキュメントと<code>comment</code>という子ドキュメントを持っているとします。
この時、&#8221;full text search&#8221;というコメントを持ったブログ記事を検索したいとします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">GET</span> <span class="err">/my_index/blog/_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;has_child&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;type&quot;</span><span class="p">:</span>       <span class="s2">&quot;comment&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;score_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;sum&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;body&quot;</span><span class="p">:</span>   <span class="s2">&quot;full text search&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のリクエストは、親の<code>blog</code>ドキュメントを返します。
しかし、どのコメントが関係しているのかはわかりません。
関連しているコメントを検索して親ごとにグルーピングするために、
少し手間のかかる2回目のクエリを実行する必要があります。</p>

<p>Inner hitsがこれを変えてくれます。
<code>inner_hits</code>パラメータを次のように、上記のクエリに追加するだけです！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">GET</span> <span class="err">/my_index/blog/_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;has_child&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;type&quot;</span><span class="p">:</span>       <span class="s2">&quot;comment&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;score_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;sum&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;body&quot;</span><span class="p">:</span>   <span class="s2">&quot;full text search&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nt">&quot;inner_hits&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>検索結果の各<code>blog</code>記事に、<code>inner_hits</code>という項目があり、そこに検索にヒットしたコメントの
上位3件（デフォルト値）が返ってきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">...</span>
</span><span class='line'><span class="s2">&quot;hits&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;_index&quot;</span><span class="p">:</span>   <span class="s2">&quot;my_index&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_type&quot;</span><span class="p">:</span>    <span class="s2">&quot;blog&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_id&quot;</span><span class="p">:</span>      <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_score&quot;</span><span class="p">:</span>   <span class="mf">3.68</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_source&quot;</span><span class="p">:</span>  <span class="p">{</span> <span class="err">...</span> <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;inner_hits&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;comment&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;total&quot;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;hits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;_type&quot;</span><span class="p">:</span>    <span class="s2">&quot;comment&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;_id&quot;</span><span class="p">:</span>      <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;_score&quot;</span><span class="p">:</span>   <span class="mf">2.79</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;body&quot;</span><span class="p">:</span>   <span class="s2">&quot;Full text search is the bomb&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="p">{</span> <span class="err">...</span> <span class="p">},</span>
</span><span class='line'>          <span class="p">{</span> <span class="err">...</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>inner_hits</code>部分は、第2の検索リクエストに似ています。
<code>size</code>や<code>from</code>パラメータを含めるくことで、挙動をカスタマイズできます。
また、検索から想像するであろう、ページネーション、ソート、ハイライト、<code>_source</code>フィルタリングなどといった機能もサポートします。</p>

<p>Inner hitsはparent-childおよび、<code>nested</code>ドキュメントをサポートします。
この機能は、現時点では<code>experimental</code>ラベルが付与されています。
このラベルは、この機能が将来変更されたり、削除されたりする可能性があるかもしれないことを意味します。
詳細については、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-request-inner-hits.html">Inner Hits documentation</a>をごらんください。</p>

<h3>Shadow replicas</h3>

<p>Elasticsearchはそれ自身の冗長性に常に気をつけています。
それは、レプリカシャード（各プライマリシャードの冗長なコピー）を持っています。
これは、プライマリシャードを失った時に、データをロスしないようにするためのものです。
レプリカシャードはまた、検索のスループットをスケールアウトするためにも利用できます。
多くのレプリカ（ノードを伴うことで。）はスループットを増加させます。</p>

<p>しかし、ユーザによってはElsticsearchを分散ファイルシステム上でホスティングしており、すでに、
ファイルシステムがレプリケーションと冗長性を担当しています。
ファイルシステムが同じことしているので、各シャードのコピーを複数持つことはあまり意味がありません。</p>

<p>Shadowレプリカはノードを追加することによる検索スループットをスケールアウトすることが、
余分なストレージやインデキシングのコストを払うことなく、可能になります。
代わりに、各シャドーレプリカはプライマリシャードを持っている共有ファイルシステムにread-onlyでアクセスします。
Shadowレプリカは定期的にファイルシステムのビューをリフレッシュし、プライマリシャードのどんな変更も検知するでしょう。</p>

<p>プライマリシャードが失敗したら、Shadowレプリカがプライマリに昇格し、
失敗したプライマリによって書き込まれたトランザクションログを読み込みリプレイできます。</p>

<p>この機能は<em>experimental</em>マークが付いています。詳細については<a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/indices-shadow-replicas.html">Shadow Replicas documentation</a>をごらんください。</p>

<h3>Resiliency improvements</h3>

<p>Elasticsearch 1.1 から 1.3では、インデックスのすべてのファイルのチェックサムを追加し、
それらのファイルが壊れているかどうかをチェックするために利用することにフォーカスしました。
1.4では、Zen discoveryと分散モデルについて大きな改良を加えました。</p>

<p>これらの変更にともなう、より詳細な統計情報やより詳細なロギングがElasticsearchやLuceneの以前のバージョンに存在した
未知の問題を明るみに出しました。
Elasticsearch 1.5.0では、これらの問題の多くに対処しています。</p>

<ul>
<li><p>ElasticsearchとLuceneの以前のバージョンにあるバグがインデックスの故障を引き起こしていました。<br/>
チェックサムコードのおかげで、これらを発見できました。現在は、Elasticsearchの起動時に自動的にLucene3.x<br/>
(Elasticsearch 0.20.x以前)が作成したセグメントを検知して、シャードをオープンする前に、新しいフォーマットを使って、
新しいコミットポイントを書き出します。(<a href="https://github.com/elastic/elasticsearch/pull/9899">#9899</a>)</p></li>
<li><p>1.3.xもしくは以前のバージョンからローリングアップグレードは、ローカルのシャードデータを再利用しようとせずに、<br/>
シャード全体をコピーしようとします。1.3.2と以前のバージョンが実行されているノードからローリングアップグレードすることは
圧縮をオフにしない限りできなくなりました。(<a href="https://github.com/elastic/elasticsearch/pull/9925">#9925</a>)<br/>
1.3.xやそれ以前のバージョンからアップグレードする場合、ローリングアップデートする代わりにクラスタの再起動を考えたほうがいいかもしれません。</p></li>
<li><p>非同期環境は予測することが難しいです。時に、最も予測していないことが起きるからです。<br/>
シャード配置、リカバリ、削除のコードの多くが単純化され、状態変更をよりアトミックで決定的にするための変更によりリファクタリングされました。<br/>
(<a href="https://github.com/elastic/elasticsearch/pull/8720">#8720</a>, <a href="https://github.com/elastic/elasticsearch/pull/9799">#9799</a>, <a href="https://github.com/elastic/elasticsearch/pull/9784">#9784</a>, <a href="https://github.com/elastic/elasticsearch/pull/9801">#9801</a>, <a href="https://github.com/elastic/elasticsearch/pull/9083">#9083</a>, <a href="https://github.com/elastic/elasticsearch/pull/8579">#8579</a>, <a href="https://github.com/elastic/elasticsearch/pull/8436">#8436</a>, <a href="https://github.com/elastic/elasticsearch/pull/8092">#8092</a>, <a href="https://github.com/elastic/elasticsearch/pull/9902">#9902</a>, <a href="https://github.com/elastic/elasticsearch/pull/6644">#6644</a>, <a href="https://github.com/elastic/elasticsearch/pull/8350">#8350</a>, <a href="https://github.com/elastic/elasticsearch/pull/9770">#9770</a>, <a href="https://github.com/elastic/elasticsearch/pull/9616">#9616</a>, <a href="https://github.com/elastic/elasticsearch/pull/9439">#9439</a>, <a href="https://github.com/elastic/elasticsearch/pull/8350">#8350</a>, <a href="https://github.com/elastic/elasticsearch/pull/8494">#8494</a>)</p></li>
<li><p>同様に、変更はクラスタ状態の更新が常に前進するということを確実にしました。更新の受け取り順序が順不同であったり、<br/>
マスターだったノードからの更新を受け取った場合に混乱させていました。
(<a href="https://github.com/elastic/elasticsearch/pull/9632">#9632</a>, <a href="https://github.com/elastic/elasticsearch/pull/9541">#9541</a>, <a href="https://github.com/elastic/elasticsearch/pull/9503">#9503</a>)</p></li>
<li><p>チェックサムとチェックサムのバリデーションの強化(<a href="https://github.com/elastic/elasticsearch/pull/8723">#8723</a>,<br/>
<a href="https://github.com/elastic/elasticsearch/pull/8599">#8599</a>, <a href="https://github.com/elastic/elasticsearch/pull/8587">#8587</a>, <a href="https://github.com/elastic/elasticsearch/pull/8407">#8407</a>, <a href="https://github.com/elastic/elasticsearch/pull/8010">#8010</a>, <a href="https://github.com/elastic/elasticsearch/pull/8018">#8018</a>)</p></li>
<li><p>disk threshold allocation deciderを速く(<a href="https://github.com/elastic/elasticsearch/pull/8803">#8803</a>)、賢く(<a href="https://github.com/elastic/elasticsearch/pull/7785">#7785</a>)、自動化(<a href="https://github.com/elastic/elasticsearch/pull/8270">#8270</a>)</p></li>
<li><p>auto-generated IDの利用時のインデキシングのスピードアップのためのに追加された最適化を除去。<br/>
たまにドキュメントを重複して登録するため(<a href="https://github.com/elastic/elasticsearch/pull/7729">#7729</a>)</p></li>
</ul>


<h3>Download now</h3>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-5-0">Elasticsearch 1.5.0</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#elasticon に参加中]]></title>
    <link href="http://blog.johtani.info/blog/2015/03/11/attend-elasticon/"/>
    <updated>2015-03-11T16:46:31+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/03/11/attend-elasticon</id>
    <content type="html"><![CDATA[<p>サンフランシスコからこんにちは。</p>

<p>今、私は、弊社初のユーザカンファレンス<a href="http://www.elasticon.com">elastic{ON}</a>に
参加するために、初のアメリカ出張中です。
初のユーザカンファレンスですが、世界各国から約1300人！の登録がありました。</p>

<p><img src="http://blog.johtani.info/images/entries/20150311/elasticon.jpg" width="500"></p>

<!-- more -->


<p>本日が初日（Welcome Receptionが昨晩開催されましたが）です。
初日のキーノートで重要な発表が2つありました。</p>

<ul>
<li>ブランド名の変更（<a href="https://www.elastic.co/blog/elastic-you-know-for-more-than-search">Elastic: For - You Know, More Than Search</a>）</li>
<li>Found.noの加入（<a href="https://www.elastic.co/blog/welcome-found">Welcome Found</a>）</li>
</ul>


<p>です。</p>

<p><img src="http://blog.johtani.info/images/entries/20150311/elastic_sticker.jpg" width="500"></p>

<p>昨日までは、elasticsearchでした。
本日からは、<a href="elastic.co">elastic</a>になります。
ブランド名の変更と同時にサイト、ロゴなども変更されました。</p>

<p>もう一つのビッグニュースがFoundの加入です。
found.noはElasticsearchをクラウドサービスとして提供している会社です。
彼らがジョインすることで、elasticsearchをより気軽に利用できるような環境ができてきます。</p>

<p>Keynoteでの驚きのニュースこれらでした。
もちろん、このカンファレンスはそれだけには止まりません。</p>

<p>NetflixやGitHub、Verison Mobile、WikimediaといったElasticsearch,ELKスタックのユーザの話や、
弊社の人たちによる今後のロードマップや私たちの考え方など多岐にわたる話を聞くことができます。</p>

<p>このような機会を今後も提供できるような会社になれるよう、頑張っていきたいなと思っています。</p>

<p><img src="http://blog.johtani.info/images/entries/20150311/heineken.jpg" width="300"></p>

<p>ちなみに、弊社のカンファレンスは私がこれまで経験したことのないカンファレンスになっています。
DJや各種ゲーム（ビリヤードとかパックマンとか）が楽しめるようなパーティが
懇親会として開催されたり、スポンサーブースでウェルカムレセプションが行われたりと、
面白い取り組みにあふれています。
次回開催されることがあれば、ぜひ日本の方達にも参加してもらえたらうれしいなと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[セキュリティ向けプラグインShieldのリリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/27/you-know-for-security-shield-goes-ga-ja/"/>
    <updated>2015-02-27T18:49:56+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/27/you-know-for-security-shield-goes-ga-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/you-know-for-security-shield-goes-ga/">you know, for security: shield goes ga</a></p>

<p>1/27にShield 1.0 をリリースしました。
Elasticsearch向けの私たちのセキュリティプラグインの最初のリリースです。
11月にShieldについてアナウンスしてから、Elsaticsearchのためのセキュリティの機能は、
一般的に望まれているものから始まり、具体的な考えと実行できる計画へと変遷し、それが、いま現実となりました。</p>

<p>十分にセキュアな環境に、Elasticsearchクラスタをセキュアな状態でデプロイできるようにするため、
私たちは継続的にカスタマーやユーザーからのリクエストを受け取り、統合されたソリューションになるようにしてきました。</p>

<p>私たちは、そのようなプロダクトがどうあるべきか調査することから始め、
カスタマーとユーザが必要とするセキュリティとはどんなものかを理解するために多くの時間を費やしました。
その結果がShieldです。
Shieldは、ElasticsearchクラスタをセキュアにするElasticsearchの有償プラグインです。
私たちは、ShieldをDev、Gold、Platinumサブスクリプションの一部として、追加料金なしで提供します。</p>

<p>最初のリリースでは、基本的な機能と基盤にフォーカスしています。
Elasticsearch自身に対しても、セキュリティに対して準備してきました。
拡張性の側面だけでなく、Elasticsearchにあるデータフローについても再考してきました。
Elasticsearchクラスタをセキュアにする場合に、具体的な価値を即座に届けるだけでなく、素早く拡張できるようにも開発しました。</p>

<!-- more -->


<h3>機能</h3>

<p>Shield 1.0は次の5つにフォーカスしています。</p>

<ul>
<li>認証(Authentication)</li>
<li>認可(Authorization)</li>
<li>暗号化通信とノードの認可(Encrypted Communication &amp; Node Authentication)</li>
<li>IPフィルタリング</li>
<li>監査証跡(Audit Trail)</li>
</ul>


<h3>認証(Authentication)</h3>

<p>セキュリティの大部分はアイデンティティについてです（例えば、だれがこのAPIを呼び出したのか？システムに何のサービスが接続するか？など）
サービスのライフタイムのある時点で、サブジェクト（例えばユーザー）を現在実行中のサブプロセスなどに結びつけることです。
この関係性を持つためには、サブプロセスを実行する前にユーザの身元を確認するように命じます。
ユーザの身元の確認のプロセスをAuthenticationと呼び、ElasticsearchのすべてのAPIコールでそれが実行されます。</p>

<p>認証の手法は多くの異なるものがあります。
それぞれの手法は、ユーザが認証されたという資格（Authentication Token）を、それぞれのタイプで提供するようにユーザに要求します。
Shield 1.0ではシンプルに、必要なauthentication tokenをユーザ/パスワードペアとしています。
（これは、Shieldの認証基盤が簡単に拡張でき、将来は異なるauthentication tokenもサポートできることを意味します。）</p>

<p>ユーザの資格を受け取ることだけでは不十分で、次に、それらをチェックする必要があります。
Shieldでは、これはレルムの責務です。
レルムは認証プロバイダ/サービスとしてみることができます。
妥当なユーザであると判断/解決されたか、
authentication tokenが適切な資格を持っていない/単に知らないユーザであるということで、拒否されたかです。
Shieldの認証メカニズムでは、複数のレルムを設定でき、さらに、あるレルムの戻り値を扱う他のレルム、というようなchainとすることもできます。
Shield 1.0は3つのレルムをサポートします。</p>

<ul>
<li>esusers - Elasticsearchによって管理されるファイルベースのレルムです。
これは、ファイルにユーザを定義することができます。（Apacheサーバのhtpasswdファイルのようなもの）
このレルムは外部への依存はなく、Shieldをインストールすれば、デフォルトで使用できます。
このレルムは配置が簡単で、マルチテナントなElasticsearchクラスタに対して使用できます。
マルチテナントなElasticsearchクラスタとは、クラスタを複数のアプリでシェアすることをテナントと言います。
また、すべてのユーザがパスワードを忘れてしまうような&#8221;emergency&#8221;な代替レルムも対応可能です。
(誰もシステムに入れないような状況のことです)</li>
<li>LDAP - 外部のLDAPサーバでユーザを認証するレルムです。
このレルムは組織のLDAPサーバで管理/保存されているユーザをすでに持っている組織を対象としています。</li>
<li>Active Directory - LDAPのタイプの1つで、Active Directoryに対する設定になります。</li>
</ul>


<p>レルムはelasticsearch.yml設定ファイルで、次のように設定可能です。</p>

<blockquote><p>shield.authc
    realms:</p>

<pre><code>    esuser:
        type: esusers
        order: 0

    ldap:
        type: ldap
        order: 1
        url: ldaps://url/to/ldap1/server

    ldap_fallback:
        type: ldap
        order: 2
        url: ldaps://url/to/ldap2/server
</code></pre></blockquote>

<p>上記のようにrealmsが一つのチェインとして参照されます。
レルムごとに、設定された順序で、それらは参照されます。</p>

<p>NOTE : Shieldには、esusersファイルに保存されたユーザを管理するためのコマンドラインツールもあります。</p>

<h2>認可(authorization)</h2>

<p>認可(Authorization)は保護されたリソースにアクセスするユーザを許可するか拒否するかということです。
モダンなシステムは、ユーザのパーミッションのために、ロールベースのアクセスコントロール（RBAC）モデルを利用します。
このモデルでは、各ユーザはロールの集合に関連していて、それぞれのロールには、パーミッションの集合が定義されています。
これは、洗練された設定で、パーミッションを機能的なグループで共有させることができます。
例えば、次のようなロールを定義したとします。</p>

<ul>
<li><em>employee</em> - すべての従業員は部門をまたいだ会社のデータへアクセスできます（例えば、コンタクトやディレクトリ情報など）</li>
<li><em>sales</em> - すべての営業職は営業データにアクセスできる（例えば、流通ルート、ルート、顧客）</li>
<li><em>finace</em> - すべての財務の従業員は財務データにアクセスできる（例えば、予算、経費、伝票）</li>
</ul>


<p>財務部門の<code>Ann</code>は従業員と財務のロールを持っており、会社のディレクトリと財務データにアクセスでできます。</p>

<p>認可プロセスはユーザがリクエストに関連したユーザが必要で、このプロセスのために、認証フェーズの後に直接実行されます。</p>

<p>Shieldは2つのタイプのリソースを定義します。クラスタとインデックスです。
これらは、すべてのAPIコールで保護されます。
さらに、それらに関連したパーミッションとロールも定義できます。
一度定義をすると、ロールはユーザもしくはLDAP/ADのグループに関係します。
ロールは<strong>roles.yml</strong>設定ファイルで定義されます。
設定のサンプルは次のようになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>admin:
</span><span class='line'>    cluster: all
</span><span class='line'>    indices:
</span><span class='line'>        '*' : all
</span><span class='line'>
</span><span class='line'>monitor:
</span><span class='line'>    cluster: monitor
</span><span class='line'>    indices:
</span><span class='line'>        '*': monitor
</span><span class='line'>
</span><span class='line'>employee:
</span><span class='line'>    indices:
</span><span class='line'>        'company_directory' : read
</span><span class='line'>
</span><span class='line'>sales:
</span><span class='line'>    indices:
</span><span class='line'>        'opportunities' : read, write
</span><span class='line'>        'accounts' : read, write
</span><span class='line'>
</span><span class='line'>finance:
</span><span class='line'>    indices:
</span><span class='line'>        'expenses' : read, write
</span><span class='line'>        'purchases' : read, write</span></code></pre></td></tr></table></div></figure>


<p>上記のサンプルで、次の5つのロールを定義しています。</p>

<ul>
<li><em>admin</em> - 管理者のロールで、すべてのクラスターレベルの操作とすべてのインデックスに対してすべてのインデックスレベルの操作を実行可能です。
(¥*インデックスはすべてのインデックスにマッチするワイルドカード)</li>
<li><em>monitor</em> - システム/クラスタのモニタリングのためのロール。このロールのユーザはすべてのクラスタとインデックスレベルの情報の読み取りの
APIにアクセス可能だが、インデックスのデータへの読み書きや設定の更新は不能</li>
<li><em>employee</em> - compnay_directoryにあるすべてのデータへの読み取りアクセスを与えられたロール。このロールはクラスタレベルへのアクセスやデータの書き込みアクセスは持っていない
(特にcompany。洗濯されたグループの人々はcompanyディレクトリの更新は可能だが、employeeは読み取りのみが可能)</li>
<li><em>sales</em> - opportunitiesとaccountsインデックスの読み書きができるロール</li>
<li><em>finance</em> - expensesとpurchasesの両方に読み書きができるロール</li>
</ul>


<p>上記のサンプルで定義されている<code>all</code>と<code>read</code>と<code>write</code>として名前がつけられた権限です。
これらは、予約語で、Elasticsearchのローレベルのアクションを複数含んだ権限です。
（<code>write</code>は<code>index, delete, delete_by_query, bulk, update</code>の操作を含んでいます。）
多くのケースで、これらのハイレベルの名前が付けられた権限で十分ですが、特定のロールに特定のアクションを明示的に指定することもできます。
次のようになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hr:
</span><span class='line'>    indices:
</span><span class='line'>        'company_directory' : indices:data/write/index, indices:data/write/update</span></code></pre></td></tr></table></div></figure>


<p>ここまで説明した認可のレルムは、各ユーザに関連するロールを識別するためのものです。
内部のesuserレルムでは、提供されるesuserコマンドラインツールを使ってロールはユーザに割り当てたり変更したりもできます。
LDAPやActive Directoryでは、LDAP/ADグループにShieldのロールを割り当てることができます。</p>

<p>認証と認可の両方を用いることで、ユーザリクエストに対して、ユーザごとに許可/不許可をすることができます。</p>

<h3>暗号化通信</h3>

<p>認可はElasticsearchのデータを機能的な観点（許可されたユーザだけが操作を可能にする）で保護しますが、
クライアントからElasticsearchクラスタへ、もしくはクラスタのノード間では暗号化されていないデータを送るためまだ危険があります。
第三者が登頂したり、オンザフライでデータを書き換えたりといった可能性やクラスタを壊すことができます。</p>

<p>Shield 1.0はElasticsearchのすべての通信チャネルをセキュアにすることができます。
クラスタ内のノード間のチャネルやクライアントに公開されているチャネルです。
これは、SSL/TLS通信を導入して実現します。</p>

<p>Shieldで使えるSSLはElasticsearchのtransportサービスをSSL/TLSで通信できるものに置き換えます。
これは、ノード間通信チャネルと、HTTP transport（REST APIを提供するもの）のそれぞれに設定可能です。</p>

<p>ShieldのSSL/TLSは、スタンダードなJavaのものとkeystoreとtruststoreを基本にしたものが利用可能です。
SSL/TLSを設定すると、各ノードのキーストアに証明書をインポートする必要があります。
CAがサインした証明書を使うことも、CAが信頼したものとして許可許諾されたものを使うことが可能です。
これは、信頼されたすべてのCAとして知られているtrust storeが必要です。
新しいノードをクラスタに追加するときに、すべての必要な少なくとも一つの信頼されたCAから発行されてサインされたものが必要になります。
クラスタで個別のノードがすべてのkeystore/truststoreを更新する必要性なしに。？？</p>

<p>通信チャネルを安全にする方法やSSL/TLS設定をどのように行うかは<a href="http://www.elasticsearch.org/guide/en/shield/current/securing-nodes.html">Shieldのドキュメント</a>をご覧ください。</p>

<h3>ノード間認証</h3>

<p>強く推奨しますが、許可されたノードだけがクラスタに接続できるようにするために、ノードの認証をSSL transportに設定することができます。
これは、<code>shield.transport.client.auth</code>に<code>true</code>を設定することで可能です。
設定した場合、ノード間でSSLハンドシェイクが行われ、接続されたノードが接続に来たノードのクライアント認証を要求しチェックします。
もし、チェックに失敗した場合は、SSLシェイクハンドが失敗し接続が拒否されます。</p>

<h3>SSLクライアント認証</h3>

<p>transportレベルでノード認証が必要なようなら、次のような疑問がわくでしょう。
Elasticsearchはクラスタに接続するTransportクライアントを使うときはどのように振る舞うのか？
Transportクライアントはクラスタの他のノードと同じチャネルを使うため、コネクションを確立するときに、ノードが他のノードと異なるかどうかを見極めることはできません。</p>

<p>この時、もっとも単純な解決は、Transportクライアントも同様に許可を与えることです。
それは、認証を解決するときに、他の問題（潜在的な悪意）を引き起こします。
Transportクライアントが他のクラスタのノードを偽装しようとすることです。これは望んでいません。</p>

<p>幸いなことに、良い解決方法があります。
トランスポートプロファイルです。
Elasticsearch 1.4で導入されたトランスポートプロファイルは、トランスポートレイヤー（異なるホスト/ポートにバインドされる）のために複数のネットワークチャネルを設定することができます。
Shieldはこのサポートを、プロファイルごとに異なるSSL設定をできるように拡張します。
また、ノードのタイプとクライアントプロファイルタイプの間に明確な違いを設定することも可能です。
これを用いると、2つのプロファイルを設定できるようになります。
ひとつは、クライアントのためのもので、もうひとつはクラスタのノードのためのものです。
これにより、クライアントのための認証の問題が必要なくなり、Shieldはクライアントプロファイルをもった限定されたクライアントからのリクエストを保証します。</p>

<h3>IPフィルタリング</h3>

<p>これは、厳密には、認証カテゴリではありませんが関係しています。
Shieldはそれ自身がIPフィルタリングのメカニズムを持っています。
これは、許可/不許可のIPのリストを設定することができます。
これらのフィルタリングのルールは複数のレベルで設定可能です。
transportチャネル、transportプロファイルレベル、そして、HTTPチャネルです。
次の設定は、それらの設定のサンプルです。（設定ファイルはelasticsearch.ymlになります）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>shield:
</span><span class='line'>
</span><span class='line'>    transport.filter:
</span><span class='line'>        allow:
</span><span class='line'>            - '127.0.0.1'
</span><span class='line'>            - '2001:0db8:1234:0000:0000:8a2e:0370:73
</span><span class='line'>        deny:
</span><span class='line'>            - '10.0.0.0/8'
</span><span class='line'>            - '2001:0db8:1234::/48'
</span><span class='line'>            - '*.google.com'
</span><span class='line'>
</span><span class='line'>    http.filter:
</span><span class='line'>        allow: [ '10.0.0.0/8' ]
</span><span class='line'>        deny: [ '127.0.0.1' ]
</span><span class='line'>
</span><span class='line'>transport.profiles:
</span><span class='line'>    client:
</span><span class='line'>        shield.filter.deny: [ '_all' ]</span></code></pre></td></tr></table></div></figure>


<p>このように、IPv4とIPv6、CIDR、ホスト名、ワイルドカードが利用できます。
また、この機能はホストOSのIPテーブルに設定することで追加できるが、Shieldにそれを保持し、それらの設定を単純化し、
デプロイの全体から除去できることにも注意してください（詳細は<a href="http://www.elasticsearch.org/guide/en/shield/current/ip-filtering.html">ドキュメントのIPフィルタリングをご覧ください</a>）。</p>

<h3>監査証跡（Audit Trail）</h3>

<p>セキュアなシステムの必須機能の一つで、監査硝石により、Elasticsearchに発生した重要なイベントをトラッキングすることが可能です。
これらのイベントを保存することは、Elasticsearchクラスタの重要なアクティビティの証拠を提供でき、
不審な/悪意のある可能性のあるイベントを追跡するときの診断ツールにもなります。</p>

<p>Shield 1.0.0で、監査証跡は監査/アクセスlogを一般的なElasticsearchのログとは個別に保存します。
それらは、構造化されているため、読んだりパースするのが容易で、イベントのタイプも分類されています。
また、情報のレベルを設定することができ、各イベントをlogレベルの設定で書き出すことができます。
以下が、イベントのリストです。</p>

<ul>
<li><em>anonymous_access_denied</em> - 認証トークンがないユーザからのリクエストがあった時のログ</li>
<li><em>authentication_failed</em> - リクエストされたユーザの認証に失敗した時のログ</li>
<li><em>access_denied</em> - 認証されたユーザが許可されていない操作を実行した時のログ</li>
<li><em>access_granted</em> - 認証されたユーザが許可された操作を実行した時のログ</li>
<li><em>tampered_request</em> - 不正に書き換えられたリクエストが到着したのを検知した時のログ</li>
<li><em>connection_granted</em> - ノードもしくはtransportクライアントがIPフィルタのルールにパスした時のログ</li>
<li><em>connection_denied</em> - ノードもしくはtransportクライアントがIPフィルタリングルールの制限により却下された時のログ</li>
</ul>


<p>Shieldの監査証跡についてより詳しく知りたい方は、<a href="http://www.elasticsearch.org/guide/en/shield/current/auditing.html">ドキュメント</a>をごらんください。</p>

<h3>次のバージョンでは？</h3>

<p>ここまで紹介したように、これはまだ始まりにすぎません。
Shieldに追加される多くの機能があり、しっかりとした基盤を構築したところです。
Shieldの次のバージョンでは、以下の機能の追加にフォーカスするでしょう。（これらだけに限ったわけではありません。）</p>

<ul>
<li>APIによる設定、管理</li>
<li>より拡張され、柔軟なLDAP/Active Directoryサポート</li>
<li>レルムタイプの追加（kerberos、anonymous、certificatesなどなど）</li>
<li>セッションベースの認証</li>
</ul>


<p>ShieldはElasticsearch社の2番目の（<a href="http://www.elasticsearch.com/products/marvel?_ga=1.40546982.567962035.1389706748">Marvel</a>に続く）商用プロダクトです。
ダウンロードして開発環境で評価してください。
インストールは他のプラグインと同様の方法です（インストール方法についての詳細は<a href="http://www.elasticsearch.org/guide/en/shield/current/index.html">こちら</a>）。
一度インストールすると、30日の試用ライセンスが始まります。
もし、さらに時間が必要な場合は、sales@elasticsearch.comまで連絡してください。</p>

<p>私たちのすべてのプロダクトについてフィードバックをお待ちしています。
Shieldの商用利用、機能、ロードマップ、その他のセキュリティに関するトピックなど、質問がありましたら、
<a href="http://www.elasticsearch.com/contact/?_ga=1.32250170.567962035.1389706748">サイトからご連絡ください</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Coreトレーニング開催]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/27/2nd-tokyo-training/"/>
    <updated>2015-02-27T17:10:29+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/27/2nd-tokyo-training</id>
    <content type="html"><![CDATA[<p><a href="https://purchases.elasticsearch.com/class/Tokyo/2015-04-13">4月13日から3日間、ElasticsearchのCoreトレーニング</a>が東京で開催されます。
Early Birdということで、3/14までに申し込みすると割引があります。
興味のある方は、見ていただければと。</p>

<!-- more -->


<p>また、4/15にElasticsearch勉強会を開催します。
トレーニングに弊社のエンジニアが来日しますので、なにか話をしてもらう予定です。</p>

<p>募集は後日、<a href="https://elasticsearch.doorkeeper.jp">Elasticsearch勉強会</a>のDoorkeeperで行います。
興味のある方は、登録しておいていただければと。</p>

<p>トレーニングや勉強会でお待ちしております。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kibana 4（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja/"/>
    <updated>2015-02-20T14:05:52+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/kibana-4-literally/">kibana 4. literally.</a></p>

<p>Kibana 4は現在、文字通り、抽象的に、概念的に、精神的に、そしてとても楽しく、プロダクションレディになりました。
1週間前に準備はできていましたが、満足できるものであるという確信を得たいと思っていました。
そして、Kibana 4.0.0 GAをリリースしました。
次のものはサンプルのスクリーンショットと前日譚です。
これらに興奮してしまった方のために、2ステップのプランを用意しました。</p>

<ol>
<li>ダウンロードする：<a href="http://www.elasticsearch.org/overview/kibana/installation/">Kibana 4 downloads</a>ページからダウンロードします。</li>
<li>理解する：<a href="http://www.elasticsearch.org/guide/en/kibana/current/index.html">Kibana 4 docs</a>ページを読んで理解します。</li>
</ol>


<p>Tip : もし、まだ、あなたのクラスタが<a href="http://www.elasticsearch.org/downloads/1-4-4/">Elasticsearch 1.4.4</a>でない場合は、アップグレードする必要があります。<br/>
Tip2 : Kibana 4 RC1からアップグレードする場合は、configを移行する必要があります。<a href="https://gist.github.com/spalger/8daf6c2b7f2954639e38">こちらのgistを参照</a></p>

<!-- more -->


<h2>前日譚 - the back story</h2>

<p>Kibanaはすでに問題解決のためのツールになっています。
なぜ、毎晩2時に呼び出されるんでしょう？
そのコードがプロダクションに入ったのはいつですか？
その結果、何を壊しました？
私たちはそれらを解決しました。
世界的に、長い間、だれも夜中の2時に呼び出されませんでした。知ってます？。</p>

<p><img src="https://www.elastic.co/assets/blt5dddb0351d09a397/Screen-Shot-2015-02-17-at-1.25.15-PM-1024x692.png"></p>

<p><em>しかし、ここには落とし穴があります。</em>答えが簡単になれば、問題が難しくなります。
楽な勝利は簡単でした。では、難しい問題（深さが3層の問題）を解きましょう。
複数の要素、複数のフィールドそして、複数のデータソースを分析する必要がある問題を解きましょう。
Kibana 4は少ない時間と労力で最も難しい問題を解決してくれます。</p>

<p>Kibana 3で学んだことをKibana 4に取り込みました。
なぜ10億のデータを持っているのに、地図には1000個しかプロットできないのでしょう？
1つのチャートに1つのフィールドなんでしょう？
なぜ、1つのパネルに1つのチャートなんでしょう？
なぜ、1つのダッシュボードに1つのインデックスなんでしょう？
5つのシナリオを用意し、2つのフィールドにまたがったデータを比較し、
1つのダッシュボードに3つのインデックスのデータを表示してみましょう。
さぁ、やりましょう。終わったらアイスクリーム（トッピング付きの）を取りに行きましょう。</p>

<p><img src="https://www.elastic.co/assets/blte1c56cdf8c51674d/Screen-Shot-2015-02-17-at-1.24.14-PM-1024x624.png"></p>

<h2>the plot</h2>

<p>アイスクリームのように、問題には多くの種類があります。
そのために、Kibanaをナポリ風アイスクリーム（3色アイス）のように分割しました。
嫌いな種類は除いて。
もし、あなたがKibanaのユーザ歴が長い場合、最初のタブの<em>Discover</em>がホームであることが正しく感じるでしょう。
これにより、短時間で、検索し、レコードを見つけ、簡単な問題を解決できます。
簡単な問題とは、すべてを物語る1行のデータを見つけることによって解決する問題です。</p>

<p><img src="https://www.elastic.co/assets/blta5b9c4d326d1bab7/Screen-Shot-2015-02-17-at-1.55.18-PM1-1024x573.png"></p>

<p>物事が簡単な検索で説明できるものよりも複雑になった時、チャートとグラフで魔法を作る時間です。
<em>Visualize</em>タブを開き、Elasticsearchのaggregationの力を利用してデータを解析しましょう。
<em>Visualize</em>は複数の次元の性質のデータを見せ、今まで尋ねたことがないような質問に対して素早く回答するチャートやテーブル、
地図を作成できます。
あなたが最初に尋ねる質問は「先週サイトが遅かったのはなぜ？」でした。
しかし、データによって明らかにされた質問は「なぜ、クリスマスに東京からの平均ファイルサイズリクエストがスパイクしたのか？」です。</p>

<p><img src="https://www.elastic.co/assets/blt8458a51cb72ffdc9/Screen-Shot-2015-02-18-at-11.13.37-AM-1024x617.png"></p>

<p>最後に、<em>Dashboard</em>でこれらを1つにします。</p>

<p>大きなスクリーンに配置して、こう言います。
「あなたの答えはこのリンクにあります。また、Wikiに埋め込んで、データをCSVにエクスポートしてメールしました。
アイスクリームを食べた後に、自叙伝の第1章を書きました。もっとアイスを持ってきてください。かき混ぜますから。」</p>

<p><img src="https://www.elastic.co/assets/blte214158911741112/Screen-Shot-2015-02-17-at-3.30.30-PM-1024x715.png"></p>

<p>それぞれのタブで見てきた詳細については、<a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1 : Released</a>をごらんください。</p>

<h2>to be continued&hellip;</h2>

<p>居眠りをする時間はあります？いいえ、Kibana 4.1についてすでに作業中で、将来の大きなプランを持っています。
多くの労力はKibana 4の土台の安定と実用性を構築することに使われました。
また、Elasticsearchアプリケーションの将来を構築するプラットフォームを作りました。
すべてのものは拡張できるように設計されています。
例えば、可視化はより良くなるように構築されています。
オープンソースは私たちのGitHubアカウント以上のものです。
それは、新しく素晴らしいものを誰もが作ることができる構造を作ることが私たちの約束です。</p>

<p>Kibanaでグラフなどを構築したり、Elasticsearchを利用したアプリケーションを作成するために、
私たち開発者のブログを参考にしてください。
ちょっと見てみたいですか？
Elastic{ON}15のSpencer Algerのトークをチェックしてください。</p>

<p>あなた方なしでは、私たちはここにはいないですし、あなた方の助けがなければ何もできません。
ぜひ、GitHubでのissueや提案、貢献をお待ちしています。
もしくは、IRCでFreenodeの#kibanaに参加してください。</p>

<h2>extra credit</h2>

<p>Kibana 4のすべての話に興味がありますか？私たちのKibana 4ベータに関する過去のブログをチェックしてください。</p>

<ul>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1: Released</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-2-get-now/">Kibana 4 Beta 2: Get it now</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-3-now-more-filtery/">Kibana 4 Beta 3: Now more filtery</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-rc1-is-now-available/">Kibana 4 RC1: Freshly baked</a></li>
</ul>


<p>最後に、Kibanaの利用に関する話をお持ちなら、ぜひ聞かせてください。
stories at elasticsearch dot comもしくは<a href="http://www.twitter.com/elasticsearch">@elasticsearch</a>に連絡をください。
あなたの話を世界にどのようにシェアしているかごらんください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.4.4および1.3.9リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja/"/>
    <updated>2015-02-20T14:05:34+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-4-and-1-3-9-released/">elasticsearch 1.4.4 and 1.3.9 released</a></p>

<p>本日（2/20）、<strong>Elasticsearch 1.4.4</strong>と<strong>Elasticsearch 1.3.9</strong>をリリースしました。
これはバグフィックスリリースとなります。
主に、Lucene expression scriptsを使う場合のRPMとDEBパッケージの
パッケージング問題のフィックスをしたものです。
<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のダウンロードこちらのリンク</a>からアクセスできます。</p>

<!-- more -->


<h2>fixes</h2>

<p>1.4.3のRPMおよびDEBパッケージにはAntlrとASMの<a href="https://github.com/elasticsearch/elasticsearch/pull/9696">依存関係の不足</a>がありました。
この依存はElasticsearchでLucene expression scriptsを利用する場合に必要になります。
Groovyに関する<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">1.4.3の変更</a>により、多くのユーザがLucene explression scriptsを利用することが予想されるため、すぐに、1.4.4をリリースしました。</p>

<p>また、このリリースには、クラスタの保留タスクに関するいくつかのバグフィックスも含まれています。
さらに、date histogramで負のインターバルの場合に<code>OutOfMemoryError</code>を引き起こすバグも
修正されています。</p>

<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-9">1.3.9のリリースノート</a>をごらんください。</p>

<h2>フィードバック</h2>

<p>私たちはフィードバックをお待ちしています。
Twitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)もしくは<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で教えてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[名古屋でElasticsearch勉強会を開催します]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya/"/>
    <updated>2015-02-18T15:22:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya</id>
    <content type="html"><![CDATA[<p>来る、4月4日の土曜日の午後に名古屋でElasticsearch勉強会を開催予定です。
「初」の東京以外の勉強会です。</p>

<!-- more -->


<p>Twitterでこのようなツイートを見かけまして。</p>

<blockquote class="twitter-tweet" lang="ja"><p>名古屋でElasticsearchの勉強会やりたい機運（今のところ2人）。</p>&mdash; mogami (@smogami) <a href="https://twitter.com/smogami/status/562864387632136192">2015, 2月 4</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>これは！ということで、名古屋で勉強会をやろうかと思います。30名程度の場所を借りて実施予定です。
募集はいつもの、<a href="http://elasticsearch.doorkeeper.jp">elasticsearch勉強会のDoorkeeper</a>で行う予定です。
ページの準備まで少々待ちください。（おそらく、3月中旬くらい）
私自身はElasticsearchやELKについて話をしようと思っています。そのほかに、2,3名のスピーカーの方を予定しています。
LTなど興味がある人がいたら、連絡ください。</p>

<p>これを機に（？）他の場所でも勉強会を開催したいと考えています。
ニーズがどのくらいありそうなのかが、まだよくわかっていませんが、関西などでニーズがあるんじゃないかと期待していたり。</p>

<p>興味のある方は、コメント欄、Twitterなどでコンタクトしてもらえればと。
（連絡来るとうれしいなぁ。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第8回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp/"/>
    <updated>2015-02-16T15:02:23+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="http://elasticsearch.doorkeeper.jp/events/19923">第8回Elsticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、開場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、ありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<!-- more -->


<p>今回は出足が好調で、早々に180人の枠を超えるという嬉しい事態でしたが、
キャンセル待ちが残っているにもかからわらず、来られていない方が67名もいるということで、キャンセル待ちの方には申し訳なかったです。
もうすこし、キャンセルをしてもらえると嬉しいんですが。。。
今回はメールを当日に1度しか打ってないからかなぁ。</p>

<p>さて、いつもの通り簡単なメモです。
本当に簡単にですが。</p>

<h2>「Elasticsearch導入チェックリスト？」 Elasticsearch株式会社 Jun Ohtani @johtani</h2>

<p>スライド：<a href="https://speakerdeck.com/johtani/elasticsearchdao-ru-tietukurisuto">Elasticsearch導入チェックリスト？</a></p>

<p>Elasticsearchを開発環境や本番に導入する前に気にかけて欲しいことについて発表しました。
元ネタは<a href="http://www.elasticsearch.org/webinars/elasticsearch-pre-flight-checklist/">elasticsearch pre-flight checklist</a>です。
少々古いのですが、私が今回話した内容以外にもモニタリングなどについての話も盛り込まれています。
時間がある方は、見ていただければと。</p>

<h2>「Elasticsearch クエリとスキーマ定義のすごい細かい話」株式会社ドワンゴ 藤堂淳也 さん</h2>

<p>スライド：<a href="https://speakerdeck.com/jtodo/elasticsearch-kueritosukimading-yi-falsexi-kaihua">Elasticsearch クエリとスキーマ定義のすごい細かい話</a></p>

<ul>
<li>フィールドのチェックを別途インデキシングするアプリで行っている。利用できるものだけElasticsearchに投げる</li>
<li>実際に本番環境で利用しているマッピングに対してフィールドを追加する手順について</li>
<li>「これもドキュメントに書いてあるんですが」という感じでドキュメントに色々書いてあるので読みましょうというありがたい発表でした。</li>
</ul>


<p>実際に試行錯誤したり検証するときに行ったことを喋ってもらえたので、どういった点を気にしながら運用、設計するかというのがわかりやすかったです。</p>

<h2>「ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析」株式会社サイバーエージェント　山田直行さん　@satully</h2>

<p>スライド：<a href="http://www.slideshare.net/Satully/elasticsearch8-elasticsearchkibana-30reqday">ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析</a></p>

<p>会場が21時までしか抑えられていないという失態で、ドタバタしてて前半は聞けてないです。。。</p>

<ul>
<li>前回の発表では30日分Elasticsearchに入れていたが、今は3日分のみ保存</li>
<li>レポートなどにはRedshift＋Tableauを利用</li>
<li>Kibana3をメインに使っているが、Kibana4も検討予定？</li>
</ul>


<p>QA
* Q：なぜ、ELBを挟んでいるのか？
  * A：特に考えておいているわけではない。
* Q：インデックスの構成は？
  * A：1日に2つのインデックス。Bitされたもの、入札されないもの
* Q：searchのnodeをやめたのは？
  * A：前回発表した勉強会での懇親会で話を聞いたり、他の方と話を聞いて、不要と判断したため</p>

<h2>「はてなのメディア面を支えるElasticsearch」株式会社はてな　山家雄介さん　@yanbe</h2>

<p>スライド：未定。おそらく、開発者ブログに公開されるかと。</p>

<ul>
<li>アドテク系にもやってるらしい。BrandSafeはてな</li>
<li>はてなブックマークのデータを魅せ方を変える機能などで大活躍。<a href="http://bkuma.hatena.ne.jp">B!KUMA</a>とか</li>
<li>その日の話題の見出し自動生成機能。Significant Terms Aggregationsを利用。</li>
<li>こちらの<a href="http://bookmark.hatenastaff.com/entry/2015/02/05/190331">「自然言語処理技術を用いたはてなブックマークの新機能「トピック」をベータリリースしました」</a>エントリに関係あるのかな？</li>
</ul>


<p>記事の魅せ方を検索できる管理画面ではElasticsearchのクエリDSLを活用されているとのことでした。
検索専門の人でなくても検索式を簡単にくみたてられる画面を用意して、ElasticsearchのクエリDSLに変換するようにしていると。
確かに、クエリをそのまま組み立ててもらうよりも利用しやすい画面がある方がいいですよね。バックエンドはJSとPerlのライブラリとのことでした。</p>

<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://takudo.hatenablog.jp/entry/2015/02/14/101749">2015-02-13 第8回 elasticsearch 勉強会 @ 丸の内 リクルート 41Fアカデミーホール</a></li>
<li><a href="http://suzuki.tdiary.net/20150213.html"> [Elasticsearch] 第8回 elasticsearch 勉強会へ参加してきた</a></li>
<li><a href="http://qiita.com/t-sato/items/8e353ccf7d7bba46f635">第8回elasticsearch勉強会 #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://keyamb.hatenablog.com/entry/2015/02/16/015916">第8回 Elasticsearch 勉強会に行ってきた #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://blog.yoslab.com/entry/2015/02/13/203251">勉強会メモ - 第8回elasticsearch勉強会</a></li>
</ul>


<h2>まとめ</h2>

<p>今回も検索からログまでいろんな話になったので、面白かったかと。
参加された方は新しい方が多かったんじゃないかなぁと。（集計結果で見れないのかな、Doorkeeper）。</p>

<p>今回は、みなさんに21時に41Fから33Fへ移動していただくという大失態があったので、大変申し訳なかったです。
次回（4月中旬）は、このようなことがないように気をつけますので、今後もよろしくお願いいたします。</p>

<p>あと、東京以外の勉強会も検討しつつあります。興味のある方はコメントやTwitterで反応をいただけると嬉しいです。</p>

<p>スピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。 よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyスクリプトをダイナミックスクリプトなしで実行(日本語訳)]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/12/running-groovy-scripts-without-dynamic-scripting-ja/"/>
    <updated>2015-02-12T15:13:09+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/12/running-groovy-scripts-without-dynamic-scripting-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/running-groovy-scripts-without-dynamic-scripting/">running groovy scripts without dynamic scripting</a></p>

<p>Elasticsearch1.3.8と1.4.3のリリースにより、デフォルトで、リクエストに含まれるGroovyスクリプトや
インデックスに保存されたスクリプトを動的に実行する機能をオフにしました。
しかし、Groovyはまだデフォルトのスクリプト言語です。
本ブログ記事では、少しだけダイナミックだが、サンドボックスではない言語のためのスクリプトを
どのように使い続けるかを説明します。</p>

<p>本ブログ記事は、それが何を意味し、さらに重要なのは、安全に重要なタスクを実行させるためにスクリプトを
どのように使用し続けるかを理解する助けとなるはずです。</p>

<!-- more -->


<h2>ダイナミックスクリプトとは？</h2>

<p>Elasticsearchに詳しくない方のために、Elasticsearchでは、
さまざまなリクエストの一部としてスクリプトを送信することができます。
search、aggregation、update、upsert、delete by queryなどです。
あなたのユースケースのために、通常の動作よりも拡張した動作をさせるためにスクリプトを追加できます。</p>

<p>例えば、以下のリクエストは、ダイナミックスクリプトを含んでいます。
<code>field1</code>と<code>field2 + shift</code>が同じ値を持っている時だけドキュメントを返します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">GET</span> <span class="err">/_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;query&quot;</span><span class="p">:{</span>
</span><span class='line'>    <span class="nt">&quot;filtered&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="nt">&quot;filter&quot;</span><span class="p">:{</span>
</span><span class='line'>        <span class="nt">&quot;script&quot;</span><span class="p">:{</span>
</span><span class='line'>          <span class="nt">&quot;script&quot;</span><span class="p">:</span><span class="s2">&quot;doc[&#39;field1&#39;].value == (doc[&#39;field2&#39;].value + shift)&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;lang&quot;</span><span class="p">:</span><span class="s2">&quot;groovy&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;params&quot;</span><span class="p">:{</span>
</span><span class='line'>            <span class="nt">&quot;shift&quot;</span><span class="p">:</span><span class="mi">3</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>言語を変えることもできます。
それは、当然、シンタックスが変わったり、制限が追加（例えば、Groovyスクリプトの代わりに<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_lucene_expressions_scripts">Lucene　Expressions</a>に変更）されることもあります。
<code>lang</code>パラメータによって言語を指定できます。</p>

<h3>なぜそれはダイナミック？</h3>

<p>上記の例はダイナミックスクリプトです。
それは、実際のスクリプトの部分はサーバサイドで<em>動的に</em>解釈されコンパイルされる必要があるからです。
ダイナミックスクリプトはElasticsearchのAPIによってデータノードに送信されます。
これは、<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_indexed_scripts">インデックスされたスクリプト(indexed script)</a>も含みます。</p>

<p>言い換えると、もし、スクリプトがデータノード全てに保存されていなければ、
それは、ダイナミックスクリプトとして扱われます。</p>

<h2>dynamic scriptingをオフにするとどうなるか？</h2>

<p>最新のリリースでの変更により、Groovyのdynaic scriptingはデフォルトでオフになりました。
先ほどのスクリプトについても同様で、もし、先ほどのリクエストを実行すると、次のようなエラーが発生します。
(一部省略してあります。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="nt">&quot;error&quot;</span><span class="p">:</span><span class="s2">&quot;SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[8FJ02MofSnqVvOQ10BXxhQ][test][0]: SearchParseException[[test][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{...}]]]; nested: ScriptException[dynamic scripting for [groovy] disabled]...&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nt">&quot;status&quot;</span><span class="p">:</span><span class="mi">400</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>エラーメッセージの重要な箇所は「ScriptException[dynamic scripting for [groovy] disabled]」です。</p>

<h2>スクリプティングを使い続けるには？</h2>

<p>Elasticsearchでスクリプトを実行するには3つの方法があります。
2つのダイナミックな方法は、リクエストごとのスクリプト（上述）かインデックスされた
スクリプト(indexed script)を使う方法です。
インデックスされたスクリプトを使うことは、Elasticsearch自身にGroovyスクリプトを保管することで
利用で、それらを要求に応じて利用することです。
（これは、実際には十分機能しますが、これではまだ、信頼できないユーザに対して彼らのスクリプトを実行できます）
RDBのように保存されたプロシージャとして同じ方法で実行させるものと同様です。
前もって、スクリプトを記述しておき、リクエストの一部として後から、名前で呼び出して実行可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">GET</span> <span class="err">/_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;query&quot;</span><span class="p">:{</span>
</span><span class='line'>    <span class="nt">&quot;filtered&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="nt">&quot;filter&quot;</span><span class="p">:{</span>
</span><span class='line'>        <span class="nt">&quot;script&quot;</span><span class="p">:{</span>
</span><span class='line'>          <span class="nt">&quot;script_id&quot;</span><span class="p">:</span><span class="s2">&quot;your_custom_script&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;lang&quot;</span><span class="p">:</span><span class="s2">&quot;groovy&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;params&quot;</span><span class="p">:{</span>
</span><span class='line'>            <span class="nt">&quot;shift&quot;</span><span class="p">:</span><span class="mi">3</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>あまり変わっていないことに気づくでしょう。
<code>script</code>の部分が、前もって記述されたスクリプトの名前<code>script_id</code>に変更されただけです。</p>

<p>Elasticsearchにスクリプトを提供するダイナミックではない方法はインデックスに保存する代わりに、
ディスクにファイルとしてスクリプトを保存することです。
そうすることで、各スクリプトを設定として保存します。
これは、どのようなスクリプト言語に対してもダイナミックスクリプティングをオフにしたまま、
サンドボックス化されないスクリプトを使い続けることができる方法です。</p>

<p>最初のサンプルで、Groovyスクリプトは<code>doc['field1'].value == doc['field2'].value + shift</code>でした。
これを、<code>.groovy</code>拡張子を持ったファイルとして書き出すことができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">doc</span><span class="p">[</span><span class="err">&#39;field</span><span class="mi">1</span><span class="err">&#39;</span><span class="p">]</span><span class="err">.value</span> <span class="err">==</span> <span class="err">(doc</span><span class="p">[</span><span class="err">&#39;field</span><span class="mi">2</span><span class="err">&#39;</span><span class="p">]</span><span class="err">.value</span> <span class="err">+</span> <span class="err">shift)</span>
</span></code></pre></td></tr></table></div></figure>


<p>もし、このファイルに<code>your_custom_script.groovy</code>ちう名前をつけて、
Elasticsearchのすべてのデータノードの<code>config/scripts</code>ディレクトリに保存すると、
Elasticsearchは60秒（elasticsearch.ymlの<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_automatic_script_reloading"><code>watcher.interval</code>で変更可能</a>）でこのスクリプトを認識し、今後のリクエストに利用できるようにプリコンパイルするでしょう。
そのファイルはElasticsearch実行ユーザによって読み込みができる必要があります。
これをディスクに書き込んだ後、あなたの設定ディレクトリは次のようになっています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">config/</span>
</span><span class='line'>  <span class="err">elasticsearch.yml</span>
</span><span class='line'>  <span class="err">logging.yml</span>
</span><span class='line'>  <span class="err">scripts/</span>
</span><span class='line'>    <span class="err">your_custom_script.groovy</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは、各リクエストやインデックスされたスクリプトをスクリプトとして動的に送信しませんが、
信頼された環境にスクリプトを追加することでダイナミックスクリプトとなることを許します。</p>

<h2>ディスクに書かれたスクリプトを使用する</h2>

<p>スクリプトは、ロードされたスクリプトになるまでは、利用できません。
ログファイルに次のようなログが表示されるまではです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span><span class="mi">2015-02-11</span> <span class="mi">11</span><span class="err">:</span><span class="mi">14</span><span class="err">:</span><span class="mi">47</span><span class="p">,</span><span class="mi">066</span><span class="p">][</span><span class="err">INFO</span> <span class="p">][</span><span class="err">script</span>                   <span class="p">]</span> <span class="p">[</span><span class="err">Sergei</span> <span class="err">Kravinoff</span><span class="p">]</span> <span class="err">compiling</span> <span class="err">script</span> <span class="err">file</span> <span class="p">[</span><span class="err">/path/to/elasticsearch</span><span class="mf">-1.4</span><span class="err">.</span><span class="mi">3</span><span class="err">/config/scripts/your_custom_script.groovy</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>すべてのElasticsearchのデータノードでスクリプトが読み込まれたら、
それを利用することができます。
利用するために、<code>file</code>（<code>script_id</code>ではありません！）としてスクリプト名を指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">GET</span> <span class="err">/_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;query&quot;</span><span class="p">:{</span>
</span><span class='line'>    <span class="nt">&quot;filtered&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="nt">&quot;filter&quot;</span><span class="p">:{</span>
</span><span class='line'>        <span class="nt">&quot;script&quot;</span><span class="p">:{</span>
</span><span class='line'>          <span class="nt">&quot;file&quot;</span><span class="p">:</span><span class="s2">&quot;your_custom_script&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;lang&quot;</span><span class="p">:</span><span class="s2">&quot;groovy&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;params&quot;</span><span class="p">:{</span>
</span><span class='line'>            <span class="nt">&quot;shift&quot;</span><span class="p">:</span><span class="mi">3</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note:<code>lang</code>は必須ではありません。Groovyがデフォルトの言語のためです。
もし、違うスクリプト言語を使いたい、もしくは、デフォルトの言語を（例えば、Lucene Expressionsへ）
変更したい場合、言語が正しいスクリプトを見つけるために提供されている必要があります。
一番良い方法は、アプリケーションが<code>lang</code>パラメータを含んでいることを勧めます。
これは、将来、デフォルトのスクリプト言語が変更されても、問題ないからです。</p>

<h2>質問？</h2>

<p>もし、質問があれば、遠慮なくTwitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)で教えて下さい。
また、問題がありましたら、<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch　1.4.3および1.3.8リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/12/elasticsearch-1-4-3-and-1-3-8-released-ja/"/>
    <updated>2015-02-12T12:39:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/12/elasticsearch-1-4-3-and-1-3-8-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">elasticsearch 1.4.3 and 1.3.8 released</a></p>

<p>本日、<strong>Lucene 4.10.3</strong>をベースにした<strong>Elasticsearch 1.4.3</strong>と、<strong>セキュリティ</strong>とバグフィックスリリースである、<strong>Elasticsearch 1.3.8</strong>をリリースしました。
ダウンロードおよび変更リストはそれぞれ次のリンクからアクセスできます。</p>

<ul>
<li>最新ステーブルリリース：<a href="http://www.elasticsearch.org/downloads/1-4-3">Elasticsearch 1.4.3</a></li>
<li>1.3.x系バグフィックス：<a href="http://www.elasticsearch.org/downloads/1-3-8">Elasticsearch 1.3.8</a></li>
</ul>


<p>過去のリリースに関するブログ（公式）はこちら。</p>

<ul>
<li>1.4:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-2-released/">1.4.2</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.4.1</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.4.0</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/">1.4.0.Beta1</a></li>
<li>1.3:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-2-released/">1.3.7</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.3.6</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.3.5</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-4-released/">1.3.4</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-3-released/">1.3.3</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-2-released/">1.3.2</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-1-released/">1.3.1</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-0-released/">1.3.0</a>.</li>
</ul>


<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-3">1.4.3のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-8">1.3.8のリリースノート</a>をごらんください。
以下では、セキュリティの問題について紹介します。</p>

<!-- more -->


<h2>groovy scripting の脆弱性</h2>

<p>Elasticsearchのバージョン1.3.0から1.3.7および1.4.0から1.4.2で、Groovyスクリプトエンジンに脆弱性が発見されました。
脆弱性は、攻撃者がGroovyスクリプトをサンドボックスを避けて構築でき、
ElasticsearchのJava VMを実行しているユーザとしてシェルコマンドを実行できます。</p>

<p>この問題をCVE-2015-1427として報告済みです。</p>

<p>バージョン1.3.8と1.4.3では、デフォルトで、Groovyに対してのサンドボックスをオフにしました。
結果として、<strong>ダイナミックスクリプトの実行はGroovyに対してもオフとなります。</strong></p>

<p>もし、脆弱性のあるバージョンで実行している場合、v1.3.8かv1.4.3にアップグレードするか、ダイナミックなGroovyスクリプトをクラスタの
すべてのノードに対して次の設定を追加することで、オフにします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>script.groovy.sandbox.enabled: false</span></code></pre></td></tr></table></div></figure>


<p>これは、Groovyのサンドボックスをオフにし、リクエストの一部としてインラインで受け付けるダイナミックなGroovyスクリプトや
特殊な<code>.scripts</code>インデックスに保存されているスクリプトを実行しません。</p>

<p>それまでは、各データノードの<code>config/scripts</code>ディレクトリにファイルとして保存されたGroovyスクリプトは
まだ、利用可能です。詳細の情報については<a href="http://www.elasticsearch.org/blog/running-groovy-scripts-without-dynamic-scripting/">Running scripts without dynamic scripting</a>をごらんください。</p>

<h2>future scripting plans</h2>

<p>安全なダイナミックスクリプティング言語としてGroovyを失うことは、Elasticsearchにとって痛手です。
update APIやsearch APIやaggregationsフレームワークの一部としてScriptを使います。
それらは、静的なAPIでは簡単に表現できない、カスタムなトリックをユーザに実行できるようにします。</p>

<p>残念ながら、Groovyチームとこの問題を議論した後、Groovy言語もサンドボックスによってきちんと保護されている
というにはあまりにもダイナミックであるという結論に達しました。
Groovyは、デフォルトでは利用できなくなります。
利用可能なダイナミックスクリプト言語としては<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_lucene_expressions_scripts">Lucene Expressions言語</a>のみとなります。
Expressionsははやいですが、それらは非常に限定されています。数値のフィールドでのみ実行可能で、ループをサポートしていません。</p>

<p>より強力で（しかし安全な）ミニ言語になるようにExpressionsを拡張することを調査しています。
これは、Scriptユーザが現在持っている最も一般的なユースケースを少なくとも助けるでしょう。
この拡張は長期間のプロジェクトであり、進化には時間がかかるでしょう。</p>

<p>ぜひ、<a href="http://www.elasticsearch.org/downloads/1-4-3">Elasticsearch 1.4.3</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
</feed>
