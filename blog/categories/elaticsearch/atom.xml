<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elaticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elaticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-07-22T12:49:29+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[validate APIの利用]]></title>
    <link href="http://blog.johtani.info/blog/2014/10/27/how-to-use-validate-api/"/>
    <updated>2014-10-27T18:42:31+09:00</updated>
    <id>http://blog.johtani.info/blog/2014/10/27/how-to-use-validate-api</id>
    <content type="html"><![CDATA[<p>久しぶりに翻訳ではないブログを。書こうと思いながらかけてなかったので。。。</p>

<p>今回は<a href="http://www.elasticsearch.org/guide/ep/elasticsearch/reference/current/search-validate.html">validate API</a>の紹介です。</p>

<!-- more -->


<h2>背景</h2>

<p>Elasticsearchのクエリは<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html">Query DSL</a>というJSONで
クエリを定義できるものを提供しています。
これは、様々な<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-queries.html">クエリ</a>、<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-filters.html">フィルタ</a>を定義するために必要です。</p>

<p>自分の望んでいる条件を記述するために、JSONのネストと格闘することも必要となります。。。
また、クエリ、フィルタには様々なパラメータが用意されています。
これらのパラメータをすべて覚えるのは無理でしょうし、タイプミスなどもありますよね。
タイプミスやカッコのミスマッチなどで格闘して1時間が経過してしまったなどもあると思います。</p>

<p>そんな時に便利なAPIとして用意されているのが<a href="http://www.elasticsearch.org/guide/ep/elasticsearch/reference/current/search-validate.html">validate API</a>です。</p>

<h2>利用方法</h2>

<p>APIが用意されています。</p>

<pre><code>http://ホスト名:ポート番号/インデックス名/タイプ名/_validate/query
</code></pre>

<p><code>インデックス名</code>や<code>タイプ名</code>は省略可能ですが、マッピングが異なると思うので、タイプ名まで指定するほうが良いと思います。
上記のAPIに対してクエリを送信するだけです。</p>

<h3>クエリの確認</h3>

<p>たとえば、<a href="https://gist.github.com/johtani/08dee5fb4da62037ef9e">こちらのGist</a>にあるようなマッピングのインデックスに対して
検索クエリを組み立てていて、エラーが出るとします。
※このクエリは<code>match_all</code>のところを<code>match_al</code>と、<code>l</code>が1文字足りないクエリになっています。</p>

<p><strong><em>検索クエリのリクエスト（エラーあり）</em></strong>
<code>
GET pref_aggs/_search
{
  "query": {
    "match_al": {}
  }
}
</code></p>

<p><strong><em>実行結果のレスポンス</em></strong>
<code>
{
   "error": "SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[rwkb01chTZq2V7FD0Tlwrw][pref_aggs][0]: SearchParseException[[pref_aggs][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n  \"query\": {\n    \"match_al\": { }\n  }\n}\n]]]; nested: QueryParsingException[[pref_aggs] No query registered for [match_al]]; }{[rwkb01chTZq2V7FD0Tlwrw][pref_aggs][1]: SearchParseException[[pref_aggs][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n  \"query\": {\n    \"match_al\": { }\n  }\n}\n]]]; nested: QueryParsingException[[pref_aggs] No query registered for [match_al]]; }]",
   "status": 400
}
</code></p>

<p>とこんなかんじで、エラーが帰っては来るのですが、非常に読みづらいです。</p>

<p>そこで、<code>validate API</code>を利用します。
リクエスト先を<code>/_search</code>から<code>/_validate/query</code>に変更します。</p>

<p><strong><em>validate API</em></strong>
<code>
GET pref_aggs/_validate/query
{
  "query": {
    "match_al": {}
  }
}
</code></p>

<p><strong><em>validate APIのレスポンス</em></strong>
<code>
{
   "valid": false,
   "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
   }
}
</code></p>

<p>すると、非常にシンプルな結果が返ってきます。
<code>"valid": false</code>となっているため、クエリに問題があることがわかります。</p>

<h3>エラーの詳細</h3>

<p>問題がある事自体はわかりましたが、エラーの内容も知りたいですよね？
その場合は、<code>explain</code>というパラメータを追加します。
（正しくは<code>explain=true</code>を追加しますが、<code>=true</code>を省略可能です。）</p>

<p><strong><em>validate API(explainあり、クエリ自体は省略)</em></strong>
<code>
GET pref_aggs/_validate/query?explain
{...}
</code></p>

<p><strong><em>validate APIのレスポンス</em></strong>
<code>
{
   "valid": false,
   "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
   },
   "explanations": [
      {
         "index": "pref_aggs",
         "valid": false,
         "error": "org.elasticsearch.index.query.QueryParsingException: [pref_aggs] No query registered for [match_al]"
      }
   ]
}
</code></p>

<p><code>explanations</code>という項目が追加されました。
ここに<code>error</code>という項目として、エラーの詳細が返ってきます。<code>_search</code>の時よりも見やすいですね。
今回のエラーは、<code>match_all</code>が正しいクエリですの、<em><code>match_al</code>というクエリは登録されていないというエラー</em>でした。
では、クエリを修正して実行しましょう。</p>

<p><strong><em>validate API(エラー無し)</em></strong>
<code>
GET pref_aggs/_validate/query?explain
{
  "query": {
    "match_all": {}
  }
}
</code></p>

<p><strong><em>validate APIのレスポンス</em></strong>
<code>
{
   "valid": true,
   "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
   },
   "explanations": [
      {
         "index": "pref_aggs",
         "valid": true,
         "explanation": "ConstantScore(*:*)"
      }
   ]
}
</code></p>

<p>今度はクエリに問題はありません。<code>"valid": true</code>です。
そして、<code>explanations</code>の項目には、<code>error</code>の代わりに<code>explanation</code>という項目が返ってきました。
これが、実際にElasticsearch内部で実行されるクエリになります。</p>

<h3>実際のクエリに利用される単語の確認</h3>

<p>この機能はこの他に、クエリの解析にも利用できます。
思ったとおりに検索にヒットしない場合があって、困ったことはないですか？
フィールドに指定されたアナライザによっては、単語を変形したりするものが存在します。</p>

<p><strong><em>サンプルマッピング</em></strong>
<code>
PUT /validate_sample
{
  "mappings": {
    "several_analyzer": {
      "properties": {
        "title": {"type": "string"},
        "body_ja": {"type": "string", "analyzer": "kuromoji"},
        "body_en": {"type": "string", "analyzer": "english"}
      }
    }
  }
}
</code></p>

<p>例えば、このように<code>kuromoji</code>、<code>english</code>、デフォルト(<code>standard</code>)アナライザを利用したマッピングがあるとします。
このフィールドに対して<code>powerful</code>という単語で検索したとします。</p>

<p><strong><em>validate API</em></strong>
<code>
GET /validate_sample/_validate/query?explain
{
  "query": {
    "multi_match": {
      "fields": ["body_en","body_ja","title"],
      "query": "powerful"
    }
  }
}
</code></p>

<p>この場合、レスポンスは次のとおりです。</p>

<p><strong><em>validate APIのレスポンス</em></strong>
<code>
{
   "valid": true,
   "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
   },
   "explanations": [
      {
         "index": "validate_sample",
         "valid": true,
         "explanation": "(title:powerful | body_en:power | body_ja:powerful)"
      }
   ]
}
</code></p>

<p><code>title</code>、<code>body_ja</code>については入力された単語がそのままクエリとして利用されています。
<code>body_en</code>については、<code>power</code>という単語に変換されて実行されています。
これは、<code>english</code>アナライザがステミングを行った結果がクエリとして利用されるという意味です。
また、<code>powerful</code>を<code>秋葉原</code>といった日本語に変更して実行すると次のようになります。
日本語は<code>standard</code>アナライザなどでは、1文字ずつ区切られてしまうことがわかります。</p>

<p><strong><em>validate APIのレスポンス</em></strong>
<code>
{
   "valid": true,
   "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
   },
   "explanations": [
      {
         "index": "validate_sample",
         "valid": true,
         "explanation": "((title:秋 title:葉 title:原) | (body_en:秋 body_en:葉 body_en:原) | ((body_ja:秋葉 body_ja:秋葉原) body_ja:原))"
      }
   ]
}
</code></p>

<p>このように、クエリの単語がどのような単語に変換されてクエリに利用されているかなども知ることが可能です。</p>

<p>また、クエリを組み立てて、ヒットするはずが、0件となってしまうという場合にも、どのようなクエリが組み立てられているかを確認するという点で、
<code>validate API</code>が役立ちます。
検索がヒットするが、望んだクエリになっていないのでは？という場合は<code>_search API</code>の<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-explain.html"><code>explain</code>パラメータ</a>を
利用すれば、クエリの構成がわかるのですが、検索結果が0件の場合はクエリの構成は表示されません。</p>

<h2>解決できない問題は？</h2>

<p>便利なvalidate APIですが、以下の問題に対しては残念ながら確認できません。</p>

<ul>
<li><code>query</code>以外の項目のvalidate不可

<ul>
<li>たとえば、<code>_search API</code>の<code>size</code>などの項目についてはチェックできないです。</li>
</ul>
</li>
<li>存在しないフィールドの指定

<ul>
<li>上記<code>validate_sample</code>のマッピングの例でクエリに<code>body_eng</code>という存在しないフィールドを指定してもエラーとはなりません。</li>
</ul>
</li>
</ul>


<h2>まとめ</h2>

<p>書いたクエリがうまく動かない、JSONのタグがおかしいといった場合は、
まずはこの<code>validate API</code>で確認してみるのがオススメです。</p>
]]></content>
  </entry>
  
</feed>
