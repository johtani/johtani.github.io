<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rust | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/rust/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2018-02-15T22:46:49+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第1章の00から02までやってみた（言語処理100本ノック）]]></title>
    <link href="http://blog.johtani.info/blog/2018/02/15/nlp100-ch01-00to02/"/>
    <updated>2018-02-15T21:59:01+09:00</updated>
    <id>http://blog.johtani.info/blog/2018/02/15/nlp100-ch01-00to02</id>
    <content type="html"><![CDATA[<p>「鉄は熱いうちに打て」ということで、言語処理100本ノックの第1章の00から02を実装してみました。</p>

<!-- more -->


<p>さて、これが効率がいいのかどうかはさておき。</p>

<h3>00. 文字列の逆順</h3>

<p>最初、<a href="https://github.com/johtani/nlp100-rust/blob/48567d107511541d0401af4ef58c6abb98a6083b/src/chapter01/answer.rs">Vecのreverse()で逆順にして0からlen()まで回してた</a>んですが、pop()がいい感じに後ろから取れることがわかったんで、切り替えました。
シンプルかな？</p>

<script src="http://gist-it.appspot.com/http://github.com/johtani/nlp100-rust/blob/ccbdf272adbb5aa738dc73e78e3667e4300a49c1/src/chapter01/answer.rs?slice=2:12"></script>


<h3>01. 「パタトクカシーー」</h3>

<script src="http://gist-it.appspot.com/http://github.com/johtani/nlp100-rust/blob/ccbdf272adbb5aa738dc73e78e3667e4300a49c1/src/chapter01/answer.rs?slice=14:24"></script>


<p>1文字ずつ取り出して、インデックスの番号が2で割ってあまりが0なら文字列に追加していくってのでやってみました。
（ブログ書いてるところで、<code>i in 0..char_array.len()</code>じゃなくて、<code>(i, x) in char_array.iter().enumerate()</code>に切り替えました。）
matchとか使って綺麗に書けたりするのかなぁ？</p>

<h3>02. 「パトカー」＋「タクシー」＝「パタトクカシーー」</h3>

<script src="http://gist-it.appspot.com/http://github.com/johtani/nlp100-rust/blob/ccbdf272adbb5aa738dc73e78e3667e4300a49c1/src/chapter01/answer.rs?slice=26:56"></script>


<p>だいぶ思考錯誤してる感じがソースに現れてます。
とりあえず、両方の文字列をcharsの配列にして個々のイテレータを回しながら、next()の戻り値があれば追加していく感じにして、
終了条件が両方Noneを通ったらにしてるけど、、、
なんか、もっと綺麗にできないのかなぁ。。。
next()のタプル返す関数作って、とかでなんかできたりするかなぁ？</p>

<h3>gist-it</h3>

<p>関係ないですが、GitHubのコードを貼り付けるのに便利なサービスがあるみたいです。</p>

<p><a href="http://gist-it.appspot.com">http://gist-it.appspot.com</a></p>

<p>これほんと便利だな。行数指定もできるし。
説明するのが簡単だ。</p>

<p>とりあえず、今日はこの辺まで。なんか、いい知恵あれば教えてください！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[言語処理100本ノックはじめました(Rust)]]></title>
    <link href="http://blog.johtani.info/blog/2018/02/14/start-nlp100-with-rust/"/>
    <updated>2018-02-14T19:52:31+09:00</updated>
    <id>http://blog.johtani.info/blog/2018/02/14/start-nlp100-with-rust</id>
    <content type="html"><![CDATA[<p>ども。新しいもの始めないと頭が退化する。。。ということで、こちら（
<a href="http://blog.katsyoshi.org/blog/2018/01/16/happy-new-year-and-new-language/">happy new year and new language - katsyoshiのめもみたいなもの</a>）のブログに触発されて、言語処理100本ノックをはじめてみました。</p>

<!-- more -->


<p><a href="http://www.cl.ecei.tohoku.ac.jp/nlp100/#ch1">言語処理100本ノック</a>とは、自然言語処理になるのかな、東北大学の研究室の先生が公開している言語処理に関する実践的な課題をベースにプログラミングなどのスキルを学んでいくための問題集です。
元々はPythonを対象とされているようですが、Rustでやってみようかと。
まぁ、先ほどあげたブログの二番煎じです。。。
ちなみに、インスパイアされた元のブログの方はRust book 2nd editionを読み終えたらしいですが、私はかじった程度です（ダメかも？）。</p>

<p>NLPもRustもかじった程度なので、苦戦しそうですが、ちょっとずつやっていこうかなと。
ということで、準備運動の第1章から始めようかと。
GitHubにちょっとずつあげていく予定です。
<a href="https://github.com/johtani/nlp100-rust">https://github.com/johtani/nlp100-rust</a></p>

<p>まぁ、まずは宣言のブログを書いてみただけです。
続いてなかったら、叱咤激励してください。叱咤だけかも？</p>
]]></content>
  </entry>
  
</feed>
