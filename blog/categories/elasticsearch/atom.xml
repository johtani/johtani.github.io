<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elasticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-02-12T15:07:27+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elasticsearch　1.4.3および1.3.8リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/12/elasticsearch-1-4-3-and-1-3-8-released-ja/"/>
    <updated>2015-02-12T12:39:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/12/elasticsearch-1-4-3-and-1-3-8-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">elasticsearch 1.4.3 and 1.3.8 released</a></p>

<p>本日、<strong>Lucene 4.10.3</strong>をベースにした<strong>Elasticsearch 1.4.3</strong>と、<strong>セキュリティ</strong>とバグフィックスリリースである、<strong>Elasticsearch 1.3.8</strong>をリリースしました。
ダウンロードおよび変更リストはそれぞれ次のリンクからアクセスできます。</p>

<ul>
<li>最新ステーブルリリース：<a href="http://www.elasticsearch.org/downloads/1-4-3">Elasticsearch 1.4.3</a></li>
<li>1.3.x系バグフィックス：<a href="http://www.elasticsearch.org/downloads/1-3-8">Elasticsearch 1.3.8</a></li>
</ul>


<p>過去のリリースに関するブログ（公式）はこちら。</p>

<ul>
<li>1.4:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-2-released/">1.4.2</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.4.1</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.4.0</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/">1.4.0.Beta1</a></li>
<li>1.3:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-2-released/">1.3.7</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.3.6</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.3.5</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-4-released/">1.3.4</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-3-released/">1.3.3</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-2-released/">1.3.2</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-1-released/">1.3.1</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-0-released/">1.3.0</a>.</li>
</ul>


<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-3">1.4.3のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-8">1.3.8のリリースノート</a>をごらんください。
以下では、セキュリティの問題について紹介します。</p>

<!-- more -->


<h2>groovy scripting の脆弱性</h2>

<p>Elasticsearchのバージョン1.3.0から1.3.7および1.4.0から1.4.2で、Groovyスクリプトエンジンに脆弱性が発見されました。
脆弱性は、攻撃者がGroovyスクリプトをサンドボックスを避けて構築でき、
ElasticsearchのJava VMを実行しているユーザとしてシェルコマンドを実行できます。</p>

<p>この問題をCVE-2015-1427として報告済みです。</p>

<p>バージョン1.3.8と1.4.3では、デフォルトで、Groovyに対してのサンドボックスをオフにしました。
結果として、<strong>ダイナミックスクリプトの実行はGroovyに対してもオフとなります。</strong></p>

<p>もし、脆弱性のあるバージョンで実行している場合、v1.3.8かv1.4.3にアップグレードするか、ダイナミックなGroovyスクリプトをクラスタの
すべてのノードに対して次の設定を追加することで、オフにします。</p>

<pre><code>script.groovy.sandbox.enabled: false
</code></pre>

<p>これは、Groovyのサンドボックスをオフにし、リクエストの一部としてインラインで受け付けるダイナミックなGroovyスクリプトや
特殊な<code>.scripts</code>インデックスに保存されているスクリプトを実行しません。</p>

<p>それまでは、各データノードの<code>config/scripts</code>ディレクトリにファイルとして保存されたGroovyスクリプトは
まだ、利用可能です。詳細の情報については<a href="http://www.elasticsearch.org/blog/running-groovy-scripts-without-dynamic-scripting/">Running scripts without dynamic scripting</a>をごらんください。</p>

<h2>future scripting plans</h2>

<p>安全なダイナミックスクリプティング言語としてGroovyを失うことは、Elasticsearchにとって痛手です。
update APIやsearch APIやaggregationsフレームワークの一部としてScriptを使います。
それらは、静的なAPIでは簡単に表現できない、カスタムなトリックをユーザに実行できるようにします。</p>

<p>残念ながら、Groovyチームとこの問題を議論した後、Groovy言語もサンドボックスによってきちんと保護されている
というにはあまりにもダイナミックであるという結論に達しました。
Groovyは、デフォルトでは利用できなくなります。
利用可能なダイナミックスクリプト言語としては<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_lucene_expressions_scripts">Lucene Expressions言語</a>のみとなります。
Expressionsははやいですが、それらは非常に限定されています。数値のフィールドでのみ実行可能で、ループをサポートしていません。</p>

<p>より強力で（しかし安全な）ミニ言語になるようにExpressionsを拡張することを調査しています。
これは、Scriptユーザが現在持っている最も一般的なユースケースを少なくとも助けるでしょう。
この拡張は長期間のプロジェクトであり、進化には時間がかかるでしょう。</p>

<p>ぜひ、<a href="http://www.elasticsearch.org/downloads/1-4-3">Elasticsearch 1.4.3</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CROSS 2015で話をしてきました #cross2015]]></title>
    <link href="http://blog.johtani.info/blog/2015/01/29/talk-at-cross2015/"/>
    <updated>2015-01-29T11:59:28+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/01/29/talk-at-cross2015</id>
    <content type="html"><![CDATA[<p>今年もCROSS参加しました。そして、話もしてきました。
今年は横浜の大さん橋でした。横浜はあんまりこないので、乗り換えでおたおたしてしまいましたが。。。</p>

<p><img src="/images/entries/20150129/oosanbashi.jpg"></p>

<!-- more -->


<p>なかなかいい景色でした。（寒いけど）
「おおさんばし」って読むんですね。「だいさんばし」だと思ってた。。。</p>

<p>以下はいつもの、自分用メモです。</p>

<h2>俺はどうしてそのデータストアを選択したのか 〜銀河と小宇宙を語る会〜</h2>

<p><a href="http://2015.cross-party.com/program/c1">http://2015.cross-party.com/program/c1</a></p>

<p>遅れて入ったので、ちゃんと聴けてないです。</p>

<h4>最近注目しているデータストアは？</h4>

<ul>
<li>Postgresql。JSON型が気になってる。</li>
<li>AiroSpike。データ型のあるデータストアが気になってる。</li>
<li>MongoDB。<strike>JSON使いたいなら、これじゃないの？</strike></li>
<li>AWSのAurora。<strike>インスタンスタイプを選ばなくていい</strike>（選ばないといけないらしい）とか、勝手にスケールしてくれるし、MySQL互換。</li>
</ul>


<h2>今こそ語るエンジニアの幸せな未来</h2>

<p><a href="http://2015.cross-party.com/program/x3">http://2015.cross-party.com/program/x3</a></p>

<ul>
<li>「無職初日です。」</li>
<li>Web系の人？とか質問されて、自分が何系かいつもわからなくなるなぁ。</li>
<li>「働きがいは会社が提供するのか、個人が見つけるのか？」

<ul>
<li>個人かなぁ。会社がなにをやってるかにもよる気がするかなぁ。</li>
</ul>
</li>
<li>「辞めると伝えると、やりたいようにやれって言われるw」</li>
<li>リモートできるかできないか。</li>
<li>「働きがい」というキーワードが出てると普通は怪しい会社w</li>
<li>今は、働きやすさを高くしないと人が雇えなくなってきている。</li>
<li>欧米のミドルウェアだと、35歳定年説はない。→日本でもそうじゃないですか？</li>
<li>漫然と進んでるとダメ。→そりゃそうだ。</li>
</ul>


<h2>全文検索エンジン群雄割拠〜あなたが使うべきはどれだ！〜</h2>

<p><a href="http://2015.cross-party.com/program/c4">http://2015.cross-party.com/program/c4</a></p>

<p>スライド：<a href="https://speakerdeck.com/johtani/elasticsearchfalseshao-jie-tote-zheng-cross-2015">https://speakerdeck.com/johtani/elasticsearchfalseshao-jie-tote-zheng-cross-2015</a></p>

<p>楽しんでいただけましたでしょうか？
ちょっと話が長くなってしまい、あとの方の時間が少なかった気がしますが。。。</p>

<p>Kibanaのバックエンドとして認識されている人もいたので、検索エンジンですよというのをアピールするいい機会になったので良かったです。
もちろん、Kibanaとの組み合わせも面白いので、少しでも興味をもっていただき、触っていただけたらなぁと。</p>

<p>話をする機会を用意していただいた、<a href="https://twitter.com/yamakatu">やまかつさん</a>、その他のスピーカーのみなさん、ありがとうございました！。</p>

<p>Elasticsearchに関して何か興味質問などありましたら、気軽にコンタクトしてください。Twitterとかブログコメントなどで。</p>

<h2>プレモルタイム以降</h2>

<p>プレモルの写真撮るの忘れてました。。。重要なのに。。。</p>

<p>美味しくプレモルをいただきながら、何人かの方に声をかけていただき、話をすることができました。
こういう時間がとってあるのがいいですよね。
色々なところでElasticsearchを使っていただいているようで、うれしい限りです。
DMMの方とも話ができたし。</p>

<h2>まとめ</h2>

<p>今年はプレモルを飲みに行くだけかなぁと思っていたのですが、話をする人になってました。（おかしいなぁ）
来年もあれば、きっと参加するかなぁと。ではまた来年！</p>

<p><img src="/images/entries/20150129/night.jpg"></p>

<p>夜景きれいですね。（端っこに写ってる船は<a href="http://www.asukacruise.co.jp/facility/view/">飛鳥II</a>でした。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 2.0系のIssueの紹介]]></title>
    <link href="http://blog.johtani.info/blog/2014/12/25/pickup-elasticsearch-2-0-0-labels/"/>
    <updated>2014-12-25T15:53:00+09:00</updated>
    <id>http://blog.johtani.info/blog/2014/12/25/pickup-elasticsearch-2-0-0-labels</id>
    <content type="html"><![CDATA[<p>この記事は<a href="http://qiita.com/advent-calendar/2014/elasticsearch">Elasticsearch Advent Calndar 2014</a>の25日目のエントリです。</p>

<p>あっという間に最終日です。来年につなげるという意味で、Elasticsearchの2系のIssueをいくつかピックアップして紹介してみます。</p>

<!-- more -->


<p>現在、ElasticsearchのGitHubリポジトリは、大きく3つのブランチで作業しています。
<code>master</code>、<code>1.x</code>、<code>1.4</code>です。<code>master</code>と<code>1.x</code>の大きな違いとしては、<code>master</code>はLuceneの5.x系を採用している点です。</p>

<p>なお、これから紹介するIssueは現在、確定していない項目も含んでいます。実際に2.0がリリースされるタイミングでは
採用されない場合もあります。</p>

<h2>Upgrade master to lucene 5.0 snapshot #8347 (closed)</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/pull/8347">https://github.com/elasticsearch/elasticsearch/pull/8347</a></p>

<p>先ほど書きましたが、Luceneの5に対応するためのPRです。
Lucene 5に関してはLuceneのコミッターのMikeさんの<a href="http://blog.mikemccandless.com/2014/11/apache-lucene-500-is-coming.html">ブログ記事</a>も参考になります。</p>

<p>Lucene 5に変更することで、BitSetに関する改善が多く含まれることになります。
メモリの利用量、圧縮などの改善が多く含まれています。
もう1点大事な点としては、Lucene 5系ではLucene 3系のインデックスを読み込むことができなくなる点です。
Luceneの下位互換の範囲は1つ前のメジャーバージョン（5.x系の場合は4.xまでが対象）となっています。</p>

<h2>Filter cache: add a <code>_cache: auto</code> option and make it the default.（closed）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/pull/8573">https://github.com/elasticsearch/elasticsearch/pull/8573</a></p>

<p>Filter cacheは、<code>true</code>もしくは<code>false</code>の設定が利用できますが、filterの種類にも依存します。
その辺りの条件を加味しつつ、よしなにCacheをコントロールしてくれます。</p>

<h2>Remove and/or/not in favour of <code>bool</code> filter #8960（open / discuss）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/issues/8960">https://github.com/elasticsearch/elasticsearch/issues/8960</a></p>

<p>似ているが少し異なる<code>and</code>、<code>or</code>、<code>not</code>フィルタと<code>bool</code>フィルタが存在しています。
これらをわかりやすくするために、<code>bool</code>フィルタに統一しましょうという話し合いをしています。</p>

<h2>Input validation #9059（open / discuss）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/issues/9059">https://github.com/elasticsearch/elasticsearch/issues/9059</a></p>

<p>色々な入力に関するチェックを追加しようというIssueです。
たとえば、ディレクトリ名やファイル名、URLのパスやクエリストリング、フィールドのパスやスクリプトなどです。
Validationがあると、変な設定をして頭をかかえることもなくなるかなぁと。</p>

<h2>Refactor analysis framework #8961（open）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/issues/8961">https://github.com/elasticsearch/elasticsearch/issues/8961</a></p>

<p>新しくAnalyzerを作った場合に、色々な場所に登録必要があったりします。インデックスレベルとノードレベルです。（Kuromojiプラグインなどが参考になります。）
また、インデックスごとにカスタムのAnalyzerを設定するので、1つのノードに同じAnalyzerを何度も設定しないといけません。
よりシンプルにするために、Analyzerをノード単位で設定しようという提案です。</p>

<h2>Remove possibility for conflicting field definitions and ambiguous field resolution #8870（open）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/issues/8870">https://github.com/elasticsearch/elasticsearch/issues/8870</a></p>

<p>同じインデックスに、異なるtypeで、同じフィールド名があった場合、いろいろと良くないことがあったりします。
たとえば、フィールドのタイプがintegerとstringと異なる場合に、インデックスレベルで検索を行うとうまく検索できなかったりと。
この問題を解消するために、より明確にしようというIssueです。
たとえば、フィールド名を指定するためには、フルパスで記述をするだとか、フィールドマッピングに関してはインデックスレベルで内部で保持をするなど。</p>

<h2>Validation of mappings request to reject unsupported fields #7205（closed）</h2>

<p><a href="https://github.com/elasticsearch/elasticsearch/issues/7205">https://github.com/elasticsearch/elasticsearch/issues/7205</a></p>

<p>1.xでも取り込まれますが、嬉しい機能なので紹介します。
これまでは、mappingsでスペルミスをした場合（たとえば、field設定で&#8221;indexx&#8221;といったミス）には、その項目は単に無視されるだけでした。
これが、v1.xでは、エラーに</p>

<h2>まとめ</h2>

<p>ということで、簡単ですが、v2.0.0に向けたIssueをピックアップして紹介してみました。
上記以外にも多くの改善、提案が2.0に向けて行われています。
興味のある方は、<a href="https://github.com/elasticsearch/elasticsearch/issues?q=is%3Aopen+is%3Aissue+label%3Av2.0.0">v2.0.0</a>ラベルでIssueを検索してみてはいかがでしょうか？</p>

<p>今年もあとわずかとなりました。
今年の2月にElasticsearchの1.0がリリースされ、あっという間に1.4なりました。まだまだ改善しています。</p>

<p>来年もElasticsearchに興味をもっていただければ嬉しいです。
<a href="http://www.elasticon.com/">Elasticsearch初のユーザカンファレンスのサイトもオープン</a>しました。
Elasticsearchに関するいろいろな話が聞ける機会だと思います。登録をお待ちしています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Marvel 1.3.0リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2014/12/18/marvel-1-3-0-released-ja/"/>
    <updated>2014-12-18T17:06:48+09:00</updated>
    <id>http://blog.johtani.info/blog/2014/12/18/marvel-1-3-0-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/marvel-1-3-0-released/">marvel 1.3.0 released</a></p>

<p>12/17に、<strong>Elasticsearch Marvel 1.3.0</strong>をリリースしました。
Marvelの以前のリリースから、Elasticsearchでは様々なことがありました（Elasticsearch 1.4のリリースなど）。
このバージョンでは、モニタリングにクエリキャッシュや新しいcircuit breakerなどのような機能を追加してあります。
Senseのナレッジベースは最新のAPIを含むものに拡張されています。
また、<a href="http://www.elasticsearch.org/overview/shield/">Shield</a>のリリースに向けた準備として、HTTPsのサポートも追加しました。</p>

<p>アップグレードのために、Elasticsearchの全てのノードに最新版のMarvelプラグインをインストールする必要があります。
また、他のJavaプラグインと同様に、Marvelの新バージョンを有効にするために、各ノードを（1台ずつ）リスタートする必要があるでしょう。
アップグレードプロセスについての詳細は、<a href="http://www.elasticsearch.org/guide/en/marvel/current/upgrade.html#upgrade">Marvelドキュメント</a>をごらんください。</p>

<!-- more -->


<p>まとめとして、ここに本リリースに関する改善点をいかにリストアップしておきます。</p>

<h3>agent</h3>

<ul>
<li>追加：

<ul>
<li>httpsのサポート</li>
<li>デフォルトのMarvelの設定（以前は常に9200）ではなく、ローカルノードのポートを自動的に検出</li>
</ul>
</li>
<li>改善：

<ul>
<li>marvelインデックステンプレートに関するエラーチェックと耐障害性(それに対するチェックと追加時のチェック)</li>
<li>エラーログに関するくり返しの抑制</li>
<li>URLパラメータによるインデックス名を指定する_bulk exportコマンド。これは、<code>rest.action.multi.allow_explicit_index</code>がfalseに設定されているときに有用</li>
</ul>
</li>
<li>修正：

<ul>
<li>ES 1.4.0のtribe nodeがMarvelのインストール時に初期化されない問題</li>
</ul>
</li>
<li>削除：

<ul>
<li>UIで表示されないoptional shard level statsを除去</li>
</ul>
</li>
</ul>


<h3>monitoring ui</h3>

<ul>
<li>追加：

<ul>
<li>ES 1.4.0で導入された新しいcircuit breakerを追加</li>
<li>circuit breakerのlimitをグラフにプロット</li>
<li>QueryCacheのグラフを追加</li>
<li>index throttlingのグラフの追加</li>
<li>Index writerとバージョンのmapのメモリ使用量のグラフの追加</li>
</ul>
</li>
<li>修正：

<ul>
<li>Network Transport Bytes Receivedグラフに実際の送信量を表示</li>
<li>Node Statsダッシュボードでいくつかのスレッドプールの不足</li>
</ul>
</li>
</ul>


<h3>sense</h3>

<ul>
<li>追加：

<ul>
<li>mappingsをインデックスでオートコンプリートするしないの設定を可能に</li>
<li>Cluster Reroute API</li>
<li>Search APIのQuery Cacheパラメータ</li>
<li>Analyze API</li>
<li>Validate Query API</li>
<li>Put Percolator API</li>
<li>cluster.routing.allocation.*設定</li>
<li>Function Scoreクエリのweightパラメータ</li>
<li>Flush API</li>
<li>Terms Aggregationのshow_term_doc_count_errorパラメータ</li>
<li>Update API</li>
<li>_geo_distanceソートオプション</li>
<li>Significant Terms aggregationを1.4.0にアップデート</li>
<li>Mapping APIにメタデータフィールドを追加</li>
<li>Get Index API</li>
<li>Scripted Metric Aggregation</li>
<li>simple_query_stringクエリ</li>
<li>More Like Thisクエリを1.4.0にアップデート</li>
<li>has_childクエリ/フィルタのmin_childrenとmax_childrenオプション</li>
<li>terms aggs/significant terms aggsのヒントオプション</li>
<li>Mappings APIのtransform</li>
<li>インデックスされたscriptとtemplate</li>
<li>Geo Bounds aggregation</li>
<li>Top Hits aggregation</li>
<li>Terms aggregationのcollect_modeオプション</li>
<li>Percentiles Rank aggregation</li>
<li>Disk Threshold Allocator設定</li>
</ul>
</li>
<li>修正：

<ul>
<li>URLオートコンプリートの挙動（プロトコルとホストのような組み合わせ）</li>
<li>nested typeマッピングのinclude_in_parentとinclude_in_rootの不足</li>
<li>Rangeフィルタでのgt、gte、lt、lte</li>
<li>Existsフィルタのオートコンプリート</li>
<li>Snapshot、Restore APIのリポジトリ設定の時オートコンプリートの失敗</li>
</ul>


<p>いつものように、Elasticsearch Marvelを改善するために、フィードバックをお待ちしています。
<a href="https://groups.google.com/forum/?fromgroups#!forum/elasticsearch">ElasticsearchユーザML</a>や<a href="http://www.twitter.com/elasticsearch">Twitter</a>に質問や意見お送りください。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.4.2および1.3.7リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2014/12/18/elasticsearch-1-4-2-released-ja/"/>
    <updated>2014-12-18T14:26:14+09:00</updated>
    <id>http://blog.johtani.info/blog/2014/12/18/elasticsearch-1-4-2-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">elasticsearch 1.4.3 and 1.3.8 released</a></p>

<p>本日、<strong>Lucene 4.10.3</strong>をベースにした<strong>Elasticsearch 1.4.3</strong>と、<strong>セキュリティ</strong>フィックスとバグフィックスリリースである、<strong>Elasticsearch 1.3.8</strong>をリリースしました。
ダウンロードおよび変更リストはそれぞれ次のリンクからアクセスできます。</p>

<ul>
<li>最新ステーブルリリース：<a href="http://www.elasticsearch.org/downloads/1-4-3">Elasticsearch 1.4.3</a></li>
<li>1.3.x系バグフィックス：<a href="http://www.elasticsearch.org/downloads/1-3-8">Elasticsearch 1.3.8</a></li>
</ul>


<p>過去のリリースに関するブログ（公式）はこちら。</p>

<ul>
<li>1.4:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.4.1</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.4.0</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/">1.4.0.Beta1</a></li>
<li>1.3:<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-1-released/">1.3.6</a>,
<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-0-released/">1.3.5</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-4-released/">1.3.4</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-3-released/">1.3.3</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-2-released/">1.3.2</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-1-released/">1.3.1</a>, <a href="http://www.elasticsearch.org/blog/elasticsearch-1-3-0-released/">1.3.0</a>.</li>
</ul>


<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-2">1.4.2のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-7">1.3.7のリリースノート</a>をごらんください。
以下では、重要な変更について紹介します。</p>

<!-- more -->


<h2>bug fixes</h2>

<p>Elasticsearchに対して広範囲にわたってランダムなテストを行っています。以下の問題を見つけ、修正するのに役立っています。</p>

<ul>
<li>プライマリシャードを持つnodeがレプリカシャードをプライマリから復旧している間に、リスタートした場合に、プライマリ上のトランザクションログが削除されデータをロスする(<a href="https://github.com/elasticsearch/elasticsearch/pull/8917">#8917</a>)</li>
<li>scriptインデックスが普及した場合に、ScriptService全体がデッドロック(<a href="https://github.com/elasticsearch/elasticsearch/pull/8901">#8901</a>)</li>
<li>Index Writerのロックを強制的に解放することによるシャードの破損(<a href="https://github.com/elasticsearch/elasticsearch/pull/8892">#8892</a>)</li>
</ul>


<h2>パフォーマンス改善</h2>

<p>複雑な設定をもつ大きめのクラスタをもつユーザは、小さなスケールではわからない性能ボトルネックに直面します。
彼らの報告が次の改善をもたらす助けとなりました。</p>

<ul>
<li>使用可能なディスク空間に基づいてシャードの配置を決定する、disk allocation deciderの速度改善とクラスタリスタート後のリカバリ速度の改善(<a href="https://github.com/elasticsearch/elasticsearch/pull/8803">#8803</a>)</li>
<li>以前よりも高速な共有ファイルシステムでのSnapshot生成(<a href="https://github.com/elasticsearch/elasticsearch/pull/8749">#8749</a>)</li>
<li>不要なクラスタ状態変更の削減とそれによるネットワークトラフィックの削減およびリカバリの速度向上(<a href="https://github.com/elasticsearch/elasticsearch/pull/8933">#8933</a>, <a href="https://github.com/elasticsearch/elasticsearch/pull/8413">#8413</a>)</li>
<li>index stats APIはシャードリカバリによるブロックしない(<a href="https://github.com/elasticsearch/elasticsearch/pull/8910">#8910</a>)</li>
</ul>


<h2>試してみてください。</h2>

<p>ぜひ、<a href="http://www.elasticsearch.org/downloads/1-4-2">Elasticsearch 1.4.2</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
</feed>
