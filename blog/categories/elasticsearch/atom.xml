<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elasticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-02-21T00:50:27+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kibana 4（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja/"/>
    <updated>2015-02-20T14:05:52+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/kibana-4-literally/">kibana 4. literally.</a></p>

<p>Kibana 4は現在、文字通り、抽象的に、概念的に、精神的に、そしてとても楽しく、プロダクションレディになりました。
1週間前に準備はできていましたが、満足できるものであるという確信を得たいと思っていました。
そして、Kibana 4.0.0 GAをリリースしました。
次のものはサンプルのスクリーンショットと前日譚です。
これらに興奮してしまった方のために、2ステップのプランを用意しました。</p>

<ol>
<li>ダウンロードする：<a href="http://www.elasticsearch.org/overview/kibana/installation/">Kibana 4 downloads</a>ページからダウンロードします。</li>
<li>理解する：<a href="http://www.elasticsearch.org/guide/en/kibana/current/index.html">Kibana 4 docs</a>ページを読んで理解します。</li>
</ol>


<p>Tip : もし、まだ、あなたのクラスタが<a href="http://www.elasticsearch.org/downloads/1-4-4/">Elasticsearch 1.4.4</a>でない場合は、アップグレードする必要があります。<br/>
Tip2 : Kibana 4 RC1からアップグレードする場合は、configを移行する必要があります。<a href="https://gist.github.com/spalger/8daf6c2b7f2954639e38">こちらのgistを参照</a></p>

<!-- more -->


<h2>前日譚 - the back story</h2>

<p>Kibanaはすでに問題解決のためのツールになっています。
なぜ、毎晩2時に呼び出されるんでしょう？
そのコードがプロダクションに入ったのはいつですか？
その結果、何を壊しました？
私たちはそれらを解決しました。
世界的に、長い間、だれも夜中の2時に呼び出されませんでした。知ってます？。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.25.15-PM-1024x692.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.25.15-PM-1024x692.png</a>&#8221;></p>

<p><em>しかし、ここには落とし穴があります。</em>答えが簡単になれば、問題が難しくなります。
楽な勝利は簡単でした。では、難しい問題（深さが3層の問題）を解きましょう。
複数の要素、複数のフィールドそして、複数のデータソースを分析する必要がある問題を解きましょう。
Kibana 4は少ない時間と労力で最も難しい問題を解決してくれます。</p>

<p>Kibana 3で学んだことをKibana 4に取り込みました。
なぜ10億のデータを持っているのに、地図には1000個しかプロットできないのでしょう？
1つのチャートに1つのフィールドなんでしょう？
なぜ、1つのパネルに1つのチャートなんでしょう？
なぜ、1つのダッシュボードに1つのインデックスなんでしょう？
5つのシナリオを用意し、2つのフィールドにまたがったデータを比較し、
1つのダッシュボードに3つのインデックスのデータを表示してみましょう。
さぁ、やりましょう。終わったらアイスクリーム（トッピング付きの）を取りに行きましょう。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.24.14-PM-1024x624.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.24.14-PM-1024x624.png</a>&#8221;></p>

<h2>the plot</h2>

<p>アイスクリームのように、問題には多くの種類があります。
そのために、Kibanaをナポリ風アイスクリーム（3色アイス）のように分割しました。
嫌いな種類は除いて。
もし、あなたがKibanaのユーザ歴が長い場合、最初のタブの<em>Discover</em>がホームであることが正しく感じるでしょう。
これにより、短時間で、検索し、レコードを見つけ、簡単な問題を解決できます。
簡単な問題とは、すべてを物語る1行のデータを見つけることによって解決する問題です。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.55.18-PM1-1024x573.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.55.18-PM1-1024x573.png</a>&#8221;></p>

<p>物事が簡単な検索で説明できるものよりも複雑になった時、チャートとグラフで魔法を作る時間です。
<em>Visualize</em>タブを開き、Elasticsearchのaggregationの力を利用してデータを解析しましょう。
<em>Visualize</em>は複数の次元の性質のデータを見せ、今まで尋ねたことがないような質問に対して素早く回答するチャートやテーブル、
地図を作成できます。
あなたが最初に尋ねる質問は「先週サイトが遅かったのはなぜ？」でした。
しかし、データによって明らかにされた質問は「なぜ、クリスマスに東京からの平均ファイルサイズリクエストがスパイクしたのか？」です。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-18-at-11.13.37-AM-1024x617.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-18-at-11.13.37-AM-1024x617.png</a>&#8221;></p>

<p>最後に、<em>Dashboard</em>でこれらを1つにします。</p>

<p>大きなスクリーンに配置して、こう言います。
「あなたの答えはこのリンクにあります。また、Wikiに埋め込んで、データをCSVにエクスポートしてメールしました。
アイスクリームを食べた後に、自叙伝の第1章を書きました。もっとアイスを持ってきてください。かき混ぜますから。」</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-3.30.30-PM-1024x715.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-3.30.30-PM-1024x715.png</a>&#8221;></p>

<p>それぞれのタブで見てきた詳細については、<a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1 : Released</a>をごらんください。</p>

<h2>to be continued&hellip;</h2>

<p>居眠りをする時間はあります？いいえ、Kibana 4.1についてすでに作業中で、将来の大きなプランを持っています。
多くの労力はKibana 4の土台の安定と実用性を構築することに使われました。
また、Elasticsearchアプリケーションの将来を構築するプラットフォームを作りました。
すべてのものは拡張できるように設計されています。
例えば、可視化はより良くなるように構築されています。
オープンソースは私たちのGitHubアカウント以上のものです。
それは、新しく素晴らしいものを誰もが作ることができる構造を作ることが私たちの約束です。</p>

<p>Kibanaでグラフなどを構築したり、Elasticsearchを利用したアプリケーションを作成するために、
私たち開発者のブログを参考にしてください。
ちょっと見てみたいですか？
Elastic{ON}15のSpencer Algerのトークをチェックしてください。</p>

<p>あなた方なしでは、私たちはここにはいないですし、あなた方の助けがなければ何もできません。
ぜひ、GitHubでのissueや提案、貢献をお待ちしています。
もしくは、IRCでFreenodeの#kibanaに参加してください。</p>

<h2>extra credit</h2>

<p>Kibana 4のすべての話に興味がありますか？私たちのKibana 4ベータに関する過去のブログをチェックしてください。</p>

<ul>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1: Released</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-2-get-now/">Kibana 4 Beta 2: Get it now</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-3-now-more-filtery/">Kibana 4 Beta 3: Now more filtery</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-rc1-is-now-available/">Kibana 4 RC1: Freshly baked</a></li>
</ul>


<p>最後に、Kibanaの利用に関する話をお持ちなら、ぜひ聞かせてください。
stories at elasticsearch dot comもしくは<a href="http://www.twitter.com/elasticsearch">@elasticsearch</a>に連絡をください。
あなたの話を世界にどのようにシェアしているかごらんください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.4.4および1.3.9リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja/"/>
    <updated>2015-02-20T14:05:34+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-4-and-1-3-9-released/">elasticsearch 1.4.4 and 1.3.9 released</a></p>

<p>本日（2/20）、<strong>Elasticsearch 1.4.4</strong>と<strong>Elasticsearch 1.3.9</strong>をリリースしました。
これはバグフィックスリリースとなります。
主に、Lucene expression scriptsを使う場合のRPMとDEBパッケージの
パッケージング問題のフィックスをしたものです。
<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のダウンロードこちらのリンク</a>からアクセスできます。</p>

<!-- more -->


<h2>fixes</h2>

<p>1.4.3のRPMおよびDEBパッケージにはAntlrとASMの<a href="https://github.com/elasticsearch/elasticsearch/pull/9696">依存関係の不足</a>がありました。
この依存はElasticsearchでLucene expression scriptsを利用する場合に必要になります。
Groovyに関する<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">1.4.3の変更</a>により、多くのユーザがLucene explression scriptsを利用することが予想されるため、すぐに、1.4.4をリリースしました。</p>

<p>また、このリリースには、クラスタの保留タスクに関するいくつかのバグフィックスも含まれています。
さらに、date histogramで負のインターバルの場合に<code>OutOfMemoryError</code>を引き起こすバグも
修正されています。</p>

<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-9">1.3.9のリリースノート</a>をごらんください。</p>

<h2>フィードバック</h2>

<p>私たちはフィードバックをお待ちしています。
Twitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)もしくは<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で教えてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[名古屋でElasticsearch勉強会を開催します]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya/"/>
    <updated>2015-02-18T15:22:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya</id>
    <content type="html"><![CDATA[<p>来る、4月4日の土曜日の午後に名古屋でElasticsearch勉強会を開催予定です。
「初」の東京以外の勉強会です。</p>

<!-- more -->


<p>Twitterでこのようなツイートを見かけまして。</p>

<blockquote class="twitter-tweet" lang="ja"><p>名古屋でElasticsearchの勉強会やりたい機運（今のところ2人）。</p>&mdash; mogami (@smogami) <a href="https://twitter.com/smogami/status/562864387632136192">2015, 2月 4</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>これは！ということで、名古屋で勉強会をやろうかと思います。30名程度の場所を借りて実施予定です。
募集はいつもの、<a href="http://elasticsearch.doorkeeper.jp">elasticsearch勉強会のDoorkeeper</a>で行う予定です。
ページの準備まで少々待ちください。（おそらく、3月中旬くらい）
私自身はElasticsearchやELKについて話をしようと思っています。そのほかに、2,3名のスピーカーの方を予定しています。
LTなど興味がある人がいたら、連絡ください。</p>

<p>これを機に（？）他の場所でも勉強会を開催したいと考えています。
ニーズがどのくらいありそうなのかが、まだよくわかっていませんが、関西などでニーズがあるんじゃないかと期待していたり。</p>

<p>興味のある方は、コメント欄、Twitterなどでコンタクトしてもらえればと。
（連絡来るとうれしいなぁ。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第8回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp/"/>
    <updated>2015-02-16T15:02:23+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="http://elasticsearch.doorkeeper.jp/events/19923">第8回Elsticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、開場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、ありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<!-- more -->


<p>今回は出足が好調で、早々に180人の枠を超えるという嬉しい事態でしたが、
キャンセル待ちが残っているにもかからわらず、来られていない方が67名もいるということで、キャンセル待ちの方には申し訳なかったです。
もうすこし、キャンセルをしてもらえると嬉しいんですが。。。
今回はメールを当日に1度しか打ってないからかなぁ。</p>

<p>さて、いつもの通り簡単なメモです。
本当に簡単にですが。</p>

<h2>「Elasticsearch導入チェックリスト？」 Elasticsearch株式会社 Jun Ohtani @johtani</h2>

<p>スライド：<a href="https://speakerdeck.com/johtani/elasticsearchdao-ru-tietukurisuto">Elasticsearch導入チェックリスト？</a></p>

<p>Elasticsearchを開発環境や本番に導入する前に気にかけて欲しいことについて発表しました。
元ネタは<a href="http://www.elasticsearch.org/webinars/elasticsearch-pre-flight-checklist/">elasticsearch pre-flight checklist</a>です。
少々古いのですが、私が今回話した内容以外にもモニタリングなどについての話も盛り込まれています。
時間がある方は、見ていただければと。</p>

<h2>「Elasticsearch クエリとスキーマ定義のすごい細かい話」株式会社ドワンゴ 藤堂淳也 さん</h2>

<p>スライド：<a href="https://speakerdeck.com/jtodo/elasticsearch-kueritosukimading-yi-falsexi-kaihua">Elasticsearch クエリとスキーマ定義のすごい細かい話</a></p>

<ul>
<li>フィールドのチェックを別途インデキシングするアプリで行っている。利用できるものだけElasticsearchに投げる</li>
<li>実際に本番環境で利用しているマッピングに対してフィールドを追加する手順について</li>
<li>「これもドキュメントに書いてあるんですが」という感じでドキュメントに色々書いてあるので読みましょうというありがたい発表でした。</li>
</ul>


<p>実際に試行錯誤したり検証するときに行ったことを喋ってもらえたので、どういった点を気にしながら運用、設計するかというのがわかりやすかったです。</p>

<h2>「ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析」株式会社サイバーエージェント　山田直行さん　@satully</h2>

<p>スライド：<a href="http://www.slideshare.net/Satully/elasticsearch8-elasticsearchkibana-30reqday">ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析</a></p>

<p>会場が21時までしか抑えられていないという失態で、ドタバタしてて前半は聞けてないです。。。</p>

<ul>
<li>前回の発表では30日分Elasticsearchに入れていたが、今は3日分のみ保存</li>
<li>レポートなどにはRedshift＋Tableauを利用</li>
<li>Kibana3をメインに使っているが、Kibana4も検討予定？</li>
</ul>


<p>QA
* Q：なぜ、ELBを挟んでいるのか？
  * A：特に考えておいているわけではない。
* Q：インデックスの構成は？
  * A：1日に2つのインデックス。Bitされたもの、入札されないもの
* Q：searchのnodeをやめたのは？
  * A：前回発表した勉強会での懇親会で話を聞いたり、他の方と話を聞いて、不要と判断したため</p>

<h2>「はてなのメディア面を支えるElasticsearch」株式会社はてな　山家雄介さん　@yanbe</h2>

<p>スライド：未定。おそらく、開発者ブログに公開されるかと。</p>

<ul>
<li>アドテク系にもやってるらしい。BrandSafeはてな</li>
<li>はてなブックマークのデータを魅せ方を変える機能などで大活躍。<a href="http://bkuma.hatena.ne.jp">B!KUMA</a>とか</li>
<li>その日の話題の見出し自動生成機能。Significant Terms Aggregationsを利用。</li>
<li>こちらの<a href="http://bookmark.hatenastaff.com/entry/2015/02/05/190331">「自然言語処理技術を用いたはてなブックマークの新機能「トピック」をベータリリースしました」</a>エントリに関係あるのかな？</li>
</ul>


<p>記事の魅せ方を検索できる管理画面ではElasticsearchのクエリDSLを活用されているとのことでした。
検索専門の人でなくても検索式を簡単にくみたてられる画面を用意して、ElasticsearchのクエリDSLに変換するようにしていると。
確かに、クエリをそのまま組み立ててもらうよりも利用しやすい画面がある方がいいですよね。バックエンドはJSとPerlのライブラリとのことでした。</p>

<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://takudo.hatenablog.jp/entry/2015/02/14/101749">2015-02-13 第8回 elasticsearch 勉強会 @ 丸の内 リクルート 41Fアカデミーホール</a></li>
<li><a href="http://suzuki.tdiary.net/20150213.html"> [Elasticsearch] 第8回 elasticsearch 勉強会へ参加してきた</a></li>
<li><a href="http://qiita.com/t-sato/items/8e353ccf7d7bba46f635">第8回elasticsearch勉強会 #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://keyamb.hatenablog.com/entry/2015/02/16/015916">第8回 Elasticsearch 勉強会に行ってきた #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://blog.yoslab.com/entry/2015/02/13/203251">勉強会メモ - 第8回elasticsearch勉強会</a></li>
</ul>


<h2>まとめ</h2>

<p>今回も検索からログまでいろんな話になったので、面白かったかと。
参加された方は新しい方が多かったんじゃないかなぁと。（集計結果で見れないのかな、Doorkeeper）。</p>

<p>今回は、みなさんに21時に41Fから33Fへ移動していただくという大失態があったので、大変申し訳なかったです。
次回（4月中旬）は、このようなことがないように気をつけますので、今後もよろしくお願いいたします。</p>

<p>あと、東京以外の勉強会も検討しつつあります。興味のある方はコメントやTwitterで反応をいただけると嬉しいです。</p>

<p>スピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。 よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyスクリプトをダイナミックスクリプトなしで実行(日本語訳)]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/12/running-groovy-scripts-without-dynamic-scripting-ja/"/>
    <updated>2015-02-12T15:13:09+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/12/running-groovy-scripts-without-dynamic-scripting-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/running-groovy-scripts-without-dynamic-scripting/">running groovy scripts without dynamic scripting</a></p>

<p>Elasticsearch1.3.8と1.4.3のリリースにより、デフォルトで、リクエストに含まれるGroovyスクリプトや
インデックスに保存されたスクリプトを動的に実行する機能をオフにしました。
しかし、Groovyはまだデフォルトのスクリプト言語です。
本ブログ記事では、少しだけダイナミックだが、サンドボックスではない言語のためのスクリプトを
どのように使い続けるかを説明します。</p>

<p>本ブログ記事は、それが何を意味し、さらに重要なのは、安全に重要なタスクを実行させるためにスクリプトを
どのように使用し続けるかを理解する助けとなるはずです。</p>

<!-- more -->


<h2>ダイナミックスクリプトとは？</h2>

<p>Elasticsearchに詳しくない方のために、Elasticsearchでは、
さまざまなリクエストの一部としてスクリプトを送信することができます。
search、aggregation、update、upsert、delete by queryなどです。
あなたのユースケースのために、通常の動作よりも拡張した動作をさせるためにスクリプトを追加できます。</p>

<p>例えば、以下のリクエストは、ダイナミックスクリプトを含んでいます。
<code>field1</code>と<code>field2 + shift</code>が同じ値を持っている時だけドキュメントを返します。</p>

<pre><code class="json">GET /_search
{
  "query":{
    "filtered":{
      "filter":{
        "script":{
          "script":"doc['field1'].value == (doc['field2'].value + shift)",
          "lang":"groovy",
          "params":{
            "shift":3
          }
        }
      }
    }
  }
}
</code></pre>

<p>言語を変えることもできます。
それは、当然、シンタックスが変わったり、制限が追加（例えば、Groovyスクリプトの代わりに<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_lucene_expressions_scripts">Lucene　Expressions</a>に変更）されることもあります。
<code>lang</code>パラメータによって言語を指定できます。</p>

<h3>なぜそれはダイナミック？</h3>

<p>上記の例はダイナミックスクリプトです。
それは、実際のスクリプトの部分はサーバサイドで<em>動的に</em>解釈されコンパイルされる必要があるからです。
ダイナミックスクリプトはElasticsearchのAPIによってデータノードに送信されます。
これは、<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_indexed_scripts">インデックスされたスクリプト(indexed script)</a>も含みます。</p>

<p>言い換えると、もし、スクリプトがデータノード全てに保存されていなければ、
それは、ダイナミックスクリプトとして扱われます。</p>

<h2>dynamic scriptingをオフにするとどうなるか？</h2>

<p>最新のリリースでの変更により、Groovyのdynaic scriptingはデフォルトでオフになりました。
先ほどのスクリプトについても同様で、もし、先ほどのリクエストを実行すると、次のようなエラーが発生します。
(一部省略してあります。)</p>

<pre><code class="json">{
   "error":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[8FJ02MofSnqVvOQ10BXxhQ][test][0]: SearchParseException[[test][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{...}]]]; nested: ScriptException[dynamic scripting for [groovy] disabled]...",
   "status":400
}
</code></pre>

<p>エラーメッセージの重要な箇所は「ScriptException[dynamic scripting for [groovy] disabled]」です。</p>

<h2>スクリプティングを使い続けるには？</h2>

<p>Elasticsearchでスクリプトを実行するには3つの方法があります。
2つのダイナミックな方法は、リクエストごとのスクリプト（上述）かインデックスされた
スクリプト(indexed script)を使う方法です。
インデックスされたスクリプトを使うことは、Elasticsearch自身にGroovyスクリプトを保管することで
利用で、それらを要求に応じて利用することです。
（これは、実際には十分機能しますが、これではまだ、信頼できないユーザに対して彼らのスクリプトを実行できます）
RDBのように保存されたプロシージャとして同じ方法で実行させるものと同様です。
前もって、スクリプトを記述しておき、リクエストの一部として後から、名前で呼び出して実行可能です。</p>

<pre><code class="json">GET /_search
{
  "query":{
    "filtered":{
      "filter":{
        "script":{
          "script_id":"your_custom_script",
          "lang":"groovy",
          "params":{
            "shift":3
          }
        }
      }
    }
  }
}
</code></pre>

<p>あまり変わっていないことに気づくでしょう。
<code>script</code>の部分が、前もって記述されたスクリプトの名前<code>script_id</code>に変更されただけです。</p>

<p>Elasticsearchにスクリプトを提供するダイナミックではない方法はインデックスに保存する代わりに、
ディスクにファイルとしてスクリプトを保存することです。
そうすることで、各スクリプトを設定として保存します。
これは、どのようなスクリプト言語に対してもダイナミックスクリプティングをオフにしたまま、
サンドボックス化されないスクリプトを使い続けることができる方法です。</p>

<p>最初のサンプルで、Groovyスクリプトは<code>doc['field1'].value == doc['field2'].value + shift</code>でした。
これを、<code>.groovy</code>拡張子を持ったファイルとして書き出すことができます。</p>

<pre><code>doc['field1'].value == (doc['field2'].value + shift)
</code></pre>

<p>もし、このファイルに<code>your_custom_script.groovy</code>ちう名前をつけて、
Elasticsearchのすべてのデータノードの<code>config/scripts</code>ディレクトリに保存すると、
Elasticsearchは60秒（elasticsearch.ymlの<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-scripting.html#_automatic_script_reloading"><code>watcher.interval</code>で変更可能</a>）でこのスクリプトを認識し、今後のリクエストに利用できるようにプリコンパイルするでしょう。
そのファイルはElasticsearch実行ユーザによって読み込みができる必要があります。
これをディスクに書き込んだ後、あなたの設定ディレクトリは次のようになっています。</p>

<pre><code>config/
  elasticsearch.yml
  logging.yml
  scripts/
    your_custom_script.groovy
</code></pre>

<p>これは、各リクエストやインデックスされたスクリプトをスクリプトとして動的に送信しませんが、
信頼された環境にスクリプトを追加することでダイナミックスクリプトとなることを許します。</p>

<h2>ディスクに書かれたスクリプトを使用する</h2>

<p>スクリプトは、ロードされたスクリプトになるまでは、利用できません。
ログファイルに次のようなログが表示されるまではです。</p>

<pre><code>[2015-02-11 11:14:47,066][INFO ][script                   ] [Sergei Kravinoff] compiling script file [/path/to/elasticsearch-1.4.3/config/scripts/your_custom_script.groovy]
</code></pre>

<p>すべてのElasticsearchのデータノードでスクリプトが読み込まれたら、
それを利用することができます。
利用するために、<code>file</code>（<code>script_id</code>ではありません！）としてスクリプト名を指定します。</p>

<pre><code class="json">GET /_search
{
  "query":{
    "filtered":{
      "filter":{
        "script":{
          "file":"your_custom_script",
          "lang":"groovy",
          "params":{
            "shift":3
          }
        }
      }
    }
  }
}
</code></pre>

<p>Note:<code>lang</code>は必須ではありません。Groovyがデフォルトの言語のためです。
もし、違うスクリプト言語を使いたい、もしくは、デフォルトの言語を（例えば、Lucene Expressionsへ）
変更したい場合、言語が正しいスクリプトを見つけるために提供されている必要があります。
一番良い方法は、アプリケーションが<code>lang</code>パラメータを含んでいることを勧めます。
これは、将来、デフォルトのスクリプト言語が変更されても、問題ないからです。</p>

<h2>質問？</h2>

<p>もし、質問があれば、遠慮なくTwitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)で教えて下さい。
また、問題がありましたら、<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
</feed>
