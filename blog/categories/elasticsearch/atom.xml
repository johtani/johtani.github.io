<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elasticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-08-28T16:37:22+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elasticsearch unplugged - 2.0におけるネットワークの変更(日本語訳)]]></title>
    <link href="http://blog.johtani.info/blog/2015/08/28/elasticsearch-unplugged-ja/"/>
    <updated>2015-08-28T12:01:30+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/08/28/elasticsearch-unplugged-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-unplugged">Elasticsearch unplugged - Networking changes in 2.0</a></p>

<p>Elasticsearchをローカルのマシンで起動します。
そして、昨日試したデータを削除するために<code>DELETE *</code>を実行します。
すると、悲しそうな叫びを同僚が発していることに気づき、なぜそんなことになっているのか不思議に思うでしょう。。。</p>

<!-- more -->


<p>Elasticsearchはいつも、親しみやすいものでした。
複数ノードのクラスタがどのように機能するのかをテストするには、
ローカルのマシンでいくつかのElasticsearchのインスタンスを起動するだけでした。
起動したインスタンスはマルチキャストを利用して自動的にお互いを見つけて、1つのクラスタになり、負荷を共有し始めます。
しかし、これは親しみやすすぎました。
カンファレンスなどで、ローカルのマシンでElasticsearchを起動してみてください。
すると100ノードのクラスタに参加しているのがすぐにわかるでしょう。</p>

<p>もうすぐリリースされる、2.0.0-beta1では、Elasticsearchが通信先を選択するネットワークの機能に関する変更があります。
ただし、これまで通り、簡単に開発者が経験できる機能も残っています。</p>

<h2>localhostへのバインド</h2>

<p>以前、Elasticsearchはデフォルトで、利用可能なネットワークインタフェース全てにバインドしていました。
そこから、一番適したインタフェースを<code>publish_host</code>として選択しようとします。
このアドレスはElasticsearchがクラスタの他のノードとやりとりするためのアドレスです。</p>

<p>Elasticsearch 2.0では、デフォルトでは、<code>localhost</code>にのみバインドします。
<code>127.0.0.1</code>（IPv4）と<code>[::1]</code>（IPv6）の両方にバインドしようとします。
また、どちらかのみの環境でも動作します。
この変更は、特に指定がない限り、Elasticsearchがネットワーク上の他のノードと接続しません。
本番環境に移行する場合は、<code>network.host</code>パラメータを使って設定しましょう。
設定は、<code>elasticsearch.yml</code>に記述するか、コマンドラインで指定します。</p>

<pre><code>bin/elasticsearch --network.host 192.168.1.5
bin/elasticsearch --network.host _non_loopback_
</code></pre>

<p><code>network.host</code>の全てのオプションについては、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-network.html">network settingsのドキュメント</a>をごらんください。</p>

<h2>マルチキャストは廃止</h2>

<p>Elasticsearch 1.xはネットワークの他のノードに接続・探索するためにマルチキャストを使用しました。
マルチキャストは魔法のような挙動です。。。
残念ながら、マルチキャストのサポートは良くも悪くもあります。
Linuxはローカルホストでマルチキャストの待ち受けをしていません。
OS/Xは構成されたアドレスの全てのインタフェースにマルチキャストで配信できます。
また、ネットワークによってはマルチキャストはデフォルトでは使用できなくなっています。</p>

<p>Elasticsearch 2.0は異なるアプローチを採用しました。
マルチキャストを廃止します（ただし、新たにプラグインとして提供します）。
代わりに、ローカルホストでは、Elasticsearchは<code>transport.tcp.port</code>で指定されている範囲（デフォルトは<code>9300-9400</code>）の最初の5ポートに対してユニキャストを使用できるようにします。</p>

<p>これは、開発者のための、設定することなく自動的にクラスタを組むという機能を残しています。
しかし、本番に移行するときは、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-discovery-zen.html#unicast">unicast hosts</a>で次のようにリストを指定する必要があります。</p>

<pre><code>discovery.zen.ping.unicast.hosts: [ 192.168.1.2,  192.168.1.3 ]
</code></pre>

<p>unicast hostsとしてクラスタにあるノードの全てのリストを指定する必要はありません。
少なくとも、マスタノードとして選出されるべきものを指定します。
巨大なクラスタでは、3つの専用のマスタノードを持っており、この3つをunicast hostsとして設定することを推奨しています。</p>

<p>これにより、開発の知識・経験が、私たちの推奨する本番でのネットワーク設定に、より近いものとなります。</p>

<h2>ノード情報の変更</h2>

<p>最後に、<code>inet[/127.0.0.1:9200]</code>といったシンタックスを廃止します。
これは、Elasticsearchが<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-info.html">nodes-info API</a>などで、使用していたIPアドレスのためのシンタックスです。
今は、RFCに準拠した形で表示します。
<code>127.0.0.1:9200</code>（IPv4）や<code>[::1]:9200</code>（IPv6）のようにです。</p>

<p>質問がある場合は、<a href="https://discuss.elastic.co/c/elasticsearch">ElasticsearchのWebフォーラム</a>で質問してください。ベータはもうすぐです！（翻訳した時点で、すでにベータリリースされています。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 2.0.0-beta1リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/08/27/elasticsearch-2-0-0-beta1-released-ja/"/>
    <updated>2015-08-27T10:29:12+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/08/27/elasticsearch-2-0-0-beta1-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-2-0-0-beta1-released">Elasticsearch 2.0.0-beta1 released</a></p>

<p>本日（8/26）、<strong>Lucene 5.2.1</strong>ベースの<strong>Elasticsearch 2.0.0-beta1</strong>をリリースしました。
本リリースは469名のコミッターからの2,500以上ものpull requestを含んでいます。
pull requestのうち、約850が2.0のための新規のものとなります。</p>

<p><strong>注意事項</strong>
本リリースはベータリリースであり、テストを目的としたものとなります。
Elasticsearch 2.0.0-beta1は Elasticsearch 2.0.0 GAと互換性があるかどうかの保証はありません。</p>

<p><strong>本番環境には利用しないでください。</strong></p>

<!-- more -->


<p><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta1">Elasticsearch 2.0.0-beta1のダウンロードおよび、すべての変更についてはリンク</a>をごらんください。</p>

<p>Elasticsearch 2.0.0-beta1には次の新しい変更が含まれています。</p>

<ul>
<li>Pipeline Aggregations：これは、他のaggregationsの結果に対するAggregationを実行できます（導関数、移動平均、Holt Winter予測アルゴリズムなども含む）</li>
<li>ディスクやファイルシステムキャッシュにより適したより良いデータの圧縮</li>
<li>doc-valuesがデフォルトになったこと、マージ実行時のメモリ使用量の低減、フィルターキャッシュのためのroaring bitsetsなどにより、ヒープの使用率がより効率的に。</li>
<li>構造化された例外</li>
<li>最適化されたクエリ実行順序、フィルタの自動キャッシュ、より高速なクエリに書き換えられたparent-child</li>
<li>設定の代わりに、フィードバックループを使用した自動調整</li>
<li>トランザクションログへの書き込みがデフォルトで、アトミックでかつ冗長に</li>
<li>安全で明確で信頼性のあるタイプマッピング</li>
<li>デフォルトでローカルホストでのみクラスタを構成</li>
<li>クラスタ状態の差分によりより高速に変更を伝搬</li>
</ul>


<p>上記の変更以外にも、多くのElasticsearchおよびLuceneに対する継続的な変更が含まれています。
これらは、Elasticsearch 2.0をより安全に、より簡単に、より良いものにしています。
本リリースに関するより詳しい情報が次のブログにあるので、参考にしてください。</p>

<ul>
<li><a href="https://www.elastic.co/blog/elasticsearch-2.0.0.beta1-coming-soon">Elasticsearch 2.0.0.beta1 coming soon!</a></li>
<li><a href="https://www.elastic.co/blog/great-mapping-refactoring">The Great Mapping Refactoring</a></li>
<li><a href="https://www.elastic.co/blog/store-compression-in-lucene-and-elasticsearch">Store compression in Lucene and Elasticsearch</a></li>
<li><a href="https://www.elastic.co/blog/better-query-execution-coming-elasticsearch-2-0">Better query execution coming to Elasticsearch 2.0</a></li>
<li><a href="https://www.elastic.co/blog/out-of-this-world-aggregations">Out of this world aggregations</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-1">Staying in Control with Moving Averages - Part 1</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-2">Staying in Control with Moving Averages - Part 2</a></li>
<li><a href="https://www.elastic.co/blog/core-delete-by-query-is-a-plugin">The Delete by Query API Is now a plugin</a></li>
<li><a href="https://www.elastic.co/blog/elasticsearch-unplugged">Elasticsearch unplugged - Networking changes in 2.0</a></li>
</ul>


<p>また、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/index.html">Elasticsearch 2.0.0-beta1のドキュメント</a>も参考になります。
特に、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/breaking-changes-2.0.html">2.0での重大な変更点について</a>は必ずごらんください。</p>

<h2>Core plugins</h2>

<p>コアプラグインの開発の方法を変更しました。
公式にサポートしているプラグインは、現在<a href="https://github.com/elastic/elasticsearch/tree/master/plugins">elasticsearchのリポジトリ</a>に含まれています。
これにより、コアと一緒にテストされ、Elasticsearchと同じタイミングでリリースされます。
コアプラグインはElasticsearchと同じバージョン番号隣ます。
インストールは次のようになります。</p>

<pre><code>sudo bin/plugin install analysis-icu
</code></pre>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/index.html">プラグインの新しいドキュメント</a>は私たちのWebサイトの<a href="https://www.elastic.co/guide/index.html">Guide</a>にあります。</p>

<h2>Commercial plugins</h2>

<p>私たちの商用プラグインもElasticsearchと同じバージョン番号となり、Elasticsearchと一緒にリリースされます。
ShieldやWatcherはすでに2.0.0-beta1が利用可能です。
インストールのコマンドはは次のようになります。</p>

<pre><code>sudo bin/plugin install license
sudo bin/plugin install shield
sudo bin/plugin install watcher
</code></pre>

<p>MarvelおよびSenseに関する新しい情報もありますが、もう少しお待ちください。</p>

<p>2.0.0-beta1の商用プラグインに関するドキュメントは次のリンクからごらんください。</p>

<ul>
<li><a href="https://www.elastic.co/guide/en/shield/2.0.0-beta1/index.html">Shield 2.0.0-beta1</a></li>
<li><a href="https://www.elastic.co/guide/en/watcher/2.0.0-beta1/index.html">Watcher 2.0.0-beta1</a></li>
</ul>


<h2>Elasticsearch Migration plugin</h2>

<p>Elasticsearch 2.0.0-beta1を試す前に、
既存のインデックスのアップグレードするためになにか行う必要があるかどうかを確認するためのElasticsearch Migration Pluginもリリースしました。
2.0.0では機能しない、問題のあるマッピングなどを見つけるために便利なプラグインです。</p>

<p>このプラグインの利用方法については<a href="http://github.com/elastic/elasticsearch-migration">Elasticsearch Migration repository</a>をごらんください。</p>

<h2>既知の問題</h2>

<p>同じインデックスの異なるタイプに、同じ名前の<code>ip</code>タイプのフィールドを追加した時に、問題があることがわかっています。
この問題は次のリリースでフィックスされます。詳細は<a href="https://github.com/elastic/elasticsearch/issues/13112">#13112</a>をごらんください。</p>

<h2>テストしましょう！</h2>

<p>Elasticsearch 2.0.0 GAをすぐにリリースできるようにより多くのベータテスターをお待ちしています。</p>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta1">Elasticsearch 2.0.0-beta1</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)や<a href="https://discuss.elastic.co/c/elasticsearch">Webフォーラム</a>などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delete by Query APIはプラグインへ（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/08/20/core-delete-by-query-is-a-plugin-ja/"/>
    <updated>2015-08-20T13:24:04+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/08/20/core-delete-by-query-is-a-plugin-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/core-delete-by-query-is-a-plugin">The Delete by Query API Is now a plugin</a></p>

<p>Elasticsearchの2.0.0-beta1では、これまであった <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-delete-by-query.html">Delete by Query API</a>が<a href="https://github.com/elastic/elasticsearch/pull/10859">削除</a>され、
新しく <a href="https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/plugins-delete-by-query.html">Delete by Query plugin</a>に<a href="https://github.com/elastic/elasticsearch/pull/11516">置き換え</a>られています。</p>

<!-- more -->


<p>もし、Delete by Query を利用する場合、2.0にアップグレードしたあとは、プラグインをインストールし、ドキュメントに従ってください。</p>

<pre><code>bin/plugin install delete-by-query
</code></pre>

<h2>なぜプラグインに？</h2>

<p>ElasticsearchのコアなAPIの品質を保つためであり、以前のDelete by Queryの実装は簡単にはフィックスできない大きな問題がありました。</p>

<ul>
<li>各リクエストのあとに、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-refresh.html">refresh</a>を実行します。これは、<a href="https://github.com/elastic/elasticsearch/issues/3593">削除されたデータが想定外に検索に出てこないようにするため</a>です。<br/>
また、<a href="https://github.com/elastic/elasticsearch/issues/6025">セグメントが大量にでき、マージが大量に発生し、ヒープが大量に消費されてインデキシングが劇的にスローダウンし</a>、クラスタの複数のノードがクラッシュしてしまう状況も引き起こしました。</li>
<li>このクエリは、プライマリ、レプリカの両方で実行されるため、ことなるドキュメントを削除し、矛盾したレプリカ（データの破損）を引き起こしました。</li>
<li>アップグレードが不安定になります。これは、Delete by Queryリクエストがトランザクションログの中にクエリとして残るためです。そのため、アップグレードのあとに正確にパースされなかったり正確に実行されないかもしれません。例えば、インデックスエイリアスに対するリクエストで、それが削除された後の場合に<a href="https://github.com/elastic/elasticsearch/issues/10262">このようなバグ</a>が発生します。</li>
</ul>


<p>対照的に、<a href="https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/plugins-delete-by-query.html">新しいプラグイン</a>は、安全な実装です。
<a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/scan-scroll.html">scanとscrollリクエスト</a>でクエリにマッチしたIDを見つけ、そのIDを使って、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">bulk indexing API</a>で削除します。</p>

<p>この実装は、遅い必要があります。特に、クエリが多くのドキュメントを削除する場合です。
もし、多くのドキュメントをこのAPIを利用して削除する場合、アプリケーションをテストしてください。
そして、<a href="https://www.elastic.co/blog/lucenes-handling-of-deleted-documents">代わりにインデックス全体を消す</a>ようなアプローチに切り替えることができないか検討してください。</p>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/delete-by-query-plugin-reason.html">Delete by Query pluginのドキュメント</a>に、新しい実装についての違いなどのより詳しい説明があります。</p>

<h2>Elasticsearch coreを最小限に</h2>

<p>プラグインに切り替えることは、簡単な決断ではありませんでした。
多くのユーザは問題なく、Delete by Queryを利用していました。
しかし、危険が常にそこにあり、些細とは言い切れない数のユーザが上記のような深刻な問題に遭遇していました。</p>

<p>さらに、Elsticsearchのコアは信頼できるものでなければなりません。
他のコアAPIを利用して実装できる機能は、コアに含みません。特に、それがバグを含んでいる場合。
コアのすべての機能は強固であるべきで、Delete by Queryは人気があり、高性能ですが、そうではありませんでした。</p>

<p>必要に応じて、このような難しいトレードオフの末、信頼性と品質を選びます。</p>

<h2>マッピングの削除の廃止</h2>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-delete-mapping.html">タイプのマッピングを削除する機能</a>も2.0で<a href="https://github.com/elastic/elasticsearch/issues/8877">廃止</a>されます。
これは、同じフィールド名を、異なるフィールドのタイプで再利用した場合に、インデックスの破損を引き起こす可能性があるためです。</p>

<p>しかし、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-all-query.html">Match All Query</a>で、Delete by Queryプラグインに対してタイプを指定することで、タイプのすべてのドキュメントを削除することはできます。
または、1つのインデックスに異なるタイプを複数含める代わりに、個別のインデックスに分割するようなアプローチに変更することを検討してください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第11回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/07/31/11th-elasticsearch-jp/"/>
    <updated>2015-07-31T14:41:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/07/31/11th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="https://elasticsearch.doorkeeper.jp/events/28321">第11回Elasticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、会場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、そして、Shayありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<p>今回は、CTOのShayが来日していたので、英語でいろいろと喋ってもらいました。
4月同様、<a href="http://samuraism.com">サムライズム</a>の<a href="https://twitter.com/yusuke">@yusuke</a>さんに
テキスト翻訳していただき、大変助かりました。
今回はQAベースのトークだったのでちょっときつかったですね、申し訳ない。。。</p>

<!-- more -->


<h3>チェックイン数など</h3>

<ul>
<li>チェックインした人：141名</li>
<li>キャンセルしなかった人：51名</li>
</ul>


<p>でした。
今回はあらかじめ220名（全員が来たらキャパオーバー）としていたので、キャンセル待ちの人は
当日の午後にはいなくなっていた状態です。まぁ、こんなもんかな。結構入りましたね。ありがたいです。</p>

<h2>LT</h2>

<p>今回は、少し趣向を変えて、4社の方達にLTをしていただきました。
Shayが来日しているのもあり、事前に英語でスライドを作っていただけると助かりますとお願いさせていただきました。
英語でスライドを作っていただいていたので、伝わりやすくて助かりました、スピーカーの方々ありがとうございました！<br/>
（海外のユーザにもリンクを紹介しやすいので、英語でスライド作ってもらえるといろいろと知ってもらえるのかも。）</p>

<h3>Elasticsearch and Recruit Technologies Co., Ltd. / 株式会社リクルートテクノロジーズ　守谷 純之介さん</h3>

<p>スライド：未定</p>

<p>N-Gramと形態素のハイブリッドの話などをしていただきました。
@ITで連載もされてますね。ありがとうございます。</p>

<ul>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1507/08/news009.html">リクルート全社検索基盤のアーキテクチャ、採用技術、開発体制はどうなっているのか (&frac12;)</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1507/29/news010.html">ElasticsearchとKuromojiを使った形態素解析とN-Gramによる検索の適合率と再現率の向上 (1/3)</a></li>
</ul>


<p>Shayからは、<a href="https://www.elastic.co/products/hadoop">elasticsearch-hadoop</a>があるから検討してねと質問（お願い？）がありましたw。</p>

<h3>Elasticsearch as a DMP / 株式会社インティメート・マージャー　松田和樹さん　@mats116</h3>

<p>スライド：<a href="http://www.slideshare.net/im_docs/elasticsearch-as-a-dmp">Elasticsearch as a DMP</a></p>

<p>いくつかのデータソースからAEROSPIKE経由でelasticsearchにデータを登録しているようです。
Data Management Platformのエンジンの一部として、elasticsearchを利用しているようです。</p>

<p>Shayからの質問：「どの機能を使って関心のある単語を抽出していますか？」<br/>
回答：「<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-significantterms-aggregation.html">Significant Term Aggregation</a>」です。<br/>
Shay：「おぉ、チェックしてみますw」。</p>

<h3>Real-time social big data analytics using elasticsearch / 株式会社ホットリンク宮田洋毅さん　@kakka_jp</h3>

<p>スライド：未定</p>

<p>ソーシャルメディアのデータを解析するのにelasticsearchにデータを入れて解析。
時間軸での解析やテキストマイニングなんかをしているみたいでした。
いろいろと独自のプラグインを作ってるようです。（興味あるなぁ）</p>

<p>Shayからの質問：「ノード数は？」「30ノードで30シャード」</p>

<h3>Elasticsearch in Hatena Bookmark / 株式会社はてな　id:skozawa</h3>

<p>スライド：<a href="http://www.slideshare.net/shunsukekozawa5/elasticsearch-in-hatena-bookmark">Elasticsearch in Hatena Bookmark</a></p>

<ul>
<li>はてなブックマークの検索の歴史（MySQL -> Sedue -> Solr -> Elasticsearch）</li>
<li>はてなブックマークの検索（ユーザが利用）と社内利用と、ログ解析で利用してる</li>
</ul>


<p>Shayからの質問：「昨年会いましたよね？今はクラスタのサイズはどのくらいのサイズですか？」「メインクラスタは9データノード」</p>

<h2>Open QA with Shay</h2>

<p>思い出せるものだけ。。。（あとで追記します）</p>

<ul>
<li>Elasticsearch 2.0の話

<ul>
<li><a href="https://www.elastic.co/blog/out-of-this-world-aggregations">Pipeline Aggregation</a>とか。</li>
</ul>
</li>
<li>Spark Streaming対応してる？

<ul>
<li>まだ検討中</li>
</ul>
</li>
<li>elasticsearch-hadoopってどんなもの？HDFSにインデックス作ったりするの？

<ul>
<li>いえ、Hadoopの入出力先としてelasticsearchが使える感じ</li>
</ul>
</li>
<li>個人的にAWSのCloudSearchとAWSでElasticsearchはどっちがいい？

<ul>
<li>時系列データはCloudSearchだと難しいだろうし、AWS上なら<a href="http://found.no">found.no</a>があるよ！</li>
</ul>
</li>
<li>PostgreSQLみたいに信頼性の高いデータストアを目指してる（まだ、プライマリデータストアには使わないで）</li>
</ul>


<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://tech.im-dmp.net/archives/4941">Elasticsearch勉強会でLTしてきました | Intimate Merger Engineer Blog </a></li>
<li><a href="http://togetter.com/li/853331">『第11回elasticsearch勉強会』のまとめ #elasticsearchjp</a></li>
<li><a href="http://suzuki.tdiary.net/20150728.html#p01">[Elasticsearch] 第11回 Elasticsearch 勉強会へ参加してきた - 雑文発散(2015-07-28)</a></li>
<li><a href="http://kakakakakku.hatenablog.com/entry/2015/07/27/224203">第11回 Elasticsearch 勉強会に参加したら英語力に危機感を覚えて最高だった</a></li>
</ul>


<h3>まとめ</h3>

<p>今回はShayが来日したので特別バージョンでした。
もっと英語を翻訳するサポートしないとですね、反省してます。。。ぜんぜん流暢じゃないしw</p>

<p>次回は9月に開催予定ですが、12月にまたShayが再度来日する予定です。
丸1日のイベントを検討中で、Shay以外にも開発者が来日すると思います。
どんな話が聞きたい、どんな人と話をしたいなどあれば、コメントいただければ（対応できるかは。。。）</p>

<p>勉強会のスピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。 よろしくお願いいたします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.7.1 および 1.6.2リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/07/29/elasticsearch-1-7-1-and-1-6-2-released-ja/"/>
    <updated>2015-07-29T21:35:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/07/29/elasticsearch-1-7-1-and-1-6-2-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-1-7-1-and-1-6-2-released">Elasticsearch 1.7.1 and 1.6.2 released</a></p>

<p>本日（7/29）、<strong>Lucene 4.10.4</strong>ベースの<strong>Elasticsearch 1.7.1</strong>および<strong>Elasticsearch 1.6.2</strong> のバグフィックス版をリリースしました。
これらのリリースは稀ですが、データの欠損が発生する重要なバグのフィックスを含んでいます。
<strong>すべてのユーザにアップグレードを推奨します。</strong></p>

<p>ダウンロードおよびすべての変更については次のリンクをごらんください。</p>

<ul>
<li>最新安定版：<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-7-1">Elasticsearch 1.7.1</a></li>
<li>1.6系バグフィックス：<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-6-2">Elasticsearch 1.6.2</a></li>
</ul>


<!-- more -->


<p>問題のバグ(<a href="https://github.com/elastic/elasticsearch/pull/12487">#12487</a>)は、
同時に複数のノードが故障またはリスタートをした場合の非常にまれな状況で、
シャードのすべてのコピーがクラスタから削除されてしまう状況を発生させます。
このバグは1.5.0から含まれています。</p>

<p>このリリースはまた、IPv4アドレスのCIDRマスクのバグのフィックス、
Shieldユーザがmore-like-this APIを利用できないバグのフィックスなど、
いくつかの変更も含んでいます（詳細は<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-7-1">更新リスト</a>をごらんください）。</p>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-1-7-1">Elasticsearch 1.7.1</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
</feed>
