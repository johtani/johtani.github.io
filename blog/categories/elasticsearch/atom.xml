<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elasticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-02-27T17:06:30+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[セキュリティ向けプラグインShieldのリリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/27/you-know-for-security-shield-goes-ga-ja/"/>
    <updated>2015-02-27T18:49:56+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/27/you-know-for-security-shield-goes-ga-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/you-know-for-security-shield-goes-ga/">you know, for security: shield goes ga</a></p>

<p>1/27にShield 1.0 をリリースしました。
Elasticsearch向けの私たちのセキュリティプラグインの最初のリリースです。
11月にShieldについてアナウンスしてから、Elsaticsearchのためのセキュリティの機能は、
一般的に望まれているものから始まり、具体的な考えと実行できる計画へと変遷し、それが、いま現実となりました。</p>

<p>十分にセキュアな環境に、Elasticsearchクラスタをセキュアな状態でデプロイできるようにするため、
私たちは継続的にカスタマーやユーザーからのリクエストを受け取り、統合されたソリューションになるようにしてきました。</p>

<p>私たちは、そのようなプロダクトがどうあるべきか調査することから始め、
カスタマーとユーザが必要とするセキュリティとはどんなものかを理解するために多くの時間を費やしました。
その結果がShieldです。
Shieldは、ElasticsearchクラスタをセキュアにするElasticsearchの有償プラグインです。
私たちは、ShieldをDev、Gold、Platinumサブスクリプションの一部として、追加料金なしで提供します。</p>

<p>最初のリリースでは、基本的な機能と基盤にフォーカスしています。
Elasticsearch自身に対しても、セキュリティに対して準備してきました。
拡張性の側面だけでなく、Elasticsearchにあるデータフローについても再考してきました。
Elasticsearchクラスタをセキュアにする場合に、具体的な価値を即座に届けるだけでなく、素早く拡張できるようにも開発しました。</p>

<!-- more -->


<h3>機能</h3>

<p>Shield 1.0は次の5つにフォーカスしています。</p>

<ul>
<li>認証(Authentication)</li>
<li>認可(Authorization)</li>
<li>暗号化通信とノードの認可(Encrypted Communication &amp; Node Authentication)</li>
<li>IPフィルタリング</li>
<li>監査証跡(Audit Trail)</li>
</ul>


<h3>認証(Authentication)</h3>

<p>セキュリティの大部分はアイデンティティについてです（例えば、だれがこのAPIを呼び出したのか？システムに何のサービスが接続するか？など）
サービスのライフタイムのある時点で、サブジェクト（例えばユーザー）を現在実行中のサブプロセスなどに結びつけることです。
この関係性を持つためには、サブプロセスを実行する前にユーザの身元を確認するように命じます。
ユーザの身元の確認のプロセスをAuthenticationと呼び、ElasticsearchのすべてのAPIコールでそれが実行されます。</p>

<p>認証の手法は多くの異なるものがあります。
それぞれの手法は、ユーザが認証されたという資格（Authentication Token）を、それぞれのタイプで提供するようにユーザに要求します。
Shield 1.0ではシンプルに、必要なauthentication tokenをユーザ/パスワードペアとしています。
（これは、Shieldの認証基盤が簡単に拡張でき、将来は異なるauthentication tokenもサポートできることを意味します。）</p>

<p>ユーザの資格を受け取ることだけでは不十分で、次に、それらをチェックする必要があります。
Shieldでは、これはレルムの責務です。
レルムは認証プロバイダ/サービスとしてみることができます。
妥当なユーザであると判断/解決されたか、
authentication tokenが適切な資格を持っていない/単に知らないユーザであるということで、拒否されたかです。
Shieldの認証メカニズムでは、複数のレルムを設定でき、さらに、あるレルムの戻り値を扱う他のレルム、というようなchainとすることもできます。
Shield 1.0は3つのレルムをサポートします。</p>

<ul>
<li>esusers - Elasticsearchによって管理されるファイルベースのレルムです。
これは、ファイルにユーザを定義することができます。（Apacheサーバのhtpasswdファイルのようなもの）
このレルムは外部への依存はなく、Shieldをインストールすれば、デフォルトで使用できます。
このレルムは配置が簡単で、マルチテナントなElasticsearchクラスタに対して使用できます。
マルチテナントなElasticsearchクラスタとは、クラスタを複数のアプリでシェアすることをテナントと言います。
また、すべてのユーザがパスワードを忘れてしまうような&#8221;emergency&#8221;な代替レルムも対応可能です。
(誰もシステムに入れないような状況のことです)</li>
<li>LDAP - 外部のLDAPサーバでユーザを認証するレルムです。
このレルムは組織のLDAPサーバで管理/保存されているユーザをすでに持っている組織を対象としています。</li>
<li>Active Directory - LDAPのタイプの1つで、Active Directoryに対する設定になります。</li>
</ul>


<p>レルムはelasticsearch.yml設定ファイルで、次のように設定可能です。</p>

<blockquote><p>shield.authc
    realms:</p>

<pre><code>    esuser:
        type: esusers
        order: 0

    ldap:
        type: ldap
        order: 1
        url: ldaps://url/to/ldap1/server

    ldap_fallback:
        type: ldap
        order: 2
        url: ldaps://url/to/ldap2/server
</code></pre></blockquote>

<p>上記のようにrealmsが一つのチェインとして参照されます。
レルムごとに、設定された順序で、それらは参照されます。</p>

<p>NOTE : Shieldには、esusersファイルに保存されたユーザを管理するためのコマンドラインツールもあります。</p>

<h2>認可(authorization)</h2>

<p>認可(Authorization)は保護されたリソースにアクセスするユーザを許可するか拒否するかということです。
モダンなシステムは、ユーザのパーミッションのために、ロールベースのアクセスコントロール（RBAC）モデルを利用します。
このモデルでは、各ユーザはロールの集合に関連していて、それぞれのロールには、パーミッションの集合が定義されています。
これは、洗練された設定で、パーミッションを機能的なグループで共有させることができます。
例えば、次のようなロールを定義したとします。</p>

<ul>
<li><em>employee</em> - すべての従業員は部門をまたいだ会社のデータへアクセスできます（例えば、コンタクトやディレクトリ情報など）</li>
<li><em>sales</em> - すべての営業職は営業データにアクセスできる（例えば、流通ルート、ルート、顧客）</li>
<li><em>finace</em> - すべての財務の従業員は財務データにアクセスできる（例えば、予算、経費、伝票）</li>
</ul>


<p>財務部門の<code>Ann</code>は従業員と財務のロールを持っており、会社のディレクトリと財務データにアクセスでできます。</p>

<p>認可プロセスはユーザがリクエストに関連したユーザが必要で、このプロセスのために、認証フェーズの後に直接実行されます。</p>

<p>Shieldは2つのタイプのリソースを定義します。クラスタとインデックスです。
これらは、すべてのAPIコールで保護されます。
さらに、それらに関連したパーミッションとロールも定義できます。
一度定義をすると、ロールはユーザもしくはLDAP/ADのグループに関係します。
ロールは<strong>roles.yml</strong>設定ファイルで定義されます。
設定のサンプルは次のようになります。</p>

<pre><code>admin:
    cluster: all
    indices:
        '*' : all

monitor:
    cluster: monitor
    indices:
        '*': monitor

employee:
    indices:
        'company_directory' : read

sales:
    indices:
        'opportunities' : read, write
        'accounts' : read, write

finance:
    indices:
        'expenses' : read, write
        'purchases' : read, write
</code></pre>

<p>上記のサンプルで、次の5つのロールを定義しています。</p>

<ul>
<li><em>admin</em> - 管理者のロールで、すべてのクラスターレベルの操作とすべてのインデックスに対してすべてのインデックスレベルの操作を実行可能です。
(¥*インデックスはすべてのインデックスにマッチするワイルドカード)</li>
<li><em>monitor</em> - システム/クラスタのモニタリングのためのロール。このロールのユーザはすべてのクラスタとインデックスレベルの情報の読み取りの
APIにアクセス可能だが、インデックスのデータへの読み書きや設定の更新は不能</li>
<li><em>employee</em> - compnay_directoryにあるすべてのデータへの読み取りアクセスを与えられたロール。このロールはクラスタレベルへのアクセスやデータの書き込みアクセスは持っていない
(特にcompany。洗濯されたグループの人々はcompanyディレクトリの更新は可能だが、employeeは読み取りのみが可能)</li>
<li><em>sales</em> - opportunitiesとaccountsインデックスの読み書きができるロール</li>
<li><em>finance</em> - expensesとpurchasesの両方に読み書きができるロール</li>
</ul>


<p>上記のサンプルで定義されている<code>all</code>と<code>read</code>と<code>write</code>として名前がつけられた権限です。
これらは、予約語で、Elasticsearchのローレベルのアクションを複数含んだ権限です。
（<code>write</code>は<code>index, delete, delete_by_query, bulk, update</code>の操作を含んでいます。）
多くのケースで、これらのハイレベルの名前が付けられた権限で十分ですが、特定のロールに特定のアクションを明示的に指定することもできます。
次のようになります。</p>

<pre><code>hr:
    indices:
        'company_directory' : indices:data/write/index, indices:data/write/update
</code></pre>

<p>ここまで説明した認可のレルムは、各ユーザに関連するロールを識別するためのものです。
内部のesuserレルムでは、提供されるesuserコマンドラインツールを使ってロールはユーザに割り当てたり変更したりもできます。
LDAPやActive Directoryでは、LDAP/ADグループにShieldのロールを割り当てることができます。</p>

<p>認証と認可の両方を用いることで、ユーザリクエストに対して、ユーザごとに許可/不許可をすることができます。</p>

<h3>暗号化通信</h3>

<p>認可はElasticsearchのデータを機能的な観点（許可されたユーザだけが操作を可能にする）で保護しますが、
クライアントからElasticsearchクラスタへ、もしくはクラスタのノード間では暗号化されていないデータを送るためまだ危険があります。
第三者が登頂したり、オンザフライでデータを書き換えたりといった可能性やクラスタを壊すことができます。</p>

<p>Shield 1.0はElasticsearchのすべての通信チャネルをセキュアにすることができます。
クラスタ内のノード間のチャネルやクライアントに公開されているチャネルです。
これは、SSL/TLS通信を導入して実現します。</p>

<p>Shieldで使えるSSLはElasticsearchのtransportサービスをSSL/TLSで通信できるものに置き換えます。
これは、ノード間通信チャネルと、HTTP transport（REST APIを提供するもの）のそれぞれに設定可能です。</p>

<p>ShieldのSSL/TLSは、スタンダードなJavaのものとkeystoreとtruststoreを基本にしたものが利用可能です。
SSL/TLSを設定すると、各ノードのキーストアに証明書をインポートする必要があります。
CAがサインした証明書を使うことも、CAが信頼したものとして許可許諾されたものを使うことが可能です。
これは、信頼されたすべてのCAとして知られているtrust storeが必要です。
新しいノードをクラスタに追加するときに、すべての必要な少なくとも一つの信頼されたCAから発行されてサインされたものが必要になります。
クラスタで個別のノードがすべてのkeystore/truststoreを更新する必要性なしに。？？</p>

<p>通信チャネルを安全にする方法やSSL/TLS設定をどのように行うかは<a href="http://www.elasticsearch.org/guide/en/shield/current/securing-nodes.html">Shieldのドキュメント</a>をご覧ください。</p>

<h3>ノード間認証</h3>

<p>強く推奨しますが、許可されたノードだけがクラスタに接続できるようにするために、ノードの認証をSSL transportに設定することができます。
これは、<code>shield.transport.client.auth</code>に<code>true</code>を設定することで可能です。
設定した場合、ノード間でSSLハンドシェイクが行われ、接続されたノードが接続に来たノードのクライアント認証を要求しチェックします。
もし、チェックに失敗した場合は、SSLシェイクハンドが失敗し接続が拒否されます。</p>

<h3>SSLクライアント認証</h3>

<p>transportレベルでノード認証が必要なようなら、次のような疑問がわくでしょう。
Elasticsearchはクラスタに接続するTransportクライアントを使うときはどのように振る舞うのか？
Transportクライアントはクラスタの他のノードと同じチャネルを使うため、コネクションを確立するときに、ノードが他のノードと異なるかどうかを見極めることはできません。</p>

<p>この時、もっとも単純な解決は、Transportクライアントも同様に許可を与えることです。
それは、認証を解決するときに、他の問題（潜在的な悪意）を引き起こします。
Transportクライアントが他のクラスタのノードを偽装しようとすることです。これは望んでいません。</p>

<p>幸いなことに、良い解決方法があります。
トランスポートプロファイルです。
Elasticsearch 1.4で導入されたトランスポートプロファイルは、トランスポートレイヤー（異なるホスト/ポートにバインドされる）のために複数のネットワークチャネルを設定することができます。
Shieldはこのサポートを、プロファイルごとに異なるSSL設定をできるように拡張します。
また、ノードのタイプとクライアントプロファイルタイプの間に明確な違いを設定することも可能です。
これを用いると、2つのプロファイルを設定できるようになります。
ひとつは、クライアントのためのもので、もうひとつはクラスタのノードのためのものです。
これにより、クライアントのための認証の問題が必要なくなり、Shieldはクライアントプロファイルをもった限定されたクライアントからのリクエストを保証します。</p>

<h3>IPフィルタリング</h3>

<p>これは、厳密には、認証カテゴリではありませんが関係しています。
Shieldはそれ自身がIPフィルタリングのメカニズムを持っています。
これは、許可/不許可のIPのリストを設定することができます。
これらのフィルタリングのルールは複数のレベルで設定可能です。
transportチャネル、transportプロファイルレベル、そして、HTTPチャネルです。
次の設定は、それらの設定のサンプルです。（設定ファイルはelasticsearch.ymlになります）</p>

<pre><code>shield:

    transport.filter:
        allow:
            - '127.0.0.1'
            - '2001:0db8:1234:0000:0000:8a2e:0370:73
        deny:
            - '10.0.0.0/8'
            - '2001:0db8:1234::/48'
            - '*.google.com'

    http.filter:
        allow: [ '10.0.0.0/8' ]
        deny: [ '127.0.0.1' ]

transport.profiles:
    client:
        shield.filter.deny: [ '_all' ]
</code></pre>

<p>このように、IPv4とIPv6、CIDR、ホスト名、ワイルドカードが利用できます。
また、この機能はホストOSのIPテーブルに設定することで追加できるが、Shieldにそれを保持し、それらの設定を単純化し、
デプロイの全体から除去できることにも注意してください（詳細は<a href="http://www.elasticsearch.org/guide/en/shield/current/ip-filtering.html">ドキュメントのIPフィルタリングをご覧ください</a>）。</p>

<h3>監査証跡（Audit Trail）</h3>

<p>セキュアなシステムの必須機能の一つで、監査硝石により、Elasticsearchに発生した重要なイベントをトラッキングすることが可能です。
これらのイベントを保存することは、Elasticsearchクラスタの重要なアクティビティの証拠を提供でき、
不審な/悪意のある可能性のあるイベントを追跡するときの診断ツールにもなります。</p>

<p>Shield 1.0.0で、監査証跡は監査/アクセスlogを一般的なElasticsearchのログとは個別に保存します。
それらは、構造化されているため、読んだりパースするのが容易で、イベントのタイプも分類されています。
また、情報のレベルを設定することができ、各イベントをlogレベルの設定で書き出すことができます。
以下が、イベントのリストです。</p>

<ul>
<li><em>anonymous_access_denied</em> - 認証トークンがないユーザからのリクエストがあった時のログ</li>
<li><em>authentication_failed</em> - リクエストされたユーザの認証に失敗した時のログ</li>
<li><em>access_denied</em> - 認証されたユーザが許可されていない操作を実行した時のログ</li>
<li><em>access_granted</em> - 認証されたユーザが許可された操作を実行した時のログ</li>
<li><em>tampered_request</em> - 不正に書き換えられたリクエストが到着したのを検知した時のログ</li>
<li><em>connection_granted</em> - ノードもしくはtransportクライアントがIPフィルタのルールにパスした時のログ</li>
<li><em>connection_denied</em> - ノードもしくはtransportクライアントがIPフィルタリングルールの制限により却下された時のログ</li>
</ul>


<p>Shieldの監査証跡についてより詳しく知りたい方は、<a href="http://www.elasticsearch.org/guide/en/shield/current/auditing.html">ドキュメント</a>をごらんください。</p>

<h3>次のバージョンでは？</h3>

<p>ここまで紹介したように、これはまだ始まりにすぎません。
Shieldに追加される多くの機能があり、しっかりとした基盤を構築したところです。
Shieldの次のバージョンでは、以下の機能の追加にフォーカスするでしょう。（これらだけに限ったわけではありません。）</p>

<ul>
<li>APIによる設定、管理</li>
<li>より拡張され、柔軟なLDAP/Active Directoryサポート</li>
<li>レルムタイプの追加（kerberos、anonymous、certificatesなどなど）</li>
<li>セッションベースの認証</li>
</ul>


<p>ShieldはElasticsearch社の2番目の（<a href="http://www.elasticsearch.com/products/marvel?_ga=1.40546982.567962035.1389706748">Marvel</a>に続く）商用プロダクトです。
ダウンロードして開発環境で評価してください。
インストールは他のプラグインと同様の方法です（インストール方法についての詳細は<a href="http://www.elasticsearch.org/guide/en/shield/current/index.html">こちら</a>）。
一度インストールすると、30日の試用ライセンスが始まります。
もし、さらに時間が必要な場合は、sales@elasticsearch.comまで連絡してください。</p>

<p>私たちのすべてのプロダクトについてフィードバックをお待ちしています。
Shieldの商用利用、機能、ロードマップ、その他のセキュリティに関するトピックなど、質問がありましたら、
<a href="http://www.elasticsearch.com/contact/?_ga=1.32250170.567962035.1389706748">サイトからご連絡ください</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kibana 4（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja/"/>
    <updated>2015-02-20T14:05:52+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/kibana-4-literally-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/kibana-4-literally/">kibana 4. literally.</a></p>

<p>Kibana 4は現在、文字通り、抽象的に、概念的に、精神的に、そしてとても楽しく、プロダクションレディになりました。
1週間前に準備はできていましたが、満足できるものであるという確信を得たいと思っていました。
そして、Kibana 4.0.0 GAをリリースしました。
次のものはサンプルのスクリーンショットと前日譚です。
これらに興奮してしまった方のために、2ステップのプランを用意しました。</p>

<ol>
<li>ダウンロードする：<a href="http://www.elasticsearch.org/overview/kibana/installation/">Kibana 4 downloads</a>ページからダウンロードします。</li>
<li>理解する：<a href="http://www.elasticsearch.org/guide/en/kibana/current/index.html">Kibana 4 docs</a>ページを読んで理解します。</li>
</ol>


<p>Tip : もし、まだ、あなたのクラスタが<a href="http://www.elasticsearch.org/downloads/1-4-4/">Elasticsearch 1.4.4</a>でない場合は、アップグレードする必要があります。<br/>
Tip2 : Kibana 4 RC1からアップグレードする場合は、configを移行する必要があります。<a href="https://gist.github.com/spalger/8daf6c2b7f2954639e38">こちらのgistを参照</a></p>

<!-- more -->


<h2>前日譚 - the back story</h2>

<p>Kibanaはすでに問題解決のためのツールになっています。
なぜ、毎晩2時に呼び出されるんでしょう？
そのコードがプロダクションに入ったのはいつですか？
その結果、何を壊しました？
私たちはそれらを解決しました。
世界的に、長い間、だれも夜中の2時に呼び出されませんでした。知ってます？。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.25.15-PM-1024x692.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.25.15-PM-1024x692.png</a>&#8221;></p>

<p><em>しかし、ここには落とし穴があります。</em>答えが簡単になれば、問題が難しくなります。
楽な勝利は簡単でした。では、難しい問題（深さが3層の問題）を解きましょう。
複数の要素、複数のフィールドそして、複数のデータソースを分析する必要がある問題を解きましょう。
Kibana 4は少ない時間と労力で最も難しい問題を解決してくれます。</p>

<p>Kibana 3で学んだことをKibana 4に取り込みました。
なぜ10億のデータを持っているのに、地図には1000個しかプロットできないのでしょう？
1つのチャートに1つのフィールドなんでしょう？
なぜ、1つのパネルに1つのチャートなんでしょう？
なぜ、1つのダッシュボードに1つのインデックスなんでしょう？
5つのシナリオを用意し、2つのフィールドにまたがったデータを比較し、
1つのダッシュボードに3つのインデックスのデータを表示してみましょう。
さぁ、やりましょう。終わったらアイスクリーム（トッピング付きの）を取りに行きましょう。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.24.14-PM-1024x624.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.24.14-PM-1024x624.png</a>&#8221;></p>

<h2>the plot</h2>

<p>アイスクリームのように、問題には多くの種類があります。
そのために、Kibanaをナポリ風アイスクリーム（3色アイス）のように分割しました。
嫌いな種類は除いて。
もし、あなたがKibanaのユーザ歴が長い場合、最初のタブの<em>Discover</em>がホームであることが正しく感じるでしょう。
これにより、短時間で、検索し、レコードを見つけ、簡単な問題を解決できます。
簡単な問題とは、すべてを物語る1行のデータを見つけることによって解決する問題です。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.55.18-PM1-1024x573.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-1.55.18-PM1-1024x573.png</a>&#8221;></p>

<p>物事が簡単な検索で説明できるものよりも複雑になった時、チャートとグラフで魔法を作る時間です。
<em>Visualize</em>タブを開き、Elasticsearchのaggregationの力を利用してデータを解析しましょう。
<em>Visualize</em>は複数の次元の性質のデータを見せ、今まで尋ねたことがないような質問に対して素早く回答するチャートやテーブル、
地図を作成できます。
あなたが最初に尋ねる質問は「先週サイトが遅かったのはなぜ？」でした。
しかし、データによって明らかにされた質問は「なぜ、クリスマスに東京からの平均ファイルサイズリクエストがスパイクしたのか？」です。</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-18-at-11.13.37-AM-1024x617.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-18-at-11.13.37-AM-1024x617.png</a>&#8221;></p>

<p>最後に、<em>Dashboard</em>でこれらを1つにします。</p>

<p>大きなスクリーンに配置して、こう言います。
「あなたの答えはこのリンクにあります。また、Wikiに埋め込んで、データをCSVにエクスポートしてメールしました。
アイスクリームを食べた後に、自叙伝の第1章を書きました。もっとアイスを持ってきてください。かき混ぜますから。」</p>

<p><img class="<a" src="href="http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-3.30.30-PM-1024x715.png">http://www.elasticsearch.org/content/uploads/2015/02/Screen-Shot-2015-02-17-at-3.30.30-PM-1024x715.png</a>&#8221;></p>

<p>それぞれのタブで見てきた詳細については、<a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1 : Released</a>をごらんください。</p>

<h2>to be continued&hellip;</h2>

<p>居眠りをする時間はあります？いいえ、Kibana 4.1についてすでに作業中で、将来の大きなプランを持っています。
多くの労力はKibana 4の土台の安定と実用性を構築することに使われました。
また、Elasticsearchアプリケーションの将来を構築するプラットフォームを作りました。
すべてのものは拡張できるように設計されています。
例えば、可視化はより良くなるように構築されています。
オープンソースは私たちのGitHubアカウント以上のものです。
それは、新しく素晴らしいものを誰もが作ることができる構造を作ることが私たちの約束です。</p>

<p>Kibanaでグラフなどを構築したり、Elasticsearchを利用したアプリケーションを作成するために、
私たち開発者のブログを参考にしてください。
ちょっと見てみたいですか？
Elastic{ON}15のSpencer Algerのトークをチェックしてください。</p>

<p>あなた方なしでは、私たちはここにはいないですし、あなた方の助けがなければ何もできません。
ぜひ、GitHubでのissueや提案、貢献をお待ちしています。
もしくは、IRCでFreenodeの#kibanaに参加してください。</p>

<h2>extra credit</h2>

<p>Kibana 4のすべての話に興味がありますか？私たちのKibana 4ベータに関する過去のブログをチェックしてください。</p>

<ul>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-1-released/">Kibana 4 Beta 1: Released</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-2-get-now/">Kibana 4 Beta 2: Get it now</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-beta-3-now-more-filtery/">Kibana 4 Beta 3: Now more filtery</a></li>
<li><a href="http://www.elasticsearch.org/blog/kibana-4-rc1-is-now-available/">Kibana 4 RC1: Freshly baked</a></li>
</ul>


<p>最後に、Kibanaの利用に関する話をお持ちなら、ぜひ聞かせてください。
stories at elasticsearch dot comもしくは<a href="http://www.twitter.com/elasticsearch">@elasticsearch</a>に連絡をください。
あなたの話を世界にどのようにシェアしているかごらんください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 1.4.4および1.3.9リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja/"/>
    <updated>2015-02-20T14:05:34+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/20/elasticsearch-1-4-4-and-1-3-9-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-4-and-1-3-9-released/">elasticsearch 1.4.4 and 1.3.9 released</a></p>

<p>本日（2/20）、<strong>Elasticsearch 1.4.4</strong>と<strong>Elasticsearch 1.3.9</strong>をリリースしました。
これはバグフィックスリリースとなります。
主に、Lucene expression scriptsを使う場合のRPMとDEBパッケージの
パッケージング問題のフィックスをしたものです。
<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のダウンロードこちらのリンク</a>からアクセスできます。</p>

<!-- more -->


<h2>fixes</h2>

<p>1.4.3のRPMおよびDEBパッケージにはAntlrとASMの<a href="https://github.com/elasticsearch/elasticsearch/pull/9696">依存関係の不足</a>がありました。
この依存はElasticsearchでLucene expression scriptsを利用する場合に必要になります。
Groovyに関する<a href="http://www.elasticsearch.org/blog/elasticsearch-1-4-3-and-1-3-8-released/">1.4.3の変更</a>により、多くのユーザがLucene explression scriptsを利用することが予想されるため、すぐに、1.4.4をリリースしました。</p>

<p>また、このリリースには、クラスタの保留タスクに関するいくつかのバグフィックスも含まれています。
さらに、date histogramで負のインターバルの場合に<code>OutOfMemoryError</code>を引き起こすバグも
修正されています。</p>

<p>すべての変更については<a href="http://www.elasticsearch.org/downloads/1-4-4">1.4.4のリリースノート</a>および<a href="http://www.elasticsearch.org/downloads/1-3-9">1.3.9のリリースノート</a>をごらんください。</p>

<h2>フィードバック</h2>

<p>私たちはフィードバックをお待ちしています。
Twitter(<a href="https://twitter.com/elasticsearch">@elasticsearch</a>)もしくは<a href="https://github.com/elasticsearch/elasticsearch/issues">GitHub issues page</a>で教えてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[名古屋でElasticsearch勉強会を開催します]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya/"/>
    <updated>2015-02-18T15:22:53+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/18/preparing-elasticsearch-meetup-in-nagoya</id>
    <content type="html"><![CDATA[<p>来る、4月4日の土曜日の午後に名古屋でElasticsearch勉強会を開催予定です。
「初」の東京以外の勉強会です。</p>

<!-- more -->


<p>Twitterでこのようなツイートを見かけまして。</p>

<blockquote class="twitter-tweet" lang="ja"><p>名古屋でElasticsearchの勉強会やりたい機運（今のところ2人）。</p>&mdash; mogami (@smogami) <a href="https://twitter.com/smogami/status/562864387632136192">2015, 2月 4</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>これは！ということで、名古屋で勉強会をやろうかと思います。30名程度の場所を借りて実施予定です。
募集はいつもの、<a href="http://elasticsearch.doorkeeper.jp">elasticsearch勉強会のDoorkeeper</a>で行う予定です。
ページの準備まで少々待ちください。（おそらく、3月中旬くらい）
私自身はElasticsearchやELKについて話をしようと思っています。そのほかに、2,3名のスピーカーの方を予定しています。
LTなど興味がある人がいたら、連絡ください。</p>

<p>これを機に（？）他の場所でも勉強会を開催したいと考えています。
ニーズがどのくらいありそうなのかが、まだよくわかっていませんが、関西などでニーズがあるんじゃないかと期待していたり。</p>

<p>興味のある方は、コメント欄、Twitterなどでコンタクトしてもらえればと。
（連絡来るとうれしいなぁ。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第8回Elasticsearch勉強会を開催しました。#elasticsearchjp]]></title>
    <link href="http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp/"/>
    <updated>2015-02-16T15:02:23+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/02/16/8th-elasticsearch-jp</id>
    <content type="html"><![CDATA[<p><a href="http://elasticsearch.doorkeeper.jp/events/19923">第8回Elsticsearch勉強会</a>を開催しました。
スタッフの皆さん、スピーカーの皆さん、開場提供していただいた<a href="http://recruit-tech.co.jp">リクルートテクノロジーズさん</a>、ありがとうございました！
次回もよろしくお願いします！参加していただき盛り上げていただいた参加者の皆さんもありがとうございました。</p>

<!-- more -->


<p>今回は出足が好調で、早々に180人の枠を超えるという嬉しい事態でしたが、
キャンセル待ちが残っているにもかからわらず、来られていない方が67名もいるということで、キャンセル待ちの方には申し訳なかったです。
もうすこし、キャンセルをしてもらえると嬉しいんですが。。。
今回はメールを当日に1度しか打ってないからかなぁ。</p>

<p>さて、いつもの通り簡単なメモです。
本当に簡単にですが。</p>

<h2>「Elasticsearch導入チェックリスト？」 Elasticsearch株式会社 Jun Ohtani @johtani</h2>

<p>スライド：<a href="https://speakerdeck.com/johtani/elasticsearchdao-ru-tietukurisuto">Elasticsearch導入チェックリスト？</a></p>

<p>Elasticsearchを開発環境や本番に導入する前に気にかけて欲しいことについて発表しました。
元ネタは<a href="http://www.elasticsearch.org/webinars/elasticsearch-pre-flight-checklist/">elasticsearch pre-flight checklist</a>です。
少々古いのですが、私が今回話した内容以外にもモニタリングなどについての話も盛り込まれています。
時間がある方は、見ていただければと。</p>

<h2>「Elasticsearch クエリとスキーマ定義のすごい細かい話」株式会社ドワンゴ 藤堂淳也 さん</h2>

<p>スライド：<a href="https://speakerdeck.com/jtodo/elasticsearch-kueritosukimading-yi-falsexi-kaihua">Elasticsearch クエリとスキーマ定義のすごい細かい話</a></p>

<ul>
<li>フィールドのチェックを別途インデキシングするアプリで行っている。利用できるものだけElasticsearchに投げる</li>
<li>実際に本番環境で利用しているマッピングに対してフィールドを追加する手順について</li>
<li>「これもドキュメントに書いてあるんですが」という感じでドキュメントに色々書いてあるので読みましょうというありがたい発表でした。</li>
</ul>


<p>実際に試行錯誤したり検証するときに行ったことを喋ってもらえたので、どういった点を気にしながら運用、設計するかというのがわかりやすかったです。</p>

<h2>「ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析」株式会社サイバーエージェント　山田直行さん　@satully</h2>

<p>スライド：<a href="http://www.slideshare.net/Satully/elasticsearch8-elasticsearchkibana-30reqday">ElasticsearchとKibanaで実現する、30億req/dayのリアルタイム分析</a></p>

<p>会場が21時までしか抑えられていないという失態で、ドタバタしてて前半は聞けてないです。。。</p>

<ul>
<li>前回の発表では30日分Elasticsearchに入れていたが、今は3日分のみ保存</li>
<li>レポートなどにはRedshift＋Tableauを利用</li>
<li>Kibana3をメインに使っているが、Kibana4も検討予定？</li>
</ul>


<p>QA
* Q：なぜ、ELBを挟んでいるのか？
  * A：特に考えておいているわけではない。
* Q：インデックスの構成は？
  * A：1日に2つのインデックス。Bitされたもの、入札されないもの
* Q：searchのnodeをやめたのは？
  * A：前回発表した勉強会での懇親会で話を聞いたり、他の方と話を聞いて、不要と判断したため</p>

<h2>「はてなのメディア面を支えるElasticsearch」株式会社はてな　山家雄介さん　@yanbe</h2>

<p>スライド：未定。おそらく、開発者ブログに公開されるかと。</p>

<ul>
<li>アドテク系にもやってるらしい。BrandSafeはてな</li>
<li>はてなブックマークのデータを魅せ方を変える機能などで大活躍。<a href="http://bkuma.hatena.ne.jp">B!KUMA</a>とか</li>
<li>その日の話題の見出し自動生成機能。Significant Terms Aggregationsを利用。</li>
<li>こちらの<a href="http://bookmark.hatenastaff.com/entry/2015/02/05/190331">「自然言語処理技術を用いたはてなブックマークの新機能「トピック」をベータリリースしました」</a>エントリに関係あるのかな？</li>
</ul>


<p>記事の魅せ方を検索できる管理画面ではElasticsearchのクエリDSLを活用されているとのことでした。
検索専門の人でなくても検索式を簡単にくみたてられる画面を用意して、ElasticsearchのクエリDSLに変換するようにしていると。
確かに、クエリをそのまま組み立ててもらうよりも利用しやすい画面がある方がいいですよね。バックエンドはJSとPerlのライブラリとのことでした。</p>

<h2>その他、感想などのブログ</h2>

<ul>
<li><a href="http://takudo.hatenablog.jp/entry/2015/02/14/101749">2015-02-13 第8回 elasticsearch 勉強会 @ 丸の内 リクルート 41Fアカデミーホール</a></li>
<li><a href="http://suzuki.tdiary.net/20150213.html"> [Elasticsearch] 第8回 elasticsearch 勉強会へ参加してきた</a></li>
<li><a href="http://qiita.com/t-sato/items/8e353ccf7d7bba46f635">第8回elasticsearch勉強会 #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://keyamb.hatenablog.com/entry/2015/02/16/015916">第8回 Elasticsearch 勉強会に行ってきた #elasticsearch #elasticsearchjp</a></li>
<li><a href="http://blog.yoslab.com/entry/2015/02/13/203251">勉強会メモ - 第8回elasticsearch勉強会</a></li>
</ul>


<h2>まとめ</h2>

<p>今回も検索からログまでいろんな話になったので、面白かったかと。
参加された方は新しい方が多かったんじゃないかなぁと。（集計結果で見れないのかな、Doorkeeper）。</p>

<p>今回は、みなさんに21時に41Fから33Fへ移動していただくという大失態があったので、大変申し訳なかったです。
次回（4月中旬）は、このようなことがないように気をつけますので、今後もよろしくお願いいたします。</p>

<p>あと、東京以外の勉強会も検討しつつあります。興味のある方はコメントやTwitterで反応をいただけると嬉しいです。</p>

<p>スピーカーは随時募集中ですので、コメント、メール、ツイートなど、コンタクトしていただければと思います。 よろしくお願いいたします。</p>
]]></content>
  </entry>
  
</feed>
