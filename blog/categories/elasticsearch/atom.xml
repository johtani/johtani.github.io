<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: elasticsearch | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-11-02T16:27:41+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shield、Watcher、Marvel 2.0.0 GAリリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/10/30/shield-watcher-and-marvel-2-0-ga-released-ja/"/>
    <updated>2015-10-30T16:21:31+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/10/30/shield-watcher-and-marvel-2-0-ga-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">Shield, Watcher, and Marvel 2.0.0 GA Released</a></p>

<!-- more -->


<p>本日（10/28）Shield、WatcherおよびMarvel 2.0をリリースしました。
これが、<a href="https://www.elastic.co/blog/elasticsearch-2-0-0-released">Elasticsearch 2.0</a>に対応したこれらのプラグインの最初のリリースです。</p>

<p>Elasticsearch 2.0対応のほかに、ShieldとWatcher 2.0は、
セキュリティとアラートを拡張するいくつかの新しい素敵な機能も備えています。</p>

<h2>Shield</h2>

<ul>
<li><p>拡張可能なレルム - Sheild 1.xはユーザ認証のコア的なものを定義するのにフォーカスし
3つの認証メカニズム（<em>esusers</em>、LDAP/AD、PKI）を提供しました。
これらを提供することで、多くのユーザおよびユースケースをカバー出来ましたが、
追加の認証メカニズムを統合する必要があることもわかっていました。
ということで、Shieldのレルムベースの認証システムをユーザが利用、拡張できるようにオープンにし、
ユーザ認証を扱うためのレルム実装をプラグインとして拡張できるようにしました。
特定もしくはプロプライエタリな認証メカニズムが必要なユーザもShieldの強力な
セキュリティ機能（ロールベースの認証、セキュアな通信など）をフルに活用できるようになりました。
カスタムレルムの詳細については、<a href="https://www.elastic.co/guide/en/shield/current/custom-realms.html">こちら</a>をご覧ください。</p></li>
<li><p>フィールドとドキュメントのACL - Shield 2.0はフィールドとドキュメントレベルのアクセス制御機能を提供します。
これは、ロールごとにアクセス可能なフィールドやドキュメントを定義できます。
この新しい機能は、設定の変更するよりも便利です。
このアクセス制御はElasticsearchのLuceneインデックスという最も低レベルで実装されています。
その結果として、このメンテナンスがより簡単であるだけでなく、より良くなっています。
詳細については<a href="https://www.elastic.co/guide/en/shield/current/setting-up-field-and-document-level-security.html">こちら</a>をご覧ください。</p></li>
<li><p>ユーザなりすまし - Shield 2.0で、ユーザなりすましの機能が実装されました。
これは、ユーザ（適切なパーミッションを持った）が、他のユーザになることができ、
それらのユーザのためにリクエストを実行できます。
これは、Elasticsearch上に構築されたアプリケーションがすでにユーザ認証を行いますが、
認可はElasticsearchサイドで行う必要があるような場合に有用です。
このシナリオで、アプリケーションの&#8221;main&#8221;ユーザを設定でき、正しくなりすましを割り当て、
ElasticsearchにアプリケーションユーザとしてリクエストをElasticsearchに実行させることができます。
詳細については、<a href="https://www.elastic.co/guide/en/shield/current/submitting-requests-for-other-users.html">こちら</a>をご覧ください。</p></li>
</ul>


<h2>Watcher</h2>

<ul>
<li><p>SlackとHipChatインテグレーション - SlackとHipChatはチーム/グループコラボレーションツールです。
これらは、急速に主流になり、組織の主な内部コミュニケーションハブとなっています。
Watcher 2.0はチャンネル/ルームやユーザにこれらのコミュニケーションチャネル経由で、Watchの通知を行うことができるアクションを
実装しました。
<a href="https://www.elastic.co/guide/en/watcher/current/configuring-slack.html">slack</a>や<a href="https://www.elastic.co/guide/en/watcher/current/configuring-hipchat.html">hipchat</a>アクションについてはドキュメントをご覧ください。</p></li>
<li><p>Array Compare Condition - 新しいconditionはタイムシリーズのデータのスパイクを検知するのを簡単にします。
<a href="https://www.elastic.co/guide/en/watcher/current/condition.html#condition-compare">compare</a> conditionは1.xで導入されましたが、このコンディションはElasticsearchのダイナミックスクリプト機能を有効にする必要がアンク使えます。
詳細については<a href="https://www.elastic.co/guide/en/watcher/current/condition.html#condition-array-compare">array_compare</a> conditionをご覧ください。</p></li>
<li><p>Watchの有効・無効化 - ユーザからの多かったリクエストとして、Watchの無効化がありました。
1.xには、登録済みのWatchを無効にする機能がありませんでした。
これは、Watchを消すか、Watchのトリガーを変更することで回避していました。
これは、全体としてはWatchを管理するのを難しくする回避方法でしかありません。
2.0では、APIを呼び出すだけで、Watchの変更をすることなく、簡単にWatchの有効化・無効化が可能になりました。
これは1.0からあるべき基本的な機能でしたが、ついにこの問題を解決しました。
詳細は<a href="https://www.elastic.co/guide/en/watcher/current/watch-active-state.html#watch-active-state">こちら</a>をご覧ください。</p></li>
</ul>


<h2>Marvel</h2>

<p>Marvel 2.0を紹介するのに興奮しています。
Kibana 4をベースとした、再設計されたUIを持っています。
Marvel 1.xで学んだ多くのことを導入し、より使いやすく監視しやすいUIになっています。
ShieldとWatcherと同様に、最初のMarvelのリリースは将来的な成長の基盤となり
Elasticsearch2.0を効率的に管理するための主要なメトリックにフォーカスしています。</p>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>再設計により、インタフェースを6ページに減らしています。</p>

<h3>Cluster list</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>ユーザやカスタマーの多くは複数のクラスタを利用しています。
新しいMarvelはそれらを集中的にモニタリングする一つのクラスタからそれらを簡単に監視できます。
各クラスタのデータ送信先をこのモニタリングクラスタにするだけです。</p>

<h3>Cluster Overview</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>クラスタオーバービューはある一つのクラスタの主要な性能メトリックを見ることができ、
素早くスパイクを発見できます。
このページはまた、アクティブなシャードのリカバリやリロケーションも見ることができます。</p>

<h3>Indices List</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>インデックスのリストにはクラスタにあるすべてのインデックスとその属性が表示されます。
テーブルはライブでアップデートされ、フィルタリングやソートも可能です。
一番大きなインデックスは？といったことも調べられます。</p>

<h3>Index Detail</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>インデックス詳細ページはインデックスの主な性能メトリックを見ることができ、シャードの配置についても表示します。</p>

<h3>Nodes List</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>ノードリストはクラスタにあるノードとその主な性能メトリックを見ることができます。
テーブルはライブでアップデートされ、フィルタリングも可能です。
高いCPU利用率やディスクの残り容量なども簡単にわかるようになっています。</p>

<h3>Node Detail</h3>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>ノード詳細ページは個別のノードに関する主な性能メトリックを見ることができ、ノードにあるシャードのリストも見ることができます。</p>

<p>新しいMarvelはKibana 4の上に構築されたので、管理方法が変わっています。
Marvelのインストールは2つのステップがあります。
marvel-agentとmarvel user interfaceです。</p>

<h2>Marvel Agent</h2>

<p>marvel-agentはElasticsearchクラスタにプラグインとしてインストールします。
主なパフォーマンス情報を取得し、ローカルもしくは分離されたモニタリングクラスタにデータを保存・送信します。</p>

<h2>Marvel User Interface</h2>

<p>Marvel UIはKibanaのプラグインとしてインストールします。
これは、Kibana 4.2の新しいプラグインインフラを利用し、
Marvel Appとして、Kibanaのインタフェースとは個別に提供されます。
Kibanaのアプリの切り替えは次の画像の通りです。</p>

<p>画像あり。
<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">※画像に関しては原文をご覧ください。</a></p>

<p>2.0リリースは私たちのプロダクトの大きな一歩です。またユーザの意見を常にお待ちしています。
ぜひ、Webフォーラム（<a href="https://discuss.elastic.co%EF%BC%89%E3%82%84%E3%83%A1%E3%83%BC%E3%83%AB%EF%BC%88info@elastic.co%EF%BC%89%E3%81%A7%E3%81%94%E6%84%8F%E8%A6%8B%E3%82%92%E3%80%82">https://discuss.elastic.co%EF%BC%89%E3%82%84%E3%83%A1%E3%83%BC%E3%83%AB%EF%BC%88info@elastic.co%EF%BC%89%E3%81%A7%E3%81%94%E6%84%8F%E8%A6%8B%E3%82%92%E3%80%82</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 2.0.0リリース(日本語訳)]]></title>
    <link href="http://blog.johtani.info/blog/2015/10/29/elasticsearch-2-0-0-released-ja/"/>
    <updated>2015-10-29T16:20:43+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/10/29/elasticsearch-2-0-0-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/logstash-2-0-0-released">Elasticsearch 2.0.0 GA released</a></p>

<!-- more -->


<p>Elasticsearch 1.0.0のリリース以降、
477のコミッター2,799のpull requestがあった、
<strong>Elasticsearch 2.0.0 GA（Lucene 5.2.1ベース）</strong>をリリースしました。</p>

<p>それだけでなく、<a href="#shield-watcher">Shield（セキュリティプラグイン）とWatcher（アラーティングプラグイン）</a>、
新しくなった<a href="#marvel">Marvel（モニタリングプラグイン）</a>（プロダクション環境でフリー！）、
また、新しくオープンソースとなった<a href="#sense">Sense editor</a>の2.0.0もリリースしました。</p>

<p><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0">Elasticsearch 2.0.0</a>のダウンロードはこちらから。
また、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/breaking-changes-2.0.html">2.0.0での重要な変更点についてはこちら</a>をご覧ください。
全ての変更点については、次をご覧ください。</p>

<ul>
<li><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0">Changes list for Elasticsearch 2.0.0</a></li>
<li><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-rc1">Changes list for Elasticsearch 2.0.0-rc1</a></li>
<li><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta2">Changes list for Elasticsearch 2.0.0-beta2</a></li>
<li><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta1">Changes list for Elasticsearch 2.0.0-beta1</a></li>
</ul>


<p>商用プラグインについてはこちらです。</p>

<ul>
<li><a href="https://www.elastic.co/guide/en/shield/2.0.0/release-notes.html#_2_0_0">Shield 2.0.0 change logs</a></li>
<li><a href="https://www.elastic.co/guide/en/watcher/2.0.0/release-notes.html#_2_0_0">Watcher 2.0.0 change logs</a></li>
</ul>


<h2>Elasticsearchの新機能</h2>

<p>Elasticsearch 2.0.0には素晴らしい新機能があります。</p>

<h4>Pipeline Aggregations</h4>

<p>Aggregationsで導関数や移動平均のような他のAggregationの結果に対する計算が可能となります。
この機能はクライアントサイドで実装しなければなりませんでしたが、
Elasticsearchに計算させることで、より強力な解析のクエリを簡単に組み立て、クライアントのコードを簡略化できます。
これは、予測解析や予測解析や例外検知といった可能性をもたらします。
Pipeline Aggregationについては次をご覧ください。</p>

<ul>
<li><a href="https://www.elastic.co/blog/out-of-this-world-aggregations">Out of this world aggregations.</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-1">Staying in Control with Moving Averages - Part 1.</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-2">Staying in Control with Moving Averages - Part 2.</a></li>
</ul>


<h4>Query/Filter merging</h4>

<p>フィルタはもうありません。
全てのフィルタ条件はクエリとなりました。
クエリコンテキストで使用した場合、関連どのスコアに影響し、フィルタコンテキストで使用した場合、
これまでのフィルタのように、ヒットしなかったドキュメントを除外するだけとなります。
この変更はクエリの実行時に自動的に最も効率的な順序で実行するように最適化されることを意味します。
例えば、遅いクエリ（フレーズやgeo）の最初の実行は速い近似フェーズで実行され、
それから、遅い正確なフェーズで結果を修正します。
フィルタコンテキストでは、直近でよく使われた条件が自動的にキャッシュされます。
詳細については、&#8221;Better query execution coming to Elasticsearch 2.0(<a href="https://www.elastic.co/blog/better-query-execution-coming-elasticsearch-2-0">https://www.elastic.co/blog/better-query-execution-coming-elasticsearch-2-0</a>)&ldquo;をご覧ください。</p>

<h4>設定可能な圧縮率</h4>

<p><code>_source</code>のようなStored fieldsは高速なLZ4（デフォルト）で圧縮するか、インデックスサイズを小さくできるDEFLATE
で圧縮できます。
これは、特にロギングのケースで便利です。
古いインデックスをオプティマイズする前に<code>best_compression</code>に変更することができます。
詳細については&#8221;<a href="https://www.elastic.co/blog/store-compression-in-lucene-and-elasticsearch">Store compression in Lucene and Elasticsearch</a>&ldquo;をご覧ください。</p>

<h4>堅牢に</h4>

<p>新しいElasticsearchはJava Security Managerの元で実行されます。
これは、セキュリティの観点で大きな前進です。
Seciruty ManagerはElastcsearchにより制限をかけ、ハッカーによりシステムに対して何でもできるようなものを制限します。
Elasticsearchはまた、インデキシングの観点でも堅牢になっています。</p>

<ul>
<li>ドキュメントはインデキシングリクエストに答える前に、耐久性のためにディスクに<code>fsync</code>されます。</li>
<li>すべてのファイルはチェックサムにより、早期に障害を検知します。</li>
<li>すべてのファイルはどんなファイルへの書き込みもファイルへの書き込みもアトミックです</li>
</ul>


<p>最後に、システム管理者から要請の多かった変更として、
設定されて居ないノードがパブリックなネットワークから参加しないようになりました。
Elasticsearchは<a href="https://manage.contentstack.io/blog/elasticsearch-unplugged">デフォルトではローカルホストのみにバインド</a>します。マルチキャストは無くなりました。（プラグインとして残っています。）</p>

<h4>パフォーマンスと信頼性</h4>

<p>上記以外にも細かな修正がElasticsearchとLuceneにはあります。
より安定し、信頼性をあげ、簡単に設定できるようにするものです。例えば、次のようなものです。</p>

<ul>
<li>ヒープの使用率の低減（doc valuesがデフォルト、マージ時のメモリ使用率の削減、
roaring bitsetsによるフィルタキャッシュ）</li>
<li>構造化され読みやすくなった例外</li>
<li>設定の代わりに、フィードバックループを使用した自動調整</li>
<li>安全で明確で信頼性のあるタイプマッピングの大きな修正</li>
<li>クラスタ状態の差分変更による伝搬の高速化および、大きなクラスタでのより安定的に</li>
<li>normsの圧縮の改善。これまではヒープスペースを大きく利用していた。</li>
<li>マージの自動的な調整（不可解な設定の微調整が必要ない）</li>
<li>より詳細なLuceneのメモリリポート</li>
<li>最適化されたクエリ実行を活用するためにParent/childを書き換え</li>
</ul>


<h4>コアプラグイン</h4>

<p>公式にサポートされたコアプラグインはElasticsearchと同じバージョン番号で同じタイミングでリリースされます。
インストールするプラグインとElasticsearchの複雑なバージョンの対応表に悩まされる必要はもうありません。
コアプラグインのインストールは次のように簡略化されています。</p>

<pre><code>bin/plugin install analysis-icu
</code></pre>

<h2><a name="shield-watcher">ShieldとWatcherの新機能</a></h2>

<p>商用プラグインも新しい機能をリリースしました。</p>

<h4>Shield</h4>

<ul>
<li>フィールドおよびドキュメントレベルのアクセス制御</li>
<li>ユーザのなりすまし</li>
<li>カスタム拡張可能な認証レルム</li>
</ul>


<h4>Watcher</h4>

<ul>
<li>個別のWatchを有効/無効に</li>
<li>SlackやHipChatへの通知</li>
</ul>


<p>これらの詳細については“<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">Shield, Watcher, and Marvel 2.0.0 GA Released</a>”をご覧ください。</p>

<p>コアプラグイン同様、商用プラグインもElasticsearchのバージョンと同じものが同時にリリースされます。
インストールは次の通りです。</p>

<pre><code>bin/plugin install license
bin/plugin install shield
bin/plugin install watcher
</code></pre>

<h2><a name="marvel">Marvel 2.0.0はプロダクションでの利用もフリーに</a></h2>

<p>Marvelモニタリングプラグインはカスタマに非常に価値のあるもので、
ユーザの発展とともに問題を診断したり見つけたりするのに役に立ってきました。
私たちは、何を改善でき、Mαrvelを一から書き直すことで、いろいろとわかったことがあります。</p>

<ul>
<li>Marvel UIを新しい<a href="https://www.elastic.co/blog/kibana-4-2-0">Kibanaプラットフォーム</a>上に構築</li>
<li>ダッシュボードにはより簡単に問題を発見するために、最も重要なメトリックを可視化</li>
<li>1つのインストールで、複数のクラスタのモニタリングをサポート（商用サポート対象）</li>
</ul>


<p>一番良い点はMarvelがすべてのElasticsearchユーザに対してプロダクション環境でフリーになったことです！
ライセンスが必要ですが、課金の必要はありません。
もし、マルチクラスタモニタリングサポートが必要な場合、それは商用サポート対象となります。</p>

<p>詳細に関しては“<a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">Shield, Watcher, and Marvel 2.0.0 GA Released</a>”をご覧ください。</p>

<h2><a name="sense">Sense editorがオープンソースに</a></h2>

<p>Sense（ブラウザベースのElasticsearchリクエストとDSL向けのエディタ）を
<a href="https://www.elastic.co/blog/kibana-4-2-0">Kibanaプラットフォーム</a>のアプリとして、オープンソースにしました。
また、このリリースで新しい機能が追加されています。</p>

<ul>
<li>複数のcURLリクエストをペースとすると、Sense表記に変更</li>
<li>複数のSenseリクエストをcURL表記にしてコピー</li>
<li>複数のリクエストを一度に実行可能</li>
<li>Elasticsearch 2.0サポートとなった自動補完機能</li>
</ul>


<p>SenseはKibanaのアプリとして次のようにインストールします。</p>

<pre><code>./bin/kibana plugin --install elastic/sense
</code></pre>

<p>Senseの詳細については、&#8221;<a href="https://www.elastic.co/blog/sense-2-0-0-beta1">The Story of Sense - Announcing Sense 2.0.0-beta1</a>&ldquo;をご覧ください。</p>

<h2>Elasticsearch Migration Plugin</h2>

<p>Elasticsearch Migration PluginはElasticsearch 1.xから2.0にアップグレードする時の良い出発点となります。
1.xのElasticsearchクラスタにサイトプラグインとしてインストールすると、
アップグレードする前に解決すべき問題があるかどうかを検知してくれます。
（例えば、Lucene 3のような古いインデックスや、2.0.0にした場合に動作しない問題のある
マッピング（<a href="https://www.elastic.co/blog/great-mapping-refactoring">The Great Mapping Refactoring</a>）のような問題）</p>

<p>プラグインに関して<a href="http://github.com/elastic/elasticsearch-migration">Elasticsearch Migration repository</a>をご覧ください。</p>

<h2>まとめ</h2>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0">Elasticsearch 2.0.0</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)や<a href="https://discuss.elastic.co/c/elasticsearch">Webフォーラム</a>などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release, we have（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/10/29/release-we-have-ja/"/>
    <updated>2015-10-29T14:18:59+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/10/29/release-we-have-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/release-we-have">Relase, we have</a>
※画像に関しては原文をご覧ください。</p>

<!-- more -->


<p>Elasticにとって大きな1日（社内では「release bonanza」と呼んでいる）です。
多くの主要なプロダクトを新たにリリースしました。
そして、本日、それらを一緒に利用する時にそれらを一緒に利用する時にユーザの体験についてまとめてみました。</p>

<p>次の通りです。</p>

<p><a href="https://www.elastic.co/blog/elasticsearch-2-0-0-released">Elasticsearch 2.0</a>リリース。
大きなマイルストーン、チームによる改善、そして、コミュニティからの素晴らしい貢献。
Pipeline Aggsと呼ばれる新しいタイプのaggregations、
クエリとフィルタのコンセプトを統合することにより簡素化されたクエリDSL、
better compressionオプション、
JavaのSecurity Managerを有効にすることによる強化されたセキュリティ、
FSの挙動に関する強化（fsync、checksum、atmicなリネーム）、
パフォーマンス、マッピングの挙動の一貫性などなどです。
また、我々のチームによる改善も含まれているLucene 5ベースにアップグレードしています。</p>

<p><a href="https://www.elastic.co/blog/kibana-4-2-0">Kibana 4.2</a>リリース。
Elasticsearch 2.0対応、ダークテーマ、カスタマイズ可能な地図、多くの改善。
Kibana 4.2の多くに作業については外部プラグインサポートといった、内蔵に関するものでした。
この後の説明に続きます。</p>

<p><a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">Marvel 2.0</a>リリース。
Elasticsearch 2.0対応、合理化されたメトリックス、簡素化されたUI、
多くはKibanaプラグイン（Kibanaプラットフォーム上に構築）としての書き換えです。
このKibana拡張の最初の努力は、Kibanaのプラグインをどうやって書くか、
Kibanaユーザに公式に何をする必要があるかといったものを特定するのに役立ちました。
おっと、忘れるところでした、Marvelを全てのユーザにフリーで使えるようにしました。
マルチクラスタサポートについては有償となります。</p>

<p><a href="https://www.elastic.co/blog/sense-2-0-0-beta1">Sense 2.0</a>リリース。
2つ目のKibanaプラグインがこれです。
SenseをKibanaプラグインとして書き換えました。
Elasticsearch 2.0サポート、複数リクエストの実行、
curlへのコピーなどです。
おっと、忘れるところでした。オープンソースとすることにしました！</p>

<p><a href="https://www.elastic.co/blog/shield-watcher-and-marvel-2-0-ga-released">Shield + Watcher 2.0</a>リリース。ElasticsearchのためのセキュリティプラグインであるShieldと、アラート管理のためのプラグインであるWatcherにも
多くの結果が入っています。
最も要求のあった機能である、フィールドお呼びドキュメントレベルでのセキュリティについて、Luceneに落とし込んで実装しました。
また、セキュリティの操作についてプラガブルに実装できるように変更しました。
Watcherは監視の無効化、SlackやHipChatへの通知（bot ops向け）が可能です。</p>

<p><a href="https://www.elastic.co/blog/logstash-2-0-0-released">Logstash 2.0</a>リリース。
Elasticsearch 2.0のサポート、クリーンな停止、全面的なパフォーマンス改善、<a href="https://www.elastic.co/products/beats">Beats</a>サポート。</p>

<p>ご覧の通り、すべてのプロダクトに関する大きな結果です。
チーム間およびFoundの開発者との間での密な連携に感謝します。
これらが私たちが公式にElasticsearch / Kibanaをホストしている<a href="https://www.elastic.co/found">Found</a>で
利用可能です。</p>

<p>ひゅう、息切れしました。
チームがしてきたことは、感動的で、謙虚で、刺激的です！
Elasticが会社として、全てのユーザ、コントリビュータがどのように私たちの大きなミッションに対する結果をもたらしたかという素晴らしい良い例です。
ユーザに愛され、楽しまれ、成功に導き、革新させる製品を是非ご利用ください。ありがとうございます。</p>

<p>&ldquo;A Lion, in Africa?&rdquo; - まだまだ終わりではありません。この文言で終わりにしますが、すぐに（本当にすぐに）戻ってきます。;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 2.0.0-beta2リリース（日本語訳）]]></title>
    <link href="http://blog.johtani.info/blog/2015/09/18/elasticsearch-2-0-0-beta2-released-ja/"/>
    <updated>2015-09-18T17:31:41+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/09/18/elasticsearch-2-0-0-beta2-released-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-2-0-0-beta2-released">Elasticsearch 2.0.0-beta2 released</a></p>

<p>本日（9/17）、<strong>Lucene 5.2.1</strong>ベースの<strong>Elasticsearch 2.0.0-beta2</strong>をリリースしました。
本リリースが2.0.0のRCの前の最後のベータリリースになります。</p>

<p><strong>注意事項</strong>
本リリースはベータリリースであり、テストを目的としたものとなります。
Elasticsearch 2.0.0-beta2はElasticsearch 2.0.0-beta1と互換がありません。
また、Elasticsearch 2.0.0 GAと互換性があるかどうかの保証はありません。</p>

<p><strong>本番環境には利用しないでください。</strong></p>

<!-- more -->


<p><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta2">Elasticsearch 2.0.0-beta2のダウンロードおよび、すべての変更についてはリンク</a>をごらんください。</p>

<p>2.0.0-beta1をテストし、問題点を報告していただいた皆様、ありがとうございます。
2.0.0-beta1のあとのElasticsearchのコアの部分の修正のほとんどはバグフィックスになりますが、
<a href="https://github.com/elastic/elasticsearch/pull/12893">geo_shapeフィールドの<code>points_only</code>最適化</a>のようなちょっとした改善も含んでいます。</p>

<p>また、本リリースでは、商用プラグインの重要な新機能もあります。
こちらについては<a href="https://www.elastic.co/blog/shield-and-watcher-2.0.0-beta2-released">Shield and Watcher 2.0.0-beta2 released</a>をごらんください。
簡単な紹介は次の通りです。</p>

<h3>Shieldの新機能</h3>

<h5>ドキュメントおよびフィールドレベルのセキュリティ</h5>

<p>Shieldは、クエリを利用したインデックスにあるドキュメントへのアクセスを制御するためのロールを定義できるようになりました。
また、ドキュメントにある特定のフィールドに関するアクセス制限も可能です。
フィルタされたエイリアスのような形ではなく、ドキュメントを検索したり、IDで取得したりする場合にこれらの制限が利用できます。
詳細は<a href="https://www.elastic.co/guide/en/shield/2.0.0-beta2/setting-up-field-and-document-level-security.html">Field- and Document-level Security</a>をごらんください</p>

<h5>ユーザなりすまし</h5>

<p>特定のユーザーに他のユーザーに扮して、彼らのためにリクエストを実行する能力を与えることが、現在できます。
これは、認証がアプリケーションによって実行される場合に便利です。
そして、それは、ユーザの許可レベルを考慮するようにElasticsearchにリクエストします。
詳細は<a href="https://www.elastic.co/guide/en/shield/2.0.0-beta2/submitting-requests-for-other-users.html">Submitting Requests for Other Users</a>をごらんください。</p>

<h5>プラガブルな認証レルム</h5>

<p>このリリースで、サードパーティの拡張のための認証レルムのインフラを公開しました。
もし、特定の認証要求があり、Shieldがサポートしていない（が、内部の認証管理システムを使いたいような）場合、
これらの要求に見合う新しい認証レルムを利用するプラグインを作成可能です。
詳細は<a href="https://www.elastic.co/guide/en/shield/2.0.0-beta2/custom-realms.html">Custom Realms</a>をごらんください。</p>

<h3>Watcherの新機能</h3>

<h5>監視の一時</h5>

<p>新しく、<code>active</code> / <code>inactive</code> の状態がwatchに追加されました。
これらは、Watchを中断したり、要求に応じて再開させたりできます。
詳しくは、<a href="https://www.elastic.co/guide/en/watcher/2.0.0-beta2/watch-active-state.html">Active State</a>をごらんください。</p>

<h5>チャットのための新しいアクション</h5>

<p><code>slack</code>と<code>hipchat</code>アクションが追加されました。
これは、Watcherが通知を、SlackやHipchatのユーザに直接送ったり、
チームのチャットルームに送ったりすることが出来るようにします。
詳細については、<a href="https://www.elastic.co/guide/en/watcher/2.0.0-beta2/actions.html#actions-slack">Slack action</a>および、<a href="https://www.elastic.co/guide/en/watcher/2.0.0-beta2/actions.html#actions-hipchat">Hipchat action</a>をごらんください。</p>

<h2>2.0に関するこれまでのブログ記事</h2>

<p>これまでのリリースについての情報はこれらのブログ記事をごらんください。</p>

<ul>
<li><a href="https://www.elastic.co/blog/elasticsearch-2-0-0-beta1-released">Elasticsearch 2.0.0.beta1 released</a></li>
<li><a href="https://www.elastic.co/blog/elasticsearch-2.0.0.beta1-coming-soon">Elasticsearch 2.0.0.beta1 coming soon!</a></li>
<li><a href="https://www.elastic.co/blog/great-mapping-refactoring">The Great Mapping Refactoring</a></li>
<li><a href="https://www.elastic.co/blog/store-compression-in-lucene-and-elasticsearch">Store compression in Lucene and Elasticsearch</a></li>
<li><a href="https://www.elastic.co/blog/better-query-execution-coming-elasticsearch-2-0">Better query execution coming to Elasticsearch 2.0</a></li>
<li><a href="https://www.elastic.co/blog/out-of-this-world-aggregations">Out of this world aggregations</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-1">Staying in Control with Moving Averages - Part 1</a></li>
<li><a href="https://www.elastic.co/blog/staying-in-control-with-moving-averages-part-2">Staying in Control with Moving Averages - Part 2</a></li>
<li><a href="https://www.elastic.co/blog/core-delete-by-query-is-a-plugin">The Delete by Query API Is now a plugin</a></li>
<li><a href="https://www.elastic.co/blog/elasticsearch-unplugged">Elasticsearch unplugged - Networking changes in 2.0</a></li>
</ul>


<p>また、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/index.html">Elasticsearch 2.0.0-beta2のドキュメント</a>や<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/breaking-changes-2.0.html">2.0のbreaking changesのリスト</a>もごらんください。</p>

<h2>Elsticsearch Migration Plugin</h2>

<p>Elasticsearch Migration Pluginは、既存のインデックスをアップグレードする
必要があるか、他に必要な行動がないかについて、Elasticsearch
2.0.0-beta2を試す前に確認する助けとなります。
Lucene 3のような古いインデックスや、2.0.0にした場合に動作しない問題のある
マッピングのような問題を発見できます。</p>

<p>プラグインの動作に関しては<a href="Elasticsearch%20Migration%20repository">Elasticsearch Migration repository</a>をごらんください。</p>

<h2>テストしましょう！</h2>

<p>Elasticsearch 2.0.0 GAをすぐにリリースできるようにより多くのベータテスターをお待ちしています。</p>

<p>ぜひ、<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0-beta2">Elasticsearch 2.0.0-beta2</a>をダウンロードして、試してみてください。
そして、感想をTwitter(<a href="https://twitter.com/elastic">@elastic</a>)や<a href="https://discuss.elastic.co/c/elasticsearch">Webフォーラム</a>などで教えて下さい。
また、問題がありましたら、<a href="https://github.com/elastic/elasticsearch/issues">GitHub issues page</a>で報告をお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch unplugged - 2.0におけるネットワークの変更(日本語訳)]]></title>
    <link href="http://blog.johtani.info/blog/2015/08/28/elasticsearch-unplugged-ja/"/>
    <updated>2015-08-28T12:01:30+09:00</updated>
    <id>http://blog.johtani.info/blog/2015/08/28/elasticsearch-unplugged-ja</id>
    <content type="html"><![CDATA[<p><strong>※この記事は次のブログを翻訳したものになります。</strong></p>

<p>原文：<a href="https://www.elastic.co/blog/elasticsearch-unplugged">Elasticsearch unplugged - Networking changes in 2.0</a></p>

<p>Elasticsearchをローカルのマシンで起動します。
そして、昨日試したデータを削除するために<code>DELETE *</code>を実行します。
すると、悲しそうな叫びを同僚が発していることに気づき、なぜそんなことになっているのか不思議に思うでしょう。。。</p>

<!-- more -->


<p>Elasticsearchはいつも、親しみやすいものでした。
複数ノードのクラスタがどのように機能するのかをテストするには、
ローカルのマシンでいくつかのElasticsearchのインスタンスを起動するだけでした。
起動したインスタンスはマルチキャストを利用して自動的にお互いを見つけて、1つのクラスタになり、負荷を共有し始めます。
しかし、これは親しみやすすぎました。
カンファレンスなどで、ローカルのマシンでElasticsearchを起動してみてください。
すると100ノードのクラスタに参加しているのがすぐにわかるでしょう。</p>

<p>もうすぐリリースされる、2.0.0-beta1では、Elasticsearchが通信先を選択するネットワークの機能に関する変更があります。
ただし、これまで通り、簡単に開発者が経験できる機能も残っています。</p>

<h2>localhostへのバインド</h2>

<p>以前、Elasticsearchはデフォルトで、利用可能なネットワークインタフェース全てにバインドしていました。
そこから、一番適したインタフェースを<code>publish_host</code>として選択しようとします。
このアドレスはElasticsearchがクラスタの他のノードとやりとりするためのアドレスです。</p>

<p>Elasticsearch 2.0では、デフォルトでは、<code>localhost</code>にのみバインドします。
<code>127.0.0.1</code>（IPv4）と<code>[::1]</code>（IPv6）の両方にバインドしようとします。
また、どちらかのみの環境でも動作します。
この変更は、特に指定がない限り、Elasticsearchがネットワーク上の他のノードと接続しません。
本番環境に移行する場合は、<code>network.host</code>パラメータを使って設定しましょう。
設定は、<code>elasticsearch.yml</code>に記述するか、コマンドラインで指定します。</p>

<pre><code>bin/elasticsearch --network.host 192.168.1.5
bin/elasticsearch --network.host _non_loopback_
</code></pre>

<p><code>network.host</code>の全てのオプションについては、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-network.html">network settingsのドキュメント</a>をごらんください。</p>

<h2>マルチキャストは廃止</h2>

<p>Elasticsearch 1.xはネットワークの他のノードに接続・探索するためにマルチキャストを使用しました。
マルチキャストは魔法のような挙動です。。。
残念ながら、マルチキャストのサポートは良くも悪くもあります。
Linuxはローカルホストでマルチキャストの待ち受けをしていません。
OS/Xは構成されたアドレスの全てのインタフェースにマルチキャストで配信できます。
また、ネットワークによってはマルチキャストはデフォルトでは使用できなくなっています。</p>

<p>Elasticsearch 2.0は異なるアプローチを採用しました。
マルチキャストを廃止します（ただし、新たにプラグインとして提供します）。
代わりに、ローカルホストでは、Elasticsearchは<code>transport.tcp.port</code>で指定されている範囲（デフォルトは<code>9300-9400</code>）の最初の5ポートに対してユニキャストを使用できるようにします。</p>

<p>これは、開発者のための、設定することなく自動的にクラスタを組むという機能を残しています。
しかし、本番に移行するときは、<a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-discovery-zen.html#unicast">unicast hosts</a>で次のようにリストを指定する必要があります。</p>

<pre><code>discovery.zen.ping.unicast.hosts: [ 192.168.1.2,  192.168.1.3 ]
</code></pre>

<p>unicast hostsとしてクラスタにあるノードの全てのリストを指定する必要はありません。
少なくとも、マスタノードとして選出されるべきものを指定します。
巨大なクラスタでは、3つの専用のマスタノードを持っており、この3つをunicast hostsとして設定することを推奨しています。</p>

<p>これにより、開発の知識・経験が、私たちの推奨する本番でのネットワーク設定に、より近いものとなります。</p>

<h2>ノード情報の変更</h2>

<p>最後に、<code>inet[/127.0.0.1:9200]</code>といったシンタックスを廃止します。
これは、Elasticsearchが<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-info.html">nodes-info API</a>などで、使用していたIPアドレスのためのシンタックスです。
今は、RFCに準拠した形で表示します。
<code>127.0.0.1:9200</code>（IPv4）や<code>[::1]:9200</code>（IPv6）のようにです。</p>

<p>質問がある場合は、<a href="https://discuss.elastic.co/c/elasticsearch">ElasticsearchのWebフォーラム</a>で質問してください。ベータはもうすぐです！（翻訳した時点で、すでにベータリリースされています。）</p>
]]></content>
  </entry>
  
</feed>
