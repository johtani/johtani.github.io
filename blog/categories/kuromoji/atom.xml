<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: kuromoji | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/kuromoji/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2015-07-22T17:25:20+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 0.90.8がリリースされました＆注意点（2013/12/20追記）]]></title>
    <link href="http://blog.johtani.info/blog/2013/12/20/release-elasticsearch-0-90-8/"/>
    <updated>2013-12-20T16:24:00+09:00</updated>
    <id>http://blog.johtani.info/blog/2013/12/20/release-elasticsearch-0-90-8</id>
    <content type="html"><![CDATA[<p>昨夜、Elasticsearchの0.90.8がリリースされました。</p>

<p>リリースされた内容などについては、本家のブログ「<a href="http://www.elasticsearch.org/blog/0-90-8-released/">0.90.8 released</a>」をご覧いただくこととして。
1点注意したほうが良い点があります。</p>

<!-- more -->


<p><a href="https://github.com/elasticsearch/elasticsearch-analysis-kuromoji">elasticsearch-analysis-kuromoji</a>を利用している場合は、0.90.8に対応したバージョンがリリースされるのを待つ必要があります。</p>

<p>elasticsearch 0.90.8はLuceneのバージョンが4.6.0に変更されています。
Lucene 4.6.0では、TokenStreamというTokenizerのI/Fに変更があり、Tokenizerの実装を変更する必要があります。</p>

<p>現時点（2013年12月19日現在）のelasticsearch-analysis-kuromojiの1.6.0にはlucene-analyzers-kuromoji-4.5.1.jarが含まれており、この部分でI/Fが異なるためエラーが発生してしまいます。
プラグインをインストールする時点ではエラーは発生せず、実際にKuromojiのTokenizerやAnalyzerを利用するタイミングでエラーが出ます。
以下、0.90.8にanalysis-kuromojiの1.6.0をインストールした状態で<code>_analyze</code>を実行した時のエラー。</p>

<pre><code>curl -XPOST 'localhost:9200/_analyze?tokenizer=kuromoji_tokenizer&amp;filters=kuromoji_baseform&amp;pretty' -d '寿司が美味しかった'
{
  "error" : "IllegalStateException[TokenStream contract violation: reset()/close() call missing, reset() called multiple times, or subclass does not call super.reset(). Please see Javadocs of TokenStream class for more information about the correct consuming workflow.]",
  "status" : 500
}
</code></pre>

<p>ということで、1.7.0がリリースされるのを待つか、自分で<code>mvn package</code>してビルドする必要があります。
他にも独自でTokenizerなどを造られている方は注意が必要かと。</p>

<p>たぶん、すぐにリリースされるんじゃないかなぁと。</p>

<p><strong>2013/12/20追記</strong></p>

<p>とりあえず、masterブランチが0.90.8に変更されたみたいです。(と書いてるそばから、1.7.0がリリースされました)
ということで、0.90.8では1.7.0を使うとエラーが出ないです。
（あと、踊り字対応のcharfilterも追加されたみたいです）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日本語Wikipediaをインデクシング（Kuromojiバージョン）]]></title>
    <link href="http://blog.johtani.info/blog/2013/09/03/ja-wikipedia-with-kuromoji/"/>
    <updated>2013-09-03T01:15:00+09:00</updated>
    <id>http://blog.johtani.info/blog/2013/09/03/ja-wikipedia-with-kuromoji</id>
    <content type="html"><![CDATA[<p><a href="/blog/2013/08/23/index-wikipedia-ja-to-elasticsearch">前々回紹介した、日本語Wikipediaのデータをインデックス登録する記事</a>の続きです。</p>

<!-- more -->


<p>今回は、Kuromojiのアナライザを利用してインデックス登録してみます。</p>

<h2>余談（Proxy環境でのプラグインインストール）</h2>

<p>ElasticSearchのpluginコマンドはJavaで実装されています。（<a href="https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/plugins/PluginManager.java#L315">org.elasticsearch.plugins.PluginManager</a>）
プラグインのダウンロードには、java.net.URL.openConnection()から取得URLConnectionを使用しています。</p>

<p>ですので、pluginのインストールを行う際に、Proxy環境にある場合は以下のようにコマンドを実行します。</p>

<pre><code>./bin/plugin -DproxyPort=ポート番号 -DproxyHost=ホスト名 -i elasticsearch/elasticsearch-analysis-kuromoji/1.5.0
</code></pre>

<h2>elasticsearch-analysis-kuromojiのインストール</h2>

<p>WikipediaのデータをKuromojiを使って、形態素解析ベースの転置インデックスを作成していきます。
まずは、Kuromojiを利用するために、<a href="https://github.com/elasticsearch/elasticsearch-analysis-kuromoji">Analysisプラグイン</a>のインストールです。
ElasticSearchのバージョンに対応したプラグインのバージョンがあります。（プラグインのページに対応したバージョンの記載あり）
今回はElasticSearchの0.90.3を利用しているため、1.5.0をインストールします。</p>

<pre><code>./bin/plugin -i elasticsearch/elasticsearch-analysis-kuromoji/1.5.0
</code></pre>

<p>インストール後は再起動しておきます。
なお、Kuromojiを利用して、Wikipediaのデータを登録するばあい、デフォルトの設定では、ヒープが足りなくなるおそれがあります。
ElasticSearchの起動時に以下のオプションを指定して、最大ヒープサイズを2Gとしておきます。</p>

<pre><code>export ES_HEAP_SIZE=2g;./bin/elasticsearch
</code></pre>

<h2>Indexの作成（デフォルトでKuromojiのAnalyzerを利用する）</h2>

<p>Wikipediaのデータを登録する際に、Kuromojiのアナライザを利用したいのが今回の趣旨でした。
一番ラクな方法として、Wikipediaデータのインデックスの設定として、デフォルトのアナライザをKuromojiにしてしまいます。
（きちんと設計する場合は、必要に応じてフィールドごとに指定しましょう）</p>

<pre><code>curl -XPUT 'localhost:9200/ja-wikipedia-kuromoji' -d '{
    "settings": {
        "analysis": {
            "analyzer": {
                "default" : {
                    "type" : "kuromoji"
                }
            }
        }
    }
}'
</code></pre>

<p>これでkuromojiのアナライザがデフォルトで利用される形となります。
あとは、Riverを起動して登録するだけです。</p>

<h2>Riverの実行</h2>

<p>前回と一緒です。
インデックス名（<strong><em>river/&lt;インデックス名>/</em>meta</strong>）だけは、先ほど作成した「<code>ja-wikipedia-kuromoji</code>」に変更してください。</p>

<pre><code>curl -XPUT localhost:9200/_river/ja-wikipedia-kuromoji/_meta -d '
{
    "type" : "wikipedia",
    "wikipedia" : {
        "url" : "file:/home/johtani/src/jawiki-latest-pages-articles.xml"
    },
    "index" : {
        "bulk_size" : 10000
    }
}'
</code></pre>

<p>あとは、インデックスされるのを待つだけです。</p>

<h2>データ量とか</h2>

<p>5.8gbになりました。Kuromojiを利用したため、形態素解析により単語にきちんとトークないずされた結果でしょう。
Uni-gramだと、転置インデックスのボキャブラリも単語に対してヒットするドキュメント数も大きくなるため、
インデックスサイズも大きくなっているのかと。</p>

<p>検索クエリのサンプルなどはまた後日。（夜遅いので。。。）</p>
]]></content>
  </entry>
  
</feed>
