<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: puppet | @johtaniの日記 2nd]]></title>
  <link href="http://blog.johtani.info/blog/categories/puppet/atom.xml" rel="self"/>
  <link href="http://blog.johtani.info/"/>
  <updated>2016-12-31T23:58:42+09:00</updated>
  <id>http://blog.johtani.info/</id>
  <author>
    <name><![CDATA[johtani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[すずけんさんのメモを元にVagrantでElasticsearchクラスタを起動してみた]]></title>
    <link href="http://blog.johtani.info/blog/2014/02/06/es-cluster-start-using-vagrant-and-puppet/"/>
    <updated>2014-02-06T23:09:00+09:00</updated>
    <id>http://blog.johtani.info/blog/2014/02/06/es-cluster-start-using-vagrant-and-puppet</id>
    <content type="html"><![CDATA[<p>すずけんさんがVagrant+puppet使って、VM起動してElasticsearchのクラスタを組んでる記事を書いているのを見て、試してみたくなりました。
ということで、VagrantとかPuppetなに？くらいの私ですが、クラスタを起動するところまで行ったので、その時のメモを残しておきます。</p>

<!-- more -->


<h2>元記事とか参考</h2>

<ul>
<li><a href="http://suzuken.hatenablog.jp/entry/2014/02/04/215959">Vagrant環境にpuppet moduleを利用してさくっとelasticsearchをインストールする</a></li>
<li><a href="http://suzuken.hatenablog.jp/entry/2014/02/05/232543">Vagrant環境にpuppetを利用してさくっとelasticsearchのclusterを作成する</a></li>
<li><a href="https://github.com/elasticsearch/puppet-elasticsearch">puppet-elasticsearch</a></li>
</ul>


<h2>なんとなくの理解</h2>

<p>VagrantやPuppetについては、何度か勉強会で話を聞いてはいたのですが、
想像していたレベルだったので良い機会でした。
今のところの認識はこんな感じです。</p>

<h3>Vagrant</h3>

<p>VMを起動したり、VM周りの設定をあれこれできるツール。
VMのネットワーク設定や、インスタンス名？などを指定できる。</p>

<h3>Puppet</h3>

<p>起動後のVM（VMとは限らないか。）のゲストOS側の設定周りやアプリのインストールなどを
実行できるツール。</p>

<h2>詰まった箇所</h2>

<p>すずけんさんのブログを元に作業をしましたが、自分がVagrantやPuppetに疎いため、以下の部分で躓いたので、備忘録のために残しておきました。</p>

<h3>その１：Puppetのファイルの場所</h3>

<p><code>search01.vm.local</code>のVMを設定（というか、elasticsearchのインストール？）するときに、<code>manifests/search.app</code>と<code>roles/search/manifests/init.pp</code>ファイルが必要で作成します。</p>

<p>このファイルの配置場所は<code>/vagrant</code>配下に作成する必要がありました。
<code>ssh search01.vm.local</code>でVMにログインした場合は<code>/home/vagrant</code>にログインしており、この場所でファイルを作ってもPuppetがエラーを吐いたためです。</p>

<p><strong>と思ったのですが</strong>、あれ？これひょっとしてVagrantfileがあるところにディレクトリとファイル作ると勝手にVMにコピーしてくれるんですか？destroyして、upしたら、ファイルが勝手にコピーされてる。ひょっとして、<code>/vagrant</code>ってディレクトリはVagrantfileがあるディレクトリを共有してたりするのかな？そのうち、Vagrantについても調べてみようかな。</p>

<h3>その２：ネットワーク周り</h3>

<pre><code>curl http://192.168.10.114:9200/
</code></pre>

<p>をホストOSから実行してみましたがうまく行きませんでした。。。
ネットワーク周りの設定だと思うんですが。
少なくとも「sshによるログイン」「ping」コマンドの応答は返ってきてます。</p>

<p>また、VM内でcurlコマンドを実行したらレスポンスが返ってきました。</p>

<p>なんで？ってツイートしたら各所から「iptables」という単語が飛んできて、
service止めたら大正解でした。まぁ、そうですよね。基本ですよね。。。</p>

<p>ということで、Puppetがよくわかっていませんが、ググって変更してみました。</p>

<p><code>manifests/search.app</code>に以下を追加</p>

<pre><code>include iptables
</code></pre>

<p><code>roles/iptables/manifests/init.pp</code></p>

<pre><code>class iptables {
  service { 'iptables':
    enable =&gt; false,
    ensure =&gt; stopped,
  }
}
</code></pre>

<p>iptablesを停止するmanifests？です（良くないことなんですが、よくわかってない）。</p>

<p>ということで、ローカルで1個のVM起動して、elasticsearchにアクセスできることは確認できました。</p>

<p>と、書いてるそばから、元記事が修正されてしまいましたｗ</p>

<h2>クラスタ編（変更点）</h2>

<p>クラスタを組むときに、追加でプラグインを入れたので<code>roles/search/manifests/init.pp</code>は次のようにしました。</p>

<pre><code>class search {
  class { 'elasticsearch':
    package_url =&gt; 'https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.0.0.RC2.noarch.rpm',
    java_install =&gt; true,
    config =&gt; {
      'cluster' =&gt; {
        'name' =&gt; 'test-es-cluster'
      },
      'network.host' =&gt; '_eth1:ipv4_',,
      'marvel.agent.exporter.es.hosts' =&gt; ['192.168.10.114:9200','192.168.10.115:9200']
    }
  }

  elasticsearch::plugin{'elasticsearch/marvel/latest':
    module_dir =&gt; 'marvel'
  }

  elasticsearch::plugin{'mobz/elasticsearch-head':
    module_dir =&gt; 'head'
  }

  elasticsearch::plugin{'royrusso/elasticsearch-HQ':
    module_dir =&gt; 'HQ'
  }

  elasticsearch::plugin{'elasticsearch/elasticsearch-analysis-kuromoji/2.0.0.RC1':
    module_dir =&gt; 'analysis-kuromoji'
  }

  elasticsearch::plugin{'info.johtani/elasticsearch-extended-analyze/1.0.0.RC1':
    module_dir =&gt; 'extended-analyze'
  }

  elasticsearch::plugin{'polyfractal/elasticsearch-inquisitor':
    module_dir =&gt; 'inquisitor'
  }
}
</code></pre>

<p>とりあえず、今日はクラスタ組んでMarvelやプラグインの動作確認でおしまいです。</p>

<h2>疑問点</h2>

<p>いくつか疑問点が。試してみてもないんでなんとも言えませんが。気が向いたら、調べて追記するかも。</p>

<ul>
<li><code>:private_network</code>はVirtualBox内で完結する（Macから外には影響しない）ネットワークが構築される？たぶん、VagrantというよりはVM、仮想化周りの知識なんだろうけど</li>
<li>どこから再開可能？elasticsearch.ymlの設定を書き換えた場合に、最後のコマンドだけ実行するとちゃんとやりなしてくれたりするのかな？</li>
<li>VMのディスク増やすのもVagrantでできるんかな？まぁ、できると思うけど。</li>
<li><code>:forwarded_port</code>のauto_correctとかわかってない。</li>
<li>JVMをSunのJVMでかつ、7u25に変更したいのだがどうしたものか？(現時点での推奨バージョン)</li>
</ul>


<h2>感想</h2>

<p>Vagrantって便利ですね。あれ？って思ったら、destroyして、やり直すのがすごく簡単です。
元記事があるので、なんとなくですが、構成とかどうすればいいかがわかるのは本当に助かりました。
これで、あれこれと検証する環境が簡単に構築できることがわかったので、色々と楽できるかも。ありがとうございます、すずけんさん！</p>
]]></content>
  </entry>
  
</feed>
